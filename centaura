-- Защита от повторного запуска
if getgenv().SSLKinUniLoaded then
    warn("SSLKin Uni Script уже запущен!")
    return
end
getgenv().SSLKinUniLoaded = true

-- Основные сервисы
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Teams = game:GetService("Teams")
local Debris = game:GetService("Debris")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = Workspace.CurrentCamera

-- Определение игры
local currentGame = "Centaura"
local gameSpecificFeatures = {}

-- Переменные состояния
local isFlying = false
local flySpeed = 50
local isNoclipActive = false
local espEnabled = false
local infiniteJumpEnabled = false
local speedEnabled = false
local jumpEnabled = false
local walkSpeed = 16
local jumpPower = 50
local fullBrightEnabled = false
local noFogEnabled = false

-- Centaura специфические переменные
local aimbotEnabled = false
local aimbotFOV = 90
local aimbotSmoothness = 5
local aimbotTargetPart = "Head"
local aimbotVisibleOnly = true
local aimbotTeamCheck = true
local showFOVCircle = false
local aimbotPrediction = false
local aimbotPredictionStrength = 1.0

-- ESP настройки
local espSettings = {
    enabled = false,
    boxes = true,
    chams = false,
    names = false,
    distance = false,
    health = false,
    healthBar = false,
    tracers = false,
    teamCheck = true,
    enemyColor = Color3.fromRGB(255, 0, 0),
    allyColor = Color3.fromRGB(0, 255, 0),
    nameColor = Color3.fromRGB(255, 255, 255),
    tracerColor = Color3.fromRGB(0, 255, 0),
    -- Настройки HP бара
    healthBarPosition = "Top", -- Top, Bottom, Left, Right
    healthBarSize = 120, -- Длина/ширина в процентах от размера игрока
    healthBarThickness = 2, -- Толщина полоски
    healthBarBackground = Color3.fromRGB(60, 60, 60),
    healthBarForeground = Color3.fromRGB(0, 255, 0),
    healthBarLowHealth = Color3.fromRGB(255, 255, 0),
    healthBarCriticalHealth = Color3.fromRGB(255, 0, 0)
}

-- ESP объекты и Drawing объекты
local espObjects = {}
local drawingObjects = {}
local playerChams = {} -- Отдельное хранилище для чамсов

-- FOV Circle
local fovCircle = nil

-- Система конфигов
local configs = {}
local currentConfig = "Default"

-- Умная система сохранения для разных эксплойтов
local HttpService = game:GetService("HttpService")

-- Настройки сохранения
local CONFIGS_FOLDER = "SSLKinConfigs"
local storageMethod = "none"
local storageInfo = ""

-- Определяем эксплойт
local executorName = "Unknown"
if KRNL_LOADED then
    executorName = "KRNL"
elseif syn then
    executorName = "Synapse X"
elseif getgenv().SOLARA_LOADED or getgenv().solara then
    executorName = "Solara"
elseif FLUXUS_LOADED then
    executorName = "Fluxus"
elseif getgenv and getgenv().is_sirhurt_closure then
    executorName = "SirHurt"
end

print("SSLKin: Определен эксплойт:", executorName)

-- Проверяем разные методы сохранения
local function detectStorageMethods()
    -- 1. Проверяем файловую систему
    local fileSuccess = pcall(function()
        if not (isfolder and writefile and readfile and delfile and isfile) then 
            return false 
        end
        
        if not isfolder(CONFIGS_FOLDER) then
            makefolder(CONFIGS_FOLDER)
        end
        
        local testFile = CONFIGS_FOLDER .. "/test.txt"
        writefile(testFile, "test")
        local content = readfile(testFile)
        delfile(testFile)
        
        return content == "test"
    end)
    
    if fileSuccess then
        storageMethod = "files"
        storageInfo = "Папка: " .. CONFIGS_FOLDER
        return true
    end
    
    -- 2. Проверяем буфер обмена
    local clipboardSuccess = pcall(function()
        if setclipboard then
            setclipboard("test")
            return true
        end
        return false
    end)
    
    if clipboardSuccess then
        storageMethod = "clipboard"
        storageInfo = "Через буфер обмена"
        return true
    end
    
    -- 3. Глобальное хранилище (работает во всех эксплойтах)
    if getgenv then
        storageMethod = "global"
        storageInfo = "В памяти эксплойта"
        
        -- Инициализируем глобальное хранилище
        if not getgenv().SSLKinConfigs then
            getgenv().SSLKinConfigs = {}
        end
        return true
    end
    
    storageMethod = "none"
    storageInfo = "Недоступно"
    return false
end

-- Проверяем методы при запуске
detectStorageMethods()

print("SSLKin: Метод сохранения:", storageMethod, "-", storageInfo)

-- Универсальные функции сохранения

local function saveConfigPersistent(configName, data)
    if storageMethod == "files" then
        -- Сохранение в файл
        local success = pcall(function()
            local filePath = CONFIGS_FOLDER .. "/" .. configName .. ".json"
            writefile(filePath, HttpService:JSONEncode(data))
        end)
        return success
        
    elseif storageMethod == "global" then
        -- Сохранение в глобальную память
        local success = pcall(function()
            getgenv().SSLKinConfigs[configName] = data
        end)
        return success
    end
    
    return false
end

local function loadConfigPersistent(configName)
    if storageMethod == "files" then
        -- Загрузка из файла
        local success, result = pcall(function()
            local filePath = CONFIGS_FOLDER .. "/" .. configName .. ".json"
            if not isfile(filePath) then return nil end
            
            local content = readfile(filePath)
            return HttpService:JSONDecode(content)
        end)
        return success and result or nil
        
    elseif storageMethod == "global" then
        -- Загрузка из глобальной памяти
        local success, result = pcall(function()
            return getgenv().SSLKinConfigs[configName]
        end)
        return success and result or nil
    end
    
    return nil
end

local function deleteConfigPersistent(configName)
    if storageMethod == "files" then
        local success = pcall(function()
            local filePath = CONFIGS_FOLDER .. "/" .. configName .. ".json"
            if isfile(filePath) then
                delfile(filePath)
            end
        end)
        return success
        
    elseif storageMethod == "global" then
        local success = pcall(function()
            getgenv().SSLKinConfigs[configName] = nil
        end)
        return success
    end
    
    return false
end

local function getPersistentConfigNames()
    if storageMethod == "files" then
        local success, result = pcall(function()
            if not isfolder(CONFIGS_FOLDER) then return {} end
            
            local files = listfiles(CONFIGS_FOLDER)
            local configNames = {}
            
            for _, filePath in pairs(files) do
                local fileName = filePath:match("([^/\\]+)$")
                if fileName and fileName:match("%.json$") then
                    local configName = fileName:gsub("%.json$", "")
                    table.insert(configNames, configName)
                end
            end
            
            return configNames
        end)
        return success and result or {}
        
    elseif storageMethod == "global" then
        local success, result = pcall(function()
            local names = {}
            for configName, _ in pairs(getgenv().SSLKinConfigs) do
                table.insert(names, configName)
            end
            return names
        end)
        return success and result or {}
    end
    
    return {}
end

-- Загрузка всех сохраненных конфигов при запуске
local function loadAllSavedConfigs()
    if storageMethod == "none" then return end
    
    spawn(function()
        wait(2) -- Ждем инициализацию GUI
        
        local savedConfigs = getPersistentConfigNames()
        if #savedConfigs > 0 then
            print("SSLKin: Найдено", #savedConfigs, "сохраненных конфигов:", table.concat(savedConfigs, ", "))
            
            -- Загружаем конфиги в память
            for _, configName in pairs(savedConfigs) do
                local configData = loadConfigPersistent(configName)
                if configData then
                    configs[configName] = configData
                end
            end
            
            game.StarterGui:SetCore("SendNotification", {
                Title = "SSLKin Uni Script",
                Text = "Загружено " .. #savedConfigs .. " сохраненных конфигов! (" .. storageMethod .. ")",
                Duration = 3
            })
        else
            print("SSLKin: Сохраненных конфигов не найдено")
        end
    end)
end

-- Запускаем загрузку сохраненных конфигов
loadAllSavedConfigs()

-- Сохранение оригинальных значений освещения
local originalLighting = {
    Brightness = Lighting.Brightness,
    ClockTime = Lighting.ClockTime,
    FogEnd = Lighting.FogEnd,
    FogStart = Lighting.FogStart,
    GlobalShadows = Lighting.GlobalShadows,
    OutdoorAmbient = Lighting.OutdoorAmbient
}

-- Создание ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SSLKinUniScript"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.DisplayOrder = 100

-- Основное окно
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -400, 0.5, -275)
MainFrame.Size = UDim2.new(0, 800, 0, 550)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = false

-- Обводка главного окна
local MainStroke = Instance.new("UIStroke")
MainStroke.Parent = MainFrame
MainStroke.Color = Color3.fromRGB(60, 60, 255)
MainStroke.Thickness = 2
MainStroke.Transparency = 0.3

-- Закругление главного окна
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Заголовок
local HeaderFrame = Instance.new("Frame")
HeaderFrame.Name = "HeaderFrame"
HeaderFrame.Parent = MainFrame
HeaderFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
HeaderFrame.BorderSizePixel = 0
HeaderFrame.Size = UDim2.new(1, 0, 0, 60)

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 12)
HeaderCorner.Parent = HeaderFrame

-- Фикс углов заголовка
local HeaderFix = Instance.new("Frame")
HeaderFix.Parent = HeaderFrame
HeaderFix.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
HeaderFix.BorderSizePixel = 0
HeaderFix.Position = UDim2.new(0, 0, 0.5, 0)
HeaderFix.Size = UDim2.new(1, 0, 0.5, 0)

-- Градиент заголовка
local HeaderGradient = Instance.new("UIGradient")
HeaderGradient.Parent = HeaderFrame
HeaderGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 80, 255)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(40, 40, 200)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
}
HeaderGradient.Rotation = 90

-- Логотип и заголовок
local LogoLabel = Instance.new("TextLabel")
LogoLabel.Name = "LogoLabel"
LogoLabel.Parent = HeaderFrame
LogoLabel.BackgroundTransparency = 1
LogoLabel.Position = UDim2.new(0, 20, 0, 5)
LogoLabel.Size = UDim2.new(0, 50, 0, 50)
LogoLabel.Font = Enum.Font.GothamBold
LogoLabel.Text = "⚔️" -- Для Centaura
LogoLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
LogoLabel.TextScaled = true

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = HeaderFrame
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, 80, 0, 10)
TitleLabel.Size = UDim2.new(1, -200, 0, 25)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "SSLKin Uni Script"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 20
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

local SubtitleLabel = Instance.new("TextLabel")
SubtitleLabel.Name = "SubtitleLabel"
SubtitleLabel.Parent = HeaderFrame
SubtitleLabel.BackgroundTransparency = 1
SubtitleLabel.Position = UDim2.new(0, 80, 0, 35)
SubtitleLabel.Size = UDim2.new(1, -200, 0, 20)
SubtitleLabel.Font = Enum.Font.Gotham
SubtitleLabel.Text = "Centaura Mode v3.1"
SubtitleLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
SubtitleLabel.TextSize = 12
SubtitleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Кнопка закрытия
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Parent = HeaderFrame
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -45, 0, 15)
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "✕"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- Контейнер для контента
local ContentContainer = Instance.new("Frame")
ContentContainer.Name = "ContentContainer"
ContentContainer.Parent = MainFrame
ContentContainer.BackgroundTransparency = 1
ContentContainer.Position = UDim2.new(0, 0, 0, 60)
ContentContainer.Size = UDim2.new(1, 0, 1, -60)

-- Боковая панель навигации
local SidePanel = Instance.new("Frame")
SidePanel.Name = "SidePanel"
SidePanel.Parent = ContentContainer
SidePanel.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
SidePanel.BorderSizePixel = 0
SidePanel.Size = UDim2.new(0, 200, 1, 0)

local SidePanelCorner = Instance.new("UICorner")
SidePanelCorner.CornerRadius = UDim.new(0, 8)
SidePanelCorner.Parent = SidePanel

-- Фикс углов боковой панели
local SidePanelFix = Instance.new("Frame")
SidePanelFix.Parent = SidePanel
SidePanelFix.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
SidePanelFix.BorderSizePixel = 0
SidePanelFix.Position = UDim2.new(0, 0, 0, 0)
SidePanelFix.Size = UDim2.new(1, 0, 0, 8)

local SidePanelFix2 = Instance.new("Frame")
SidePanelFix2.Parent = SidePanel
SidePanelFix2.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
SidePanelFix2.BorderSizePixel = 0
SidePanelFix2.Position = UDim2.new(1, -8, 0, 0)
SidePanelFix2.Size = UDim2.new(0, 8, 1, 0)

-- Основная область контента
local MainContent = Instance.new("ScrollingFrame")
MainContent.Name = "MainContent"
MainContent.Parent = ContentContainer
MainContent.BackgroundColor3 = Color3.fromRGB(20, 20, 28)
MainContent.BorderSizePixel = 0
MainContent.Position = UDim2.new(0, 200, 0, 0)
MainContent.Size = UDim2.new(1, -200, 1, 0)
MainContent.CanvasSize = UDim2.new(0, 0, 0, 0)
MainContent.ScrollBarThickness = 6
MainContent.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 255)
MainContent.AutomaticCanvasSize = Enum.AutomaticSize.Y

local MainContentCorner = Instance.new("UICorner")
MainContentCorner.CornerRadius = UDim.new(0, 8)
MainContentCorner.Parent = MainContent

-- Фикс углов основного контента
local MainContentFix = Instance.new("Frame")
MainContentFix.Parent = MainContent
MainContentFix.BackgroundColor3 = Color3.fromRGB(20, 20, 28)
MainContentFix.BorderSizePixel = 0
MainContentFix.Position = UDim2.new(0, -8, 0, 0)
MainContentFix.Size = UDim2.new(0, 8, 1, 0)

local MainContentFix2 = Instance.new("Frame")
MainContentFix2.Parent = MainContent
MainContentFix2.BackgroundColor3 = Color3.fromRGB(20, 20, 28)
MainContentFix2.BorderSizePixel = 0
MainContentFix2.Position = UDim2.new(0, 0, 0, 0)
MainContentFix2.Size = UDim2.new(1, 0, 0, 8)

-- Состояние GUI
local originalSize = UDim2.new(0, 800, 0, 550)
local originalPosition = UDim2.new(0.5, -400, 0.5, -275)

-- Анимации
local function CreateTween(object, properties, duration, easingStyle, easingDirection)
    local tweenInfo = TweenInfo.new(
        duration or 0.3,
        easingStyle or Enum.EasingStyle.Quad,
        easingDirection or Enum.EasingDirection.Out
    )
    return TweenService:Create(object, tweenInfo, properties)
end

-- Функции показа/скрытия GUI
local function ShowGUI()
    print("SSLKin: ShowGUI вызвана") -- Отладка
    MainFrame.Visible = true
    
    if MainFrame.Size == originalSize then
        print("SSLKin: GUI уже открыто") -- Отладка
        return -- Уже открыто
    end
    
    MainFrame.Size = UDim2.new(0, 0, 0, 0)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    local showTween = CreateTween(MainFrame, {
        Size = originalSize,
        Position = originalPosition
    }, 0.6, Enum.EasingStyle.Back)
    
    showTween:Play()
end

local function HideGUI()
    print("SSLKin: HideGUI вызвана") -- Отладка
    local hideTween = CreateTween(MainFrame, {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    }, 0.4, Enum.EasingStyle.Quad)
    
    hideTween:Play()
    
    hideTween.Completed:Connect(function()
        MainFrame.Visible = false
    end)
end

-- Система вкладок
local tabs = {}
local currentTab = nil

local function CreateTab(name, icon, color)
    local tabColor = color or Color3.fromRGB(60, 120, 255)
    
    -- Кнопка вкладки
    local TabButton = Instance.new("TextButton")
    TabButton.Name = name .. "Tab"
    TabButton.Parent = SidePanel
    TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    TabButton.BorderSizePixel = 0
    TabButton.Position = UDim2.new(0, 10, 0, 15 + (#tabs * 55))
    TabButton.Size = UDim2.new(1, -20, 0, 45)
    TabButton.Font = Enum.Font.GothamSemibold
    TabButton.Text = ""
    TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
    TabButton.AutoButtonColor = false
    
    local TabCorner = Instance.new("UICorner")
    TabCorner.CornerRadius = UDim.new(0, 8)
    TabCorner.Parent = TabButton
    
    -- Иконка
    local IconLabel = Instance.new("TextLabel")
    IconLabel.Parent = TabButton
    IconLabel.BackgroundTransparency = 1
    IconLabel.Position = UDim2.new(0, 15, 0, 0)
    IconLabel.Size = UDim2.new(0, 30, 1, 0)
    IconLabel.Font = Enum.Font.GothamBold
    IconLabel.Text = icon or "📋"
    IconLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    IconLabel.TextSize = 18
    
    -- Текст
    local TextLabel = Instance.new("TextLabel")
    TextLabel.Parent = TabButton
    TextLabel.BackgroundTransparency = 1
    TextLabel.Position = UDim2.new(0, 50, 0, 0)
    TextLabel.Size = UDim2.new(1, -60, 1, 0)
    TextLabel.Font = Enum.Font.GothamSemibold
    TextLabel.Text = name
    TextLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    TextLabel.TextSize = 14
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Индикатор активности
    local ActiveIndicator = Instance.new("Frame")
    ActiveIndicator.Name = "ActiveIndicator"
    ActiveIndicator.Parent = TabButton
    ActiveIndicator.BackgroundColor3 = tabColor
    ActiveIndicator.BorderSizePixel = 0
    ActiveIndicator.Position = UDim2.new(0, 0, 0, 0)
    ActiveIndicator.Size = UDim2.new(0, 0, 1, 0)
    ActiveIndicator.Visible = false
    
    local IndicatorCorner = Instance.new("UICorner")
    IndicatorCorner.CornerRadius = UDim.new(0, 8)
    IndicatorCorner.Parent = ActiveIndicator
    
    -- Контент вкладки
    local TabContent = Instance.new("Frame")
    TabContent.Name = name .. "Content"
    TabContent.Parent = MainContent
    TabContent.BackgroundTransparency = 1
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.Visible = false
    
    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.Parent = TabContent
    ContentLayout.Padding = UDim.new(0, 15)
    ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContentLayout.FillDirection = Enum.FillDirection.Vertical
    
    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.Parent = TabContent
    ContentPadding.PaddingTop = UDim.new(0, 20)
    ContentPadding.PaddingLeft = UDim.new(0, 20)
    ContentPadding.PaddingRight = UDim.new(0, 20)
    ContentPadding.PaddingBottom = UDim.new(0, 20)
    
    -- Функция переключения вкладки
    local function SelectTab()
        -- Сброс всех вкладок
        for _, tab in pairs(tabs) do
            CreateTween(tab.button, {BackgroundColor3 = Color3.fromRGB(30, 30, 40)}, 0.2):Play()
            CreateTween(tab.iconLabel, {TextColor3 = Color3.fromRGB(200, 200, 200)}, 0.2):Play()
            CreateTween(tab.textLabel, {TextColor3 = Color3.fromRGB(200, 200, 200)}, 0.2):Play()
            tab.activeIndicator.Visible = false
            tab.content.Visible = false
        end
        
        -- Активация текущей вкладки
        CreateTween(TabButton, {BackgroundColor3 = Color3.fromRGB(40, 40, 55)}, 0.2):Play()
        CreateTween(IconLabel, {TextColor3 = Color3.fromRGB(255, 255, 255)}, 0.2):Play()
        CreateTween(TextLabel, {TextColor3 = Color3.fromRGB(255, 255, 255)}, 0.2):Play()
        
        ActiveIndicator.Visible = true
        ActiveIndicator.Size = UDim2.new(0, 0, 1, 0)
        CreateTween(ActiveIndicator, {Size = UDim2.new(0, 4, 1, 0)}, 0.3, Enum.EasingStyle.Quad):Play()
        
        TabContent.Visible = true
        currentTab = name
    end
    
    -- События
    TabButton.MouseButton1Click:Connect(SelectTab)
    
    TabButton.MouseEnter:Connect(function()
        if currentTab ~= name then
            CreateTween(TabButton, {BackgroundColor3 = Color3.fromRGB(35, 35, 45)}, 0.2):Play()
        end
    end)
    
    TabButton.MouseLeave:Connect(function()
        if currentTab ~= name then
            CreateTween(TabButton, {BackgroundColor3 = Color3.fromRGB(30, 30, 40)}, 0.2):Play()
        end
    end)
    
    table.insert(tabs, {
        button = TabButton,
        content = TabContent,
        name = name,
        iconLabel = IconLabel,
        textLabel = TextLabel,
        activeIndicator = ActiveIndicator
    })
    
    return TabContent
end

-- Функция создания секции
local function CreateSection(parent, title)
    local SectionFrame = Instance.new("Frame")
    SectionFrame.Parent = parent
    SectionFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    SectionFrame.BorderSizePixel = 0
    SectionFrame.Size = UDim2.new(1, 0, 0, 0)
    SectionFrame.AutomaticSize = Enum.AutomaticSize.Y
    
    local SectionCorner = Instance.new("UICorner")
    SectionCorner.CornerRadius = UDim.new(0, 10)
    SectionCorner.Parent = SectionFrame
    
    local SectionStroke = Instance.new("UIStroke")
    SectionStroke.Parent = SectionFrame
    SectionStroke.Color = Color3.fromRGB(60, 60, 80)
    SectionStroke.Thickness = 1
    SectionStroke.Transparency = 0.7
    
    local SectionTitle = Instance.new("TextLabel")
    SectionTitle.Parent = SectionFrame
    SectionTitle.BackgroundTransparency = 1
    SectionTitle.Position = UDim2.new(0, 15, 0, 10)
    SectionTitle.Size = UDim2.new(1, -30, 0, 25)
    SectionTitle.Font = Enum.Font.GothamBold
    SectionTitle.Text = title
    SectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    SectionTitle.TextSize = 16
    SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local SectionContent = Instance.new("Frame")
    SectionContent.Parent = SectionFrame
    SectionContent.BackgroundTransparency = 1
    SectionContent.Position = UDim2.new(0, 10, 0, 40)
    SectionContent.Size = UDim2.new(1, -20, 0, 0)
    SectionContent.AutomaticSize = Enum.AutomaticSize.Y
    
    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.Parent = SectionContent
    ContentLayout.Padding = UDim.new(0, 10)
    ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.Parent = SectionContent
    ContentPadding.PaddingBottom = UDim.new(0, 15)
    
    return SectionContent
end

-- Функция создания кнопки
local function CreateButton(parent, text, description, callback)
    local ButtonFrame = Instance.new("Frame")
    ButtonFrame.Parent = parent
    ButtonFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
    ButtonFrame.BorderSizePixel = 0
    ButtonFrame.Size = UDim2.new(1, 0, 0, 60)
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 8)
    ButtonCorner.Parent = ButtonFrame
    
    local ButtonGradient = Instance.new("UIGradient")
    ButtonGradient.Parent = ButtonFrame
    ButtonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 60)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
    }
    ButtonGradient.Rotation = 90
    
    local Button = Instance.new("TextButton")
    Button.Parent = ButtonFrame
    Button.BackgroundTransparency = 1
    Button.Size = UDim2.new(1, 0, 1, 0)
    Button.Font = Enum.Font.Gotham
    Button.Text = ""
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.AutoButtonColor = false
    
    local ButtonText = Instance.new("TextLabel")
    ButtonText.Parent = ButtonFrame
    ButtonText.BackgroundTransparency = 1
    ButtonText.Position = UDim2.new(0, 15, 0, 8)
    ButtonText.Size = UDim2.new(1, -30, 0, 25)
    ButtonText.Font = Enum.Font.GothamBold
    ButtonText.Text = text
    ButtonText.TextColor3 = Color3.fromRGB(255, 255, 255)
    ButtonText.TextSize = 14
    ButtonText.TextXAlignment = Enum.TextXAlignment.Left
    
    local ButtonDesc = Instance.new("TextLabel")
    ButtonDesc.Parent = ButtonFrame
    ButtonDesc.BackgroundTransparency = 1
    ButtonDesc.Position = UDim2.new(0, 15, 0, 30)
    ButtonDesc.Size = UDim2.new(1, -30, 0, 20)
    ButtonDesc.Font = Enum.Font.Gotham
    ButtonDesc.Text = description or ""
    ButtonDesc.TextColor3 = Color3.fromRGB(180, 180, 180)
    ButtonDesc.TextSize = 11
    ButtonDesc.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Эффекты
    Button.MouseEnter:Connect(function()
        CreateTween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(50, 50, 70)}, 0.2):Play()
        CreateTween(ButtonText, {TextColor3 = Color3.fromRGB(100, 150, 255)}, 0.2):Play()
    end)
    
    Button.MouseLeave:Connect(function()
        CreateTween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(40, 40, 55)}, 0.2):Play()
        CreateTween(ButtonText, {TextColor3 = Color3.fromRGB(255, 255, 255)}, 0.2):Play()
    end)
    
    Button.MouseButton1Click:Connect(function()
        -- Анимация нажатия
        CreateTween(ButtonFrame, {Size = UDim2.new(1, -4, 0, 56)}, 0.1):Play()
        wait(0.1)
        CreateTween(ButtonFrame, {Size = UDim2.new(1, 0, 0, 60)}, 0.1):Play()
        
        if callback then 
            spawn(callback)
        end
    end)
    
    return ButtonFrame
end

-- Функция создания переключателя
local function CreateToggle(parent, text, description, defaultState, callback)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Parent = parent
    ToggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Size = UDim2.new(1, 0, 0, 60)
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 8)
    ToggleCorner.Parent = ToggleFrame
    
    local ToggleText = Instance.new("TextLabel")
    ToggleText.Parent = ToggleFrame
    ToggleText.BackgroundTransparency = 1
    ToggleText.Position = UDim2.new(0, 15, 0, 8)
    ToggleText.Size = UDim2.new(1, -80, 0, 25)
    ToggleText.Font = Enum.Font.GothamBold
    ToggleText.Text = text
    ToggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleText.TextSize = 14
    ToggleText.TextXAlignment = Enum.TextXAlignment.Left
    
    local ToggleDesc = Instance.new("TextLabel")
    ToggleDesc.Parent = ToggleFrame
    ToggleDesc.BackgroundTransparency = 1
    ToggleDesc.Position = UDim2.new(0, 15, 0, 30)
    ToggleDesc.Size = UDim2.new(1, -80, 0, 20)
    ToggleDesc.Font = Enum.Font.Gotham
    ToggleDesc.Text = description or ""
    ToggleDesc.TextColor3 = Color3.fromRGB(180, 180, 180)
    ToggleDesc.TextSize = 11
    ToggleDesc.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Переключатель
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Parent = ToggleFrame
    ToggleButton.BackgroundColor3 = defaultState and Color3.fromRGB(60, 120, 255) or Color3.fromRGB(60, 60, 70)
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Position = UDim2.new(1, -55, 0.5, -12)
    ToggleButton.Size = UDim2.new(0, 45, 0, 24)
    ToggleButton.Text = ""
    ToggleButton.AutoButtonColor = false
    
    local ToggleButtonCorner = Instance.new("UICorner")
    ToggleButtonCorner.CornerRadius = UDim.new(0, 12)
    ToggleButtonCorner.Parent = ToggleButton
    
    local ToggleCircle = Instance.new("Frame")
    ToggleCircle.Parent = ToggleButton
    ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ToggleCircle.BorderSizePixel = 0
    ToggleCircle.Position = defaultState and UDim2.new(1, -22, 0.5, -10) or UDim2.new(0, 2, 0.5, -10)
    ToggleCircle.Size = UDim2.new(0, 20, 0, 20)
    
    local CircleCorner = Instance.new("UICorner")
    CircleCorner.CornerRadius = UDim.new(0, 10)
    CircleCorner.Parent = ToggleCircle
    
    local isToggled = defaultState
    
    ToggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        if isToggled then
            CreateTween(ToggleButton, {BackgroundColor3 = Color3.fromRGB(60, 120, 255)}, 0.2):Play()
            CreateTween(ToggleCircle, {Position = UDim2.new(1, -22, 0.5, -10)}, 0.2):Play()
        else
            CreateTween(ToggleButton, {BackgroundColor3 = Color3.fromRGB(60, 60, 70)}, 0.2):Play()
            CreateTween(ToggleCircle, {Position = UDim2.new(0, 2, 0.5, -10)}, 0.2):Play()
        end
        
        if callback then
            spawn(function() callback(isToggled) end)
        end
    end)
    
    return ToggleFrame, isToggled
end

-- Функция создания ползунка
local function CreateSlider(parent, text, description, minValue, maxValue, defaultValue, callback)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Parent = parent
    SliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
    SliderFrame.BorderSizePixel = 0
    SliderFrame.Size = UDim2.new(1, 0, 0, 80)
    
    local SliderCorner = Instance.new("UICorner")
    SliderCorner.CornerRadius = UDim.new(0, 8)
    SliderCorner.Parent = SliderFrame
    
    local SliderText = Instance.new("TextLabel")
    SliderText.Parent = SliderFrame
    SliderText.BackgroundTransparency = 1
    SliderText.Position = UDim2.new(0, 15, 0, 8)
    SliderText.Size = UDim2.new(1, -100, 0, 20)
    SliderText.Font = Enum.Font.GothamBold
    SliderText.Text = text
    SliderText.TextColor3 = Color3.fromRGB(255, 255, 255)
    SliderText.TextSize = 14
    SliderText.TextXAlignment = Enum.TextXAlignment.Left
    
    local SliderValue = Instance.new("TextLabel")
    SliderValue.Parent = SliderFrame
    SliderValue.BackgroundTransparency = 1
    SliderValue.Position = UDim2.new(1, -85, 0, 8)
    SliderValue.Size = UDim2.new(0, 70, 0, 20)
    SliderValue.Font = Enum.Font.GothamBold
    SliderValue.Text = tostring(defaultValue)
    SliderValue.TextColor3 = Color3.fromRGB(100, 150, 255)
    SliderValue.TextSize = 14
    SliderValue.TextXAlignment = Enum.TextXAlignment.Right
    
    local SliderDesc = Instance.new("TextLabel")
    SliderDesc.Parent = SliderFrame
    SliderDesc.BackgroundTransparency = 1
    SliderDesc.Position = UDim2.new(0, 15, 0, 28)
    SliderDesc.Size = UDim2.new(1, -30, 0, 16)
    SliderDesc.Font = Enum.Font.Gotham
    SliderDesc.Text = description or ""
    SliderDesc.TextColor3 = Color3.fromRGB(180, 180, 180)
    SliderDesc.TextSize = 11
    SliderDesc.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Ползунок
    local SliderTrack = Instance.new("Frame")
    SliderTrack.Parent = SliderFrame
    SliderTrack.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    SliderTrack.BorderSizePixel = 0
    SliderTrack.Position = UDim2.new(0, 15, 0, 55)
    SliderTrack.Size = UDim2.new(1, -30, 0, 8)
    
    local SliderTrackCorner = Instance.new("UICorner")
    SliderTrackCorner.CornerRadius = UDim.new(0, 4)
    SliderTrackCorner.Parent = SliderTrack
    
    local SliderFill = Instance.new("Frame")
    SliderFill.Parent = SliderTrack
    SliderFill.BackgroundColor3 = Color3.fromRGB(60, 120, 255)
    SliderFill.BorderSizePixel = 0
    SliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    
    local SliderButton = Instance.new("TextButton")
    SliderButton.Parent = SliderTrack
    SliderButton.BackgroundTransparency = 1
    SliderButton.Size = UDim2.new(1, 0, 1, 0)
    SliderButton.Text = ""
    
    local isDragging = false
    local currentValue = defaultValue
    
    local function updateValue(input)
        local pos = input.Position.X - SliderTrack.AbsolutePosition.X
        local newX = math.clamp(pos, 0, SliderTrack.AbsoluteSize.X)
        local value = minValue + (newX / SliderTrack.AbsoluteSize.X) * (maxValue - minValue)
        
        currentValue = math.floor(value + 0.5) -- Округление
        SliderValue.Text = tostring(currentValue)
        
        local fillSize = (currentValue - minValue) / (maxValue - minValue)
        SliderFill.Size = UDim2.new(fillSize, 0, 1, 0)
        
        if callback then
            callback(currentValue)
        end
    end
    
    SliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            updateValue(input)
        end
    end)
    
    SliderButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateValue(input)
        end
    end)
    
    return SliderFrame, currentValue
end

-- Функция создания выпадающего списка
local function CreateDropdown(parent, text, options, defaultOption, callback)
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Name = "Dropdown"
    DropdownFrame.Parent = parent
    DropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
    DropdownFrame.BorderSizePixel = 0
    DropdownFrame.Size = UDim2.new(1, 0, 0, 60)
    
    local DropdownCorner = Instance.new("UICorner")
    DropdownCorner.CornerRadius = UDim.new(0, 8)
    DropdownCorner.Parent = DropdownFrame
    
    local DropdownText = Instance.new("TextLabel")
    DropdownText.Name = "DropdownText"
    DropdownText.Parent = DropdownFrame
    DropdownText.BackgroundTransparency = 1
    DropdownText.Position = UDim2.new(0, 15, 0, 8)
    DropdownText.Size = UDim2.new(1, -80, 0, 25)
    DropdownText.Font = Enum.Font.GothamBold
    DropdownText.Text = text
    DropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownText.TextSize = 14
    DropdownText.TextXAlignment = Enum.TextXAlignment.Left
    
    local DropdownValue = Instance.new("TextLabel")
    DropdownValue.Name = "DropdownValue"
    DropdownValue.Parent = DropdownFrame
    DropdownValue.BackgroundTransparency = 1
    DropdownValue.Position = UDim2.new(1, -115, 0, 8)
    DropdownValue.Size = UDim2.new(0, 100, 0, 25)
    DropdownValue.Font = Enum.Font.Gotham
    DropdownValue.Text = defaultOption or "Выберите..."
    DropdownValue.TextColor3 = Color3.fromRGB(180, 180, 180)
    DropdownValue.TextSize = 12
    DropdownValue.TextXAlignment = Enum.TextXAlignment.Right
    
    local DropdownButton = Instance.new("TextButton")
    DropdownButton.Name = "DropdownButton"
    DropdownButton.Parent = DropdownFrame
    DropdownButton.BackgroundTransparency = 1
    DropdownButton.Size = UDim2.new(1, 0, 1, 0)
    DropdownButton.Text = ""
    
    local DropdownArrow = Instance.new("TextLabel")
    DropdownArrow.Name = "DropdownArrow"
    DropdownArrow.Parent = DropdownFrame
    DropdownArrow.BackgroundTransparency = 1
    DropdownArrow.Position = UDim2.new(1, -25, 0.5, -10)
    DropdownArrow.Size = UDim2.new(0, 20, 0, 20)
    DropdownArrow.Font = Enum.Font.SourceSans
    DropdownArrow.Text = "▼"
    DropdownArrow.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownArrow.TextSize = 16
    
    local DropdownList = Instance.new("ScrollingFrame")
    DropdownList.Name = "DropdownList"
    DropdownList.Parent = DropdownFrame
    DropdownList.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    DropdownList.BorderSizePixel = 0
    DropdownList.Position = UDim2.new(0, 0, 1, 5)
    DropdownList.Size = UDim2.new(1, 0, 0, 0)
    DropdownList.ZIndex = 2
    DropdownList.Visible = false
    DropdownList.ScrollBarThickness = 6
    DropdownList.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 255)
    DropdownList.AutomaticCanvasSize = Enum.AutomaticSize.Y
    
    local ListLayout = Instance.new("UIListLayout")
    ListLayout.Parent = DropdownList
    ListLayout.Padding = UDim.new(0, 5)
    ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local function populateDropdown()
        for _, child in pairs(DropdownList:GetChildren()) do
            if child:IsA("TextButton") or child:IsA("Frame") then
                child:Destroy()
            end
        end
        for _, option in ipairs(options) do
            local OptionButton = Instance.new("TextButton")
            OptionButton.Name = option
            OptionButton.Parent = DropdownList
            OptionButton.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
            OptionButton.BorderSizePixel = 0
            OptionButton.Size = UDim2.new(1, 0, 0, 30)
            OptionButton.Font = Enum.Font.Gotham
            OptionButton.Text = option
            OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            OptionButton.TextSize = 12
            OptionButton.TextXAlignment = Enum.TextXAlignment.Left
            OptionButton.TextScaled = true
            
            local OptionPadding = Instance.new("UIPadding")
            OptionPadding.Parent = OptionButton
            OptionPadding.PaddingLeft = UDim.new(0, 10)
            
            OptionButton.MouseButton1Click:Connect(function()
                DropdownValue.Text = option
                DropdownList.Visible = false
                if callback then
                    callback(option)
                end
            end)
            
            OptionButton.MouseEnter:Connect(function()
                CreateTween(OptionButton, {BackgroundColor3 = Color3.fromRGB(60, 60, 80)}, 0.1):Play()
            end)
            
            OptionButton.MouseLeave:Connect(function()
                CreateTween(OptionButton, {BackgroundColor3 = Color3.fromRGB(40, 40, 55)}, 0.1):Play()
            end)
        end
    end
    
    DropdownButton.MouseButton1Click:Connect(function()
        if DropdownList.Visible then
            CreateTween(DropdownList, {Size = UDim2.new(1, 0, 0, 0)}, 0.2):Play()
            task.wait(0.2)
            DropdownList.Visible = false
        else
            populateDropdown()
            DropdownList.Visible = true
            local newSizeY = math.min(#options * 35, 150)
            CreateTween(DropdownList, {Size = UDim2.new(1, 0, 0, newSizeY)}, 0.2):Play()
        end
    end)
    
    -- Скрываем список, если кликнули вне его
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed or not DropdownList.Visible then return end
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local pos = input.Position
            local listAbs = DropdownList.AbsolutePosition
            local listSize = DropdownList.AbsoluteSize
            local buttonAbs = DropdownButton.AbsolutePosition
            local buttonSize = DropdownButton.AbsoluteSize
            
            local inList = pos.X > listAbs.X and pos.X < (listAbs.X + listSize.X) and
                           pos.Y > listAbs.Y and pos.Y < (listAbs.Y + listSize.Y)
            local inButton = pos.X > buttonAbs.X and pos.X < (buttonAbs.X + buttonSize.X) and
                             pos.Y > buttonAbs.Y and pos.Y < (buttonAbs.Y + buttonSize.Y)
            
            if not inList and not inButton then
                DropdownList.Visible = false
            end
        end
    end)
    
    return DropdownFrame
end

-- Основной код

local mainTab = CreateTab("Основные", "⚙️")
local centauraTab = CreateTab("Centaura", "⚔️")
local espTab = CreateTab("Визуальные", "👁️")
local playerTab = CreateTab("Игроки", "🧑‍🤝‍🧑")
local configTab = CreateTab("Конфиг", "💾")

----------------------------------------------------------------------------------------------------
-- Секция "Основные"
----------------------------------------------------------------------------------------------------
local mainSection = CreateSection(mainTab, "Общие функции")

CreateToggle(mainSection, "Бесконечный прыжок", "Позволяет прыгать без остановки.", infiniteJumpEnabled, function(state)
    infiniteJumpEnabled = state
end)

CreateToggle(mainSection, "Полный свет", "Убирает все тени и делает мир ярче.", fullBrightEnabled, function(state)
    fullBrightEnabled = state
    if state then
        Lighting.Brightness = 2
        Lighting.ClockTime = 14
        Lighting.GlobalShadows = false
        Lighting.OutdoorAmbient = Color3.fromRGB(120, 120, 120)
    else
        Lighting.Brightness = originalLighting.Brightness
        Lighting.ClockTime = originalLighting.ClockTime
        Lighting.GlobalShadows = originalLighting.GlobalShadows
        Lighting.OutdoorAmbient = originalLighting.OutdoorAmbient
    end
end)

CreateToggle(mainSection, "Без тумана", "Убирает туман в игре.", noFogEnabled, function(state)
    noFogEnabled = state
    if state then
        Lighting.FogEnd = 99999
        Lighting.FogStart = 99999
    else
        Lighting.FogEnd = originalLighting.FogEnd
        Lighting.FogStart = originalLighting.FogStart
    end
end)

local flyToggle, _ = CreateToggle(mainSection, "Полет", "Включает свободный полет. (WASD, E, Q)", isFlying, function(state)
    isFlying = state
    local character = LocalPlayer.Character
    if character and character.Humanoid then
        if isFlying then
            character.Humanoid.PlatformStand = true
            character.Humanoid.Sit = true
        else
            character.Humanoid.PlatformStand = false
            character.Humanoid.Sit = false
        end
    end
end)

local noclipToggle, _ = CreateToggle(mainSection, "No-Clip", "Позволяет проходить сквозь стены.", isNoclipActive, function(state)
    isNoclipActive = state
    local character = LocalPlayer.Character
    if character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = not state
            end
        end
    end
end)

local speedSection = CreateSection(mainTab, "Скорость")

local speedToggle, _ = CreateToggle(speedSection, "Скорость бега", "Изменяет скорость бега персонажа.", speedEnabled, function(state)
    speedEnabled = state
    if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        if state then
            LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeed
        else
            LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end
end)

CreateSlider(speedSection, "Значение скорости", "Настраивает скорость бега.", 16, 100, walkSpeed, function(value)
    walkSpeed = value
    if speedEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
end)

local jumpSection = CreateSection(mainTab, "Прыжок")

local jumpToggle, _ = CreateToggle(jumpSection, "Сила прыжка", "Изменяет силу прыжка.", jumpEnabled, function(state)
    jumpEnabled = state
    if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        if state then
            LocalPlayer.Character.Humanoid.JumpPower = jumpPower
        else
            LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end
end)

CreateSlider(jumpSection, "Значение силы прыжка", "Настраивает силу прыжка.", 50, 200, jumpPower, function(value)
    jumpPower = value
    if jumpEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.JumpPower = value
    end
end)

----------------------------------------------------------------------------------------------------
-- Секция "Centaura"
----------------------------------------------------------------------------------------------------
local centauraSection = CreateSection(centauraTab, "Aimbot")

local aimbotToggle, _ = CreateToggle(centauraSection, "Аимбот", "Автоматически наводит прицел на врагов.", aimbotEnabled, function(state)
    aimbotEnabled = state
end)

local showFovCircleToggle, _ = CreateToggle(centauraSection, "Показать FOV", "Отображает FOV-круг на экране.", showFOVCircle, function(state)
    showFOVCircle = state
end)

local aimbotTeamCheckToggle, _ = CreateToggle(centauraSection, "Проверка команды", "Не целится в союзников.", aimbotTeamCheck, function(state)
    aimbotTeamCheck = state
end)

CreateSlider(centauraSection, "FOV", "Радиус поиска цели.", 1, 360, aimbotFOV, function(value)
    aimbotFOV = value
end)

CreateSlider(centauraSection, "Плавность", "Скорость наведения.", 1, 20, aimbotSmoothness, function(value)
    aimbotSmoothness = value
end)

CreateButton(centauraSection, "Цель: Голова", "Аимбот целится в голову.", function()
    aimbotTargetPart = "Head"
    game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Аимбот: цель - Голова", Duration=2})
end)

CreateButton(centauraSection, "Цель: Торс", "Аимбот целится в торс.", function()
    aimbotTargetPart = "Torso"
    game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Аимбот: цель - Торс", Duration=2})
end)

----------------------------------------------------------------------------------------------------
-- Секция "Визуальные"
----------------------------------------------------------------------------------------------------
local espSection = CreateSection(espTab, "ESP")

local espToggle, _ = CreateToggle(espSection, "Включить ESP", "Включает все визуальные эффекты ESP.", espEnabled, function(state)
    espEnabled = state
end)

local espBoxToggle, _ = CreateToggle(espSection, "Квадраты", "Отображает квадраты вокруг игроков.", espSettings.boxes, function(state)
    espSettings.boxes = state
end)

local espNamesToggle, _ = CreateToggle(espSection, "Имена", "Отображает имена игроков.", espSettings.names, function(state)
    espSettings.names = state
end)

local espDistanceToggle, _ = CreateToggle(espSection, "Дистанция", "Отображает расстояние до игроков.", espSettings.distance, function(state)
    espSettings.distance = state
end)

local espHealthToggle, _ = CreateToggle(espSection, "Здоровье", "Отображает здоровье игроков.", espSettings.health, function(state)
    espSettings.health = state
end)

local espHealthBarToggle, _ = CreateToggle(espSection, "Полоска здоровья", "Отображает полоску здоровья.", espSettings.healthBar, function(state)
    espSettings.healthBar = state
end)

local espTracersToggle, _ = CreateToggle(espSection, "Трассеры", "Отображает линии к игрокам.", espSettings.tracers, function(state)
    espSettings.tracers = state
end)

local espChamsToggle, _ = CreateToggle(espSection, "Чамсы", "Отображает игроков сквозь стены.", espSettings.chams, function(state)
    espSettings.chams = state
end)

----------------------------------------------------------------------------------------------------
-- Секция "Конфиг"
----------------------------------------------------------------------------------------------------
local configSection = CreateSection(configTab, "Настройки")

local saveConfigNameBox = Instance.new("TextBox")
saveConfigNameBox.Parent = configSection
saveConfigNameBox.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
saveConfigNameBox.PlaceholderText = "Имя конфига..."
saveConfigNameBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
saveConfigNameBox.Font = Enum.Font.Gotham
saveConfigNameBox.TextSize = 14
saveConfigNameBox.TextColor3 = Color3.fromRGB(255, 255, 255)
saveConfigNameBox.Size = UDim2.new(1, 0, 0, 40)
saveConfigNameBox.TextXAlignment = Enum.TextXAlignment.Left

local namePadding = Instance.new("UIPadding")
namePadding.Parent = saveConfigNameBox
namePadding.PaddingLeft = UDim.new(0, 10)

CreateButton(configSection, "Сохранить", "Сохраняет текущие настройки в конфиг.", function()
    local name = saveConfigNameBox.Text
    if name == "" then
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Введите имя конфига!", Duration=3})
        return
    end
    
    local dataToSave = {
        isFlying = isFlying,
        flySpeed = flySpeed,
        isNoclipActive = isNoclipActive,
        espEnabled = espEnabled,
        infiniteJumpEnabled = infiniteJumpEnabled,
        speedEnabled = speedEnabled,
        jumpEnabled = jumpEnabled,
        walkSpeed = walkSpeed,
        jumpPower = jumpPower,
        fullBrightEnabled = fullBrightEnabled,
        noFogEnabled = noFogEnabled,
        aimbotEnabled = aimbotEnabled,
        aimbotFOV = aimbotFOV,
        aimbotSmoothness = aimbotSmoothness,
        aimbotTargetPart = aimbotTargetPart,
        aimbotVisibleOnly = aimbotVisibleOnly,
        aimbotTeamCheck = aimbotTeamCheck,
        showFOVCircle = showFOVCircle,
        aimbotPrediction = aimbotPrediction,
        aimbotPredictionStrength = aimbotPredictionStrength,
        espSettings = espSettings
    }
    
    if saveConfigPersistent(name, dataToSave) then
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Конфиг '" .. name .. "' сохранен!", Duration=3})
    else
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Ошибка сохранения конфига!", Duration=3})
    end
end)

local loadConfigSection = CreateSection(configTab, "Загрузка конфига")

local savedConfigNames = getPersistentConfigNames()
local configDropdown = CreateDropdown(loadConfigSection, "Загрузить конфиг", savedConfigNames, "Выберите...", function(selectedName)
    local loadedData = loadConfigPersistent(selectedName)
    if loadedData then
        -- Применяем настройки
        isFlying = loadedData.isFlying
        flySpeed = loadedData.flySpeed
        isNoclipActive = loadedData.isNoclipActive
        espEnabled = loadedData.espEnabled
        infiniteJumpEnabled = loadedData.infiniteJumpEnabled
        speedEnabled = loadedData.speedEnabled
        jumpEnabled = loadedData.jumpEnabled
        walkSpeed = loadedData.walkSpeed
        jumpPower = loadedData.jumpPower
        fullBrightEnabled = loadedData.fullBrightEnabled
        noFogEnabled = loadedData.noFogEnabled
        aimbotEnabled = loadedData.aimbotEnabled
        aimbotFOV = loadedData.aimbotFOV
        aimbotSmoothness = loadedData.aimbotSmoothness
        aimbotTargetPart = loadedData.aimbotTargetPart
        aimbotVisibleOnly = loadedData.aimbotVisibleOnly
        aimbotTeamCheck = loadedData.aimbotTeamCheck
        showFOVCircle = loadedData.showFOVCircle
        aimbotPrediction = loadedData.aimbotPrediction
        aimbotPredictionStrength = loadedData.aimbotPredictionStrength
        espSettings = loadedData.espSettings
        
        -- Обновляем UI
        for _, tab in pairs(tabs) do
            if tab.name == "Основные" then tab.button.MouseButton1Click() end
        end
        
        flyToggle:GetChildren()[1].MouseButton1Click()
        flyToggle:GetChildren()[1].MouseButton1Click()
        
        noclipToggle:GetChildren()[1].MouseButton1Click()
        noclipToggle:GetChildren()[1].MouseButton1Click()
        
        speedToggle:GetChildren()[1].MouseButton1Click()
        speedToggle:GetChildren()[1].MouseButton1Click()
        
        jumpToggle:GetChildren()[1].MouseButton1Click()
        jumpToggle:GetChildren()[1].MouseButton1Click()
        
        fullBrightToggle:GetChildren()[1].MouseButton1Click()
        fullBrightToggle:GetChildren()[1].MouseButton1Click()
        
        noFogToggle:GetChildren()[1].MouseButton1Click()
        noFogToggle:GetChildren()[1].MouseButton1Click()
        
        for _, tab in pairs(tabs) do
            if tab.name == "Centaura" then tab.button.MouseButton1Click() end
        end
        
        aimbotToggle:GetChildren()[1].MouseButton1Click()
        aimbotToggle:GetChildren()[1].MouseButton1Click()
        
        showFovCircleToggle:GetChildren()[1].MouseButton1Click()
        showFovCircleToggle:GetChildren()[1].MouseButton1Click()
        
        aimbotTeamCheckToggle:GetChildren()[1].MouseButton1Click()
        aimbotTeamCheckToggle:GetChildren()[1].MouseButton1Click()
        
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Конфиг '" .. selectedName .. "' загружен!", Duration=3})
    else
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Ошибка загрузки конфига!", Duration=3})
    end
end)

CreateButton(loadConfigSection, "Удалить конфиг", "Удаляет выбранный конфиг.", function()
    local selectedName = configDropdown.DropdownValue.Text
    if selectedName == "Выберите..." or selectedName == "" then
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Сначала выберите конфиг для удаления!", Duration=3})
        return
    end
    
    if deleteConfigPersistent(selectedName) then
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Конфиг '" .. selectedName .. "' удален!", Duration=3})
        -- Обновляем список
        local newConfigNames = getPersistentConfigNames()
        configDropdown.DropdownValue.Text = "Выберите..."
        configDropdown.populateDropdown(newConfigNames)
    else
        game.StarterGui:SetCore("SendNotification", {Title="SSLKin Uni", Text="Ошибка удаления конфига!", Duration=3})
    end
end)


-- Системные функции
local function getVisibleTargets()
    local targets = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character.Humanoid and player.Character.Humanoid.Health > 0 then
            local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local vector, onScreen = Camera:WorldToScreenPoint(rootPart.Position)
                local isVisible = onScreen
                if isVisible then
                    local isBehindWall = false
                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, player.Character}
                    
                    local result = Workspace:Raycast(Camera.CFrame.Position, (rootPart.Position - Camera.CFrame.Position).unit * (rootPart.Position - Camera.CFrame.Position).magnitude, raycastParams)
                    if result and result.Instance and result.Instance.Parent then
                        if result.Instance.Parent ~= player.Character then
                            isVisible = false
                        end
                    end
                end
                
                local isTeamMate = (aimbotTeamCheck and player.TeamColor == LocalPlayer.TeamColor)
                if not isTeamMate and isVisible then
                    table.insert(targets, player)
                end
            end
        end
    end
    return targets
end

local function getClosestTarget()
    local bestTarget = nil
    local closestDistance = math.huge
    local targets = getVisibleTargets()
    
    for _, player in ipairs(targets) do
        local character = player.Character
        if character and character.Humanoid then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local screenPoint, onScreen = Camera:WorldToScreenPoint(rootPart.Position)
                if onScreen then
                    local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
                    if distance < closestDistance and distance < aimbotFOV then
                        closestDistance = distance
                        bestTarget = player
                    end
                end
            end
        end
    end
    return bestTarget
end

local function updateDrawingObjects()
    for _, obj in pairs(drawingObjects) do
        obj:Remove()
    end
    drawingObjects = {}
    if fovCircle then fovCircle:Remove() end
    fovCircle = nil
    
    if not espEnabled then return end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local char = player.Character
            local rootPart = char:FindFirstChild("HumanoidRootPart")
            
            if not rootPart then continue end
            
            local onScreen, screenPoint = Camera:WorldToScreenPoint(rootPart.Position)
            if not onScreen then continue end
            
            local head = char:FindFirstChild("Head")
            local torso = char:FindFirstChild("Torso")
            
            local headPosition, onScreenHead = Camera:WorldToScreenPoint(head.Position)
            local torsoPosition, onScreenTorso = Camera:WorldToScreenPoint(torso.Position)
            
            local color = (espSettings.teamCheck and player.TeamColor == LocalPlayer.TeamColor) and espSettings.allyColor or espSettings.enemyColor
            
            -- Box ESP
            if espSettings.boxes then
                local boxWidth = (headPosition.Y - torsoPosition.Y) * 0.7
                local boxHeight = headPosition.Y - torsoPosition.Y
                
                local boxDrawing = Drawing.new("Square")
                boxDrawing.Color = color
                boxDrawing.Thickness = 1
                boxDrawing.Transparency = 1
                boxDrawing.Filled = false
                boxDrawing.Visible = true
                boxDrawing.Size = Vector2.new(boxWidth, boxHeight)
                boxDrawing.Position = Vector2.new(torsoPosition.X, torsoPosition.Y - boxHeight/2)
                
                table.insert(drawingObjects, boxDrawing)
            end
            
            -- Name ESP
            if espSettings.names then
                local nameDrawing = Drawing.new("Text")
                nameDrawing.Color = espSettings.nameColor
                nameDrawing.Text = player.Name
                nameDrawing.Size = 12
                nameDrawing.Position = Vector2.new(screenPoint.X, screenPoint.Y + 20)
                table.insert(drawingObjects, nameDrawing)
            end
            
            -- Distance ESP
            if espSettings.distance then
                local distance = math.floor((rootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
                local distDrawing = Drawing.new("Text")
                distDrawing.Color = espSettings.nameColor
                distDrawing.Text = tostring(distance) .. "м"
                distDrawing.Size = 10
                distDrawing.Position = Vector2.new(screenPoint.X, screenPoint.Y + 30)
                table.insert(drawingObjects, distDrawing)
            end
            
            -- Health Bar ESP
            if espSettings.healthBar and char:FindFirstChild("Humanoid") then
                local humanoid = char.Humanoid
                local healthRatio = humanoid.Health / humanoid.MaxHealth
                local healthBarColor = espSettings.healthBarForeground
                if healthRatio < 0.3 then
                    healthBarColor = espSettings.healthBarCriticalHealth
                elseif healthRatio < 0.6 then
                    healthBarColor = espSettings.healthBarLowHealth
                end
                
                local healthBar = Drawing.new("Square")
                healthBar.Color = healthBarColor
                healthBar.Thickness = 1
                healthBar.Filled = true
                healthBar.Transparency = 0
                
                local bgBar = Drawing.new("Square")
                bgBar.Color = espSettings.healthBarBackground
                bgBar.Thickness = 1
                bgBar.Filled = true
                bgBar.Transparency = 0
                
                local barWidth = (headPosition.Y - torsoPosition.Y) * 0.7
                local barHeight = 4
                
                bgBar.Size = Vector2.new(barWidth, barHeight)
                bgBar.Position = Vector2.new(torsoPosition.X, torsoPosition.Y + (headPosition.Y - torsoPosition.Y) * 0.5 + 5)
                
                healthBar.Size = Vector2.new(barWidth * healthRatio, barHeight)
                healthBar.Position = Vector2.new(torsoPosition.X - (barWidth - barWidth * healthRatio)/2, torsoPosition.Y + (headPosition.Y - torsoPosition.Y) * 0.5 + 5)
                
                table.insert(drawingObjects, bgBar)
                table.insert(drawingObjects, healthBar)
            end
            
            -- Tracers
            if espSettings.tracers then
                local tracer = Drawing.new("Line")
                tracer.Color = espSettings.tracerColor
                tracer.Thickness = 1
                tracer.From = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y) -- from bottom center
                tracer.To = Vector2.new(screenPoint.X, screenPoint.Y)
                table.insert(drawingObjects, tracer)
            end
        end
    end
end

-- Fly & Noclip logic
RunService.Stepped:Connect(function()
    if isFlying and LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart then
        local HRP = LocalPlayer.Character.HumanoidRootPart
        local camCFrame = Camera.CFrame
        local velocity = Vector3.new(0,0,0)
        
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            velocity = velocity + camCFrame.LookVector * flySpeed
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            velocity = velocity - camCFrame.LookVector * flySpeed
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            velocity = velocity - camCFrame.RightVector * flySpeed
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            velocity = velocity + camCFrame.RightVector * flySpeed
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.E) then
            velocity = velocity + Vector3.new(0, 1, 0) * flySpeed
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
            velocity = velocity - Vector3.new(0, 1, 0) * flySpeed
        end
        
        HRP.CFrame = HRP.CFrame + velocity * RunService.Heartbeat:Wait()
    end
end)

-- Aimbot & ESP logic
RunService.Stepped:Connect(function()
    -- Aimbot
    if aimbotEnabled then
        local target = getClosestTarget()
        if target and target.Character then
            local targetPart = target.Character:FindFirstChild(aimbotTargetPart)
            if targetPart then
                local targetCFrame = targetPart.CFrame
                local aimCFrame = CFrame.new(Camera.CFrame.Position, targetCFrame.Position)
                local rotation = CFrame.new(Camera.CFrame.Position, aimCFrame.Position)
                
                local smoothAmount = aimbotSmoothness/1000
                Camera.CFrame = Camera.CFrame:lerp(aimCFrame, smoothAmount)
            end
        end
    end
    
    -- Draw FOV Circle
    if showFOVCircle and not fovCircle then
        fovCircle = Drawing.new("Circle")
        fovCircle.Color = Color3.fromRGB(255, 255, 255)
        fovCircle.Radius = aimbotFOV
        fovCircle.Thickness = 1
        fovCircle.Filled = false
        fovCircle.Visible = true
        fovCircle.Position = Vector2.new(Mouse.X, Mouse.Y)
    end
    
    if showFOVCircle and fovCircle then
        fovCircle.Position = Vector2.new(Mouse.X, Mouse.Y)
    end
    
    if not showFOVCircle and fovCircle then
        fovCircle:Remove()
        fovCircle = nil
    end
    
    -- ESP
    updateDrawingObjects()
end)

-- Системные функции
local function setupInfiniteJump()
    UserInputService.JumpRequest:Connect(function()
        if infiniteJumpEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
end

-- Обработчики кнопок
CloseButton.MouseButton1Click:Connect(HideGUI)

-- Горячие клавиши
spawn(function()
    wait(1) -- Ждем полной инициализации
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.KeyCode == Enum.KeyCode.Insert then
            print("SSLKin: Insert нажат, MainFrame.Visible =", MainFrame.Visible) -- Отладка
            if MainFrame.Visible then
                HideGUI()
            else
                ShowGUI()
            end
        end
    end)
    print("SSLKin: Горячие клавиши инициализированы")
end)

-- Инициализация
setupInfiniteJump()

-- Активация первой вкладки
if #tabs > 0 then
    tabs[1].button.MouseButton1Click()
end

-- Показать GUI при загрузке
ShowGUI()

-- Уведомление о загрузке
game.StarterGui:SetCore("SendNotification", {
    Title = "SSLKin Uni Script",
    Text = "Centaura Script загружен! Нажмите INSERT, чтобы открыть меню.",
    Duration = 5
})
