#!/usr/bin/env python3

import re
import sys
import os

def read_file(filename):
    """–ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞"""
    try:
        with open(filename, 'r', encoding='utf-8', errors='ignore') as f:
            return f.read()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {filename}: {e}")
        return None

def write_file(filename, content):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —Ñ–∞–π–ª"""
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(content)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞ {filename}: {e}")
        return False

def extract_real_code(content):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –∫–æ–¥ –∏–∑ MoonSec V3"""
    print("üîç –ò–∑–≤–ª–µ–∫–∞—é —Ä–µ–∞–ª—å–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –∫–æ–¥...")
    
    # –ò—â–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é-–æ–±–µ—Ä—Ç–∫—É
    wrapper_pattern = r'return\s*\(\s*function\s*\([^)]*\)(.*?)end\s*\)\s*\('
    match = re.search(wrapper_pattern, content, re.DOTALL)
    
    if not match:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞")
        return content
    
    function_body = match.group(1)
    print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞")
    
    # –ò—â–µ–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
    string_pattern = r'n\(h\(\d+,"([^"]+)"\)\)'
    strings = re.findall(string_pattern, function_body)
    
    if strings:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(strings)} –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫")
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É (–æ–±—ã—á–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥)
        main_encoded = strings[0] if strings else ""
        decoded_code = decode_moonsec_string(main_encoded)
        return decoded_code
    
    return function_body

def decode_moonsec_string(encoded_str):
    """–î–µ–∫–æ–¥–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É MoonSec"""
    print("üî§ –î–µ–∫–æ–¥–∏—Ä—É—é —Å—Ç—Ä–æ–∫—É MoonSec...")
    
    # MoonSec –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
    
    decoded_chars = []
    i = 0
    
    while i < len(encoded_str):
        char = encoded_str[i]
        
        if char == '\\':
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º escape-–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            if i + 1 < len(encoded_str):
                next_char = encoded_str[i + 1]
                if next_char.isdigit():
                    # –í–æ—Å—å–º–µ—Ä–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
                    octal = ""
                    j = i + 1
                    while j < len(encoded_str) and j < i + 4 and encoded_str[j].isdigit():
                        octal += encoded_str[j]
                        j += 1
                    if octal:
                        try:
                            decoded_chars.append(chr(int(octal, 8)))
                            i = j
                            continue
                        except:
                            pass
                i += 2
            else:
                i += 1
        else:
            decoded_chars.append(char)
            i += 1
    
    decoded = ''.join(decoded_chars)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è MoonSec
    # –£–¥–∞–ª—è–µ–º –Ω—É–ª–µ–≤—ã–µ –±–∞–π—Ç—ã –∏ –Ω–µ–ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    clean_decoded = ''.join(c for c in decoded if ord(c) >= 32 or c in '\n\t\r')
    
    print(f"‚úÖ –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–æ {len(clean_decoded)} —Å–∏–º–≤–æ–ª–æ–≤")
    return clean_decoded

def extract_lua_functions(content):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç Lua —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∫–æ–¥–∞"""
    print("üîß –ò–∑–≤–ª–µ–∫–∞—é Lua —Ñ—É–Ω–∫—Ü–∏–∏...")
    
    functions = []
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π
    function_patterns = [
        r'function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)',
        r'local\s+function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)',
        r'([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*function\s*\([^)]*\)'
    ]
    
    for pattern in function_patterns:
        matches = re.findall(pattern, content)
        functions.extend(matches)
    
    # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    unique_functions = list(set(functions))
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(unique_functions)} —Ñ—É–Ω–∫—Ü–∏–π")
    return unique_functions

def create_working_roblox_script(content):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—é—â–∏–π Roblox —Å–∫—Ä–∏–ø—Ç"""
    print("üî® –°–æ–∑–¥–∞—é —Ä–∞–±–æ—Ç–∞—é—â–∏–π Roblox —Å–∫—Ä–∏–ø—Ç...")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–¥
    real_code = extract_real_code(content)
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è Roblox
    roblox_header = '''-- –î–µ–æ–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Roblox —Å–∫—Ä–∏–ø—Ç
-- –û—Ä–∏–≥–∏–Ω–∞–ª –±—ã–ª –∑–∞—â–∏—â–µ–Ω MoonSec V3
-- –í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

-- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã Roblox (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
local game = game
local workspace = workspace  
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local httpService = game:GetService("HttpService")
local tweenService = game:GetService("TweenService")

-- –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
local wait = wait or task.wait
local spawn = spawn or task.spawn
local delay = delay or task.delay

'''
    
    # –ï—Å–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π
    if len(real_code) < 100:
        real_code = content
    
    # –û—á–∏—â–∞–µ–º –∫–æ–¥ –æ—Ç –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏ (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ)
    cleaned_code = clean_obfuscated_code(real_code)
    
    # –°–æ–±–∏—Ä–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
    final_script = roblox_header + cleaned_code
    
    return final_script

def clean_obfuscated_code(code):
    """–û—á–∏—â–∞–µ—Ç –∫–æ–¥ –æ—Ç –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏, —Å–æ—Ö—Ä–∞–Ω—è—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"""
    print("‚ú® –û—á–∏—â–∞—é –∫–æ–¥ –æ—Ç –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏...")
    
    # –ë–∞–∑–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞
    cleaned = code
    
    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
    cleaned = re.sub(r'\n\s*\n', '\n', cleaned)
    cleaned = re.sub(r'  +', ' ', cleaned)
    
    # –£–ª—É—á—à–∞–µ–º —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
    cleaned = re.sub(r'([a-zA-Z0-9_])\s*=\s*([a-zA-Z0-9_])', r'\1 = \2', cleaned)
    cleaned = re.sub(r'([a-zA-Z0-9_])\s*\+\s*([a-zA-Z0-9_])', r'\1 + \2', cleaned)
    cleaned = re.sub(r'([a-zA-Z0-9_])\s*-\s*([a-zA-Z0-9_])', r'\1 - \2', cleaned)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –±–ª–æ–∫–∏ –∫–æ–¥–∞
    lines = cleaned.split('\n')
    formatted_lines = []
    indent_level = 0
    
    for line in lines:
        stripped = line.strip()
        if not stripped:
            formatted_lines.append('')
            continue
        
        # –£–º–µ–Ω—å—à–∞–µ–º –æ—Ç—Å—Ç—É–ø –¥–ª—è end, else, elseif
        if any(stripped.startswith(kw) for kw in ['end', 'else', 'elseif', 'until']):
            indent_level = max(0, indent_level - 1)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø
        formatted_lines.append('    ' * indent_level + stripped)
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø –¥–ª—è –±–ª–æ–∫–æ–≤
        if any(kw in stripped for kw in ['then', ' do', 'function', 'repeat']):
            if not stripped.endswith('end'):
                indent_level += 1
    
    return '\n'.join(formatted_lines)

def analyze_script_functionality(content):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç–∞"""
    print("üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç–∞...")
    
    analysis = {
        'roblox_services': [],
        'game_functions': [],
        'network_calls': [],
        'gui_elements': [],
        'events': []
    }
    
    # –ü–æ–∏—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ Roblox
    service_patterns = [
        r'game:GetService\("([^"]+)"\)',
        r'game\.([A-Z][a-zA-Z]+)',
        r'workspace\.([a-zA-Z_][a-zA-Z0-9_]*)'
    ]
    
    for pattern in service_patterns:
        matches = re.findall(pattern, content)
        analysis['roblox_services'].extend(matches)
    
    # –ü–æ–∏—Å–∫ –∏–≥—Ä–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    game_function_patterns = [
        r'(wait|spawn|delay)\s*\(',
        r'(Connect|Disconnect|Fire)\s*\(',
        r'(TweenInfo|Tween)\s*\('
    ]
    
    for pattern in game_function_patterns:
        matches = re.findall(pattern, content)
        analysis['game_functions'].extend(matches)
    
    # –ü–æ–∏—Å–∫ —Å–µ—Ç–µ–≤—ã—Ö –≤—ã–∑–æ–≤–æ–≤
    network_patterns = [
        r'HttpService:([A-Z][a-zA-Z]*)',
        r'(GET|POST|PUT|DELETE)\s*\(',
        r'https?://[^\s"\']+',
    ]
    
    for pattern in network_patterns:
        matches = re.findall(pattern, content)
        analysis['network_calls'].extend(matches)
    
    # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    for key in analysis:
        analysis[key] = list(set(analysis[key]))
    
    return analysis

def main():
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 advanced_roblox_deobfuscator.py <—Ñ–∞–π–ª>")
        return
    
    filename = sys.argv[1]
    
    print("üöÄ –ü–†–û–î–í–ò–ù–£–¢–´–ô –î–ï–û–ë–§–£–°–ö–ê–¢–û–† ROBLOX –°–ö–†–ò–ü–¢–û–í")
    print("=" * 60)
    print(f"üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: {filename}")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    content = read_file(filename)
    if not content:
        return
    
    print(f"üìä –†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {len(content):,} –±–∞–π—Ç")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    working_script = create_working_roblox_script(content)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    analysis = analyze_script_functionality(content)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    functions = extract_lua_functions(working_script)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    base_name = os.path.splitext(filename)[0]
    
    print("\nüíæ –°–æ—Ö—Ä–∞–Ω—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...")
    
    # 1. –†–∞–±–æ—á–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Roblox
    working_file = f"{base_name}_working.lua"
    write_file(working_file, working_script)
    print(f"‚úÖ –†–∞–±–æ—á–∏–π —Å–∫—Ä–∏–ø—Ç: {working_file}")
    
    # 2. –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π)
    original_code = extract_real_code(content)
    original_file = f"{base_name}_original_extracted.lua"
    write_file(original_file, original_code)
    print(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π –∫–æ–¥: {original_file}")
    
    # 3. –ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    analysis_file = f"{base_name}_functionality_analysis.txt"
    analysis_content = f"""–ê–ù–ê–õ–ò–ó –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò ROBLOX –°–ö–†–ò–ü–¢–ê
{'='*60}

–ò–°–•–û–î–ù–´–ô –§–ê–ô–õ: {filename}
–†–ê–ó–ú–ï–†: {len(content):,} –±–∞–π—Ç
–†–ê–ó–ú–ï–† –ò–ó–í–õ–ï–ß–ï–ù–ù–û–ì–û –ö–û–î–ê: {len(working_script):,} –±–∞–π—Ç

–ù–ê–ô–î–ï–ù–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´:

–°–ï–†–í–ò–°–´ ROBLOX ({len(analysis['roblox_services'])}):
{chr(10).join(f"  ‚Ä¢ {service}" for service in analysis['roblox_services'][:20])}
{f"  ... –∏ –µ—â–µ {len(analysis['roblox_services']) - 20}" if len(analysis['roblox_services']) > 20 else ""}

–ò–ì–†–û–í–´–ï –§–£–ù–ö–¶–ò–ò ({len(analysis['game_functions'])}):
{chr(10).join(f"  ‚Ä¢ {func}" for func in analysis['game_functions'][:20])}

–°–ï–¢–ï–í–´–ï –í–´–ó–û–í–´ ({len(analysis['network_calls'])}):
{chr(10).join(f"  ‚Ä¢ {call}" for call in analysis['network_calls'][:10])}

–ù–ê–ô–î–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò ({len(functions)}):
{chr(10).join(f"  ‚Ä¢ {func}" for func in functions[:30])}
{f"  ... –∏ –µ—â–µ {len(functions) - 30}" if len(functions) > 30 else ""}

–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ {working_file} –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Roblox Studio
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ {original_file} –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
‚Ä¢ –°–∫—Ä–∏–ø—Ç –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –≤ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö

–í–ê–ñ–ù–û: 
- –í—Å–µ–≥–¥–∞ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ä–µ–¥–µ
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
- –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
"""
    
    write_file(analysis_file, analysis_content)
    print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: {analysis_file}")
    
    # 4. –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç
    report_file = f"{base_name}_deobfuscation_summary.txt"
    report_content = f"""–ö–†–ê–¢–ö–ò–ô –û–¢–ß–ï–¢ –û –î–ï–û–ë–§–£–°–ö–ê–¶–ò–ò
{'='*40}

‚úÖ –î–ï–û–ë–§–£–°–ö–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!

üìÅ –°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:
1. {working_file} - –ì–æ—Ç–æ–≤—ã–π –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∫—Ä–∏–ø—Ç
2. {original_file} - –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥  
3. {analysis_file} - –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
4. {report_file} - –≠—Ç–æ—Ç –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç

üéØ –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í ROBLOX:
–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª {working_file} –≤ Roblox Studio

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
‚Ä¢ –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {len(content):,} –±–∞–π—Ç
‚Ä¢ –†–∞–∑–º–µ—Ä –¥–µ–æ–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ: {len(working_script):,} –±–∞–π—Ç
‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π: {len(functions)}
‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: {len(analysis['roblox_services'])}

‚ö†Ô∏è  –í–ê–ñ–ù–û:
–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º!
"""
    
    write_file(report_file, report_content)
    print(f"‚úÖ –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç: {report_file}")
    
    print(f"\nüéâ –î–ï–û–ë–§–£–°–ö–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: 4")
    print(f"üéÆ –î–ª—è Roblox –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: {working_file}")
    print(f"üîç –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: {analysis_file}")
    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í—Å–µ–≥–¥–∞ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ä–µ–¥–µ!")

if __name__ == "__main__":
    main()