-- Anti-AFK System (–≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–µ–Ω)
local function startAntiAFK()
    local VirtualUser = game:GetService("VirtualUser")
    local Players = game:GetService("Players")
    
    local function onIdle()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end
    
    local idleConnection = Players.LocalPlayer.Idled:Connect(onIdle)
    
    -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –ø—Ä–∏ —Å–º–µ—Ä—Ç–∏/—Ä–µ—Å–ø–∞—É–Ω–µ
    local function onCharacterAdded()
        task.wait(1)
        if idleConnection then
            idleConnection:Disconnect()
        end
        idleConnection = Players.LocalPlayer.Idled:Connect(onIdle)
    end
    
    Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    
    print("Anti-AFK —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω—Ç–∏-AFK —Å—Ä–∞–∑—É
startAntiAFK()

-- Autosell Module –¥–ª—è YBA
-- –û—Ç–¥–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≤—Ç–æ—Å–µ–ª–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏
local AutosellConfig = {
    Enabled = false,
    ShiftploxPosition = Vector3.new(-709, -35, -332), -- –ø–æ–∑–∏—Ü–∏—è NPC Shiftplox (–Ω–∞ 10 –µ–¥–∏–Ω–∏—Ü –Ω–∏–∂–µ)
    CameraWallhack = true, -- –ö–∞–º–µ—Ä–∞ —Å–º–æ—Ç—Ä–∏—Ç —Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã –≤–æ –≤—Ä–µ–º—è –∞–≤—Ç–æ—Å–µ–ª–∞
    MaxItemCount = 10, -- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
    ItemLimits = {
        ["Mysterious Arrow"] = 25,
        ["Rokakaka"] = 25,
        ["Pure Rokakaka"] = 25,
        ["Diamond"] = 30,
        ["Gold Coin"] = 45,
        ["Steel Ball"] = 10,
        ["Clackers"] = 10,
        ["Caesar's Headband"] = 10,
        ["Zeppeli's Hat"] = 10,
        ["Zeppeli's Scarf"] = 10,
        ["Quinton's Glove"] = 10,
        ["Stone Mask"] = 10,
        ["Ancient Scroll"] = 10,
        ["DIO's Diary"] = 10,
        ["Dio's Diary"] = 10,
        ["Rib Cage of The Saint's Corpse"] = 20,
        -- Lucky Arrow –∏ Lucky Stone Mask –∏—Å–∫–ª—é—á–µ–Ω—ã
    },
    Items = {
        ["Mysterious Arrow"] = true,
        ["Rokakaka"] = true,
        ["Pure Rokakaka"] = true,
        ["Diamond"] = true,
        ["Gold Coin"] = true,
        ["Steel Ball"] = true,
        ["Clackers"] = true,
        ["Caesar's Headband"] = true,
        ["Zeppeli's Hat"] = true,
        ["Zeppeli's Scarf"] = true,
        ["Ancient Scroll"] = true,
        ["Quinton's Glove"] = true,
        ["Stone Mask"] = true,
        ["Rib Cage of The Saint's Corpse"] = true,
        ["DIO's Diary"] = true,
        ["Dio's Diary"] = true,
    }
}

-- Autosell variables
local isAutosellEnabled = false
local autosellConnections = {}
local isSellingToNPC = false
local autosellCheckTimer = nil
local deathCheckConnection = nil


-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è wallhack –∫–∞–º–µ—Ä—ã –≤–æ –≤—Ä–µ–º—è –∞–≤—Ç–æ—Å–µ–ª–∞
local function enableCameraWallhack()
    if not AutosellConfig.CameraWallhack then return end
    
    local camera = workspace.CurrentCamera
    if not camera then return end
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã
    if not _G.originalCameraSettings then
        _G.originalCameraSettings = {
            CameraType = camera.CameraType,
            CameraSubject = camera.CameraSubject,
            CFrame = camera.CFrame
        }
    end
    
    -- –í–∫–ª—é—á–∞–µ–º wallhack –∫–∞–º–µ—Ä—É
    camera.CameraType = Enum.CameraType.Scriptable
    
    -- –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –∫–∞–º–µ—Ä—ã
    if not _G.cameraWallhackConnection then
        _G.cameraWallhackConnection = game:GetService("RunService").RenderStepped:Connect(function()
            local player = Players.LocalPlayer
            if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
            
            local playerRoot = player.Character.HumanoidRootPart
            local playerPos = playerRoot.Position
            local playerCFrame = playerRoot.CFrame
            
            -- –ü–æ–∑–∏—Ü–∏—è –∫–∞–º–µ—Ä—ã —Å—Ç—Ä–æ–≥–æ —Å–≤–µ—Ä—Ö—É –∏–≥—Ä–æ–∫–∞ (–≤–∏–¥ —Å–≤–µ—Ä—Ö—É –Ω–∞ –≥–æ–ª–æ–≤—É)
            local cameraOffset = Vector3.new(0, 20, 0) -- –¢–æ–ª—å–∫–æ –ø–æ Y, —Å—Ç—Ä–æ–≥–æ —Å–≤–µ—Ä—Ö—É
            local cameraPosition = playerPos + cameraOffset
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
            raycastParams.FilterDescendantsInstances = {player.Character}
            
            local raycastResult = workspace:Raycast(playerPos, cameraPosition - playerPos, raycastParams)
            if raycastResult then
                -- –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∞–º–µ—Ä—É –±–ª–∏–∂–µ –∫ –∏–≥—Ä–æ–∫—É
                local hitPosition = raycastResult.Position
                local adjustedPosition = hitPosition - (cameraPosition - playerPos).Unit * 2
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –Ω–µ —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–∫–æ –∫ –∏–≥—Ä–æ–∫—É
                local distanceToPlayer = (adjustedPosition - playerPos).Magnitude
                if distanceToPlayer > 5 then
                    cameraPosition = adjustedPosition
                end
            end
            
            -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É —Å—Ç—Ä–æ–≥–æ —Å–≤–µ—Ä—Ö—É –∏–≥—Ä–æ–∫–∞ —Å –≤–∏–¥–æ–º –≤–Ω–∏–∑ –Ω–∞ –≥–æ–ª–æ–≤—É
            camera.CFrame = CFrame.new(cameraPosition, playerPos)
        end)
    end
    
    print("ü§ñ AUTOSELL: Wallhack –∫–∞–º–µ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞ (–≤–∏–¥ —Å–≤–µ—Ä—Ö—É)")
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è wallhack –∫–∞–º–µ—Ä—ã
local function disableCameraWallhack()
    if not _G.cameraWallhackConnection then return end
    
    _G.cameraWallhackConnection:Disconnect()
    _G.cameraWallhackConnection = nil
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã
    local camera = workspace.CurrentCamera
    if camera and _G.originalCameraSettings then
        camera.CameraType = _G.originalCameraSettings.CameraType
        camera.CameraSubject = _G.originalCameraSettings.CameraSubject
        camera.CFrame = _G.originalCameraSettings.CFrame
    end
    
    print("ü§ñ AUTOSELL: Wallhack –∫–∞–º–µ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
end











-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Å–µ–ª–ª–∞ –ø–µ—Ä–µ–¥ —Å–º–µ—Ä—Ç—å—é
local wasAutosellEnabledBeforeDeath = false

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ HP
local healthMonitorConnection = nil
local lastHealth = nil
local healthCheckInterval = 1 -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
local isHealthMonitoringEnabled = false

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ GUI
local itemToggleCallbacks = {} -- –•—Ä–∞–Ω–∏—Ç callback —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç—É–º–±–ª–µ—Ä–æ–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–Ω–µ—à–Ω–∏–º –∞–≤—Ç–æ—Ñ–∞—Ä–º–æ–º (—Ñ–∞–π–ª huyna)
local externalAutofarmConfig = {
    restartOnDeath = true, -- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –∞–≤—Ç–æ—Ñ–∞—Ä–º –ø—Ä–∏ —Å–º–µ—Ä—Ç–∏
    restartDelay = 3, -- –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º (—Å–µ–∫—É–Ω–¥—ã)
    
    -- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–Ω–µ—à–Ω–∏–º –∞–≤—Ç–æ—Ñ–∞—Ä–º–æ–º
    stopFunction = nil, -- –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
    startFunction = nil, -- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
    isEnabledFunction = nil, -- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
    
    -- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
    globalStopNames = {"stopAutofarm", "stopFarm", "autofarm_stop", "farm_stop", "stop_autofarm"},
    globalStartNames = {"startAutofarm", "startFarm", "autofarm_start", "farm_start", "start_autofarm"},
    globalEnabledNames = {"isAutofarmEnabled", "isFarmEnabled", "autofarm_enabled", "farm_enabled"}
}

-- –§—É–Ω–∫—Ü–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –¥–≤–∏–∂–µ–Ω–∏–π (–ë–ï–ó –ó–ê–ú–û–†–û–ó–ö–ò)
local function emergencyStopMovement()
    print("ü§ñ AUTOSELL: –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê –î–í–ò–ñ–ï–ù–ò–Ø!")
    
    local player = Players.LocalPlayer
    if not player or not player.Character then return end
    
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = player.Character:FindFirstChild("Humanoid")
    
    -- –ü—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º –≤—Å–µ BodyMovers (–ë–ï–ó –ø–æ–ø—ã—Ç–æ–∫ –ø–ª–∞–≤–Ω–æ–≥–æ —Å–Ω–∏–∂–µ–Ω–∏—è)
    if humanoidRootPart then
        local allMovers = humanoidRootPart:GetChildren()
        for _, child in pairs(allMovers) do
            if child:IsA("BodyVelocity") or child:IsA("BodyPosition") or child:IsA("BodyAngularVelocity") or 
               child:IsA("BodyThrust") or child:IsA("BodyForce") or child:IsA("BodyGyro") then
                child:Destroy()
            end
        end
    end
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if humanoid then
        humanoid.WalkSpeed = 16
        humanoid.JumpPower = 50
        humanoid.JumpHeight = 7.2
        humanoid.HipHeight = 2 -- –í–∞–∂–Ω–æ –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ö–æ–¥—å–±—ã!
        humanoid.Sit = false
        -- –ù–ò–ö–ê–ö–ò–• –ø–æ–ø—ã—Ç–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ –∑–∞–º–æ—Ä–æ–∑–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!
    end
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é
    workspace.Gravity = 196.2
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º fly –∏ noclip
    if _G.MovementConfig then
        if _G.MovementConfig.Fly and _G.MovementConfig.Fly.Enabled then
            _G.MovementConfig.Fly.Enabled = false
            if _G.stopFly then _G.stopFly() end
        end
        if _G.MovementConfig.NoClip and _G.MovementConfig.NoClip.Enabled then
            _G.MovementConfig.NoClip.Enabled = false
            if _G.stopNoClip then _G.stopNoClip() end
        end
    end
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–ª–∏–∑–∏—é
    for _, part in pairs(player.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
    
    print("ü§ñ AUTOSELL: –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å–≤–æ–±–æ–¥–µ–Ω.")
end

-- Autosell Functions

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–º–µ—Ä—Ç–∏ –∏–≥—Ä–æ–∫–∞
local function checkPlayerDeath()
    local player = Players.LocalPlayer
    if not player or not player.Character then return true end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid then return true end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if humanoid.Health <= 0 then
        print("ü§ñ AUTOSELL: –ò–≥—Ä–æ–∫ —É–º–µ—Ä! –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª...")
        stopAutosell()
        
        -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
        if _G.stopAutofarm and type(_G.stopAutofarm) == "function" then
            print("ü§ñ AUTOSELL: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º –∏–∑-–∑–∞ —Å–º–µ—Ä—Ç–∏ –∏–≥—Ä–æ–∫–∞...")
            _G.stopAutofarm()
        end
        
        return true
    end
    
    return false
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ HP –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
local function startHealthMonitoring()
    if isHealthMonitoringEnabled then return end
    isHealthMonitoringEnabled = true
    
    print("ü§ñ AUTOFARM: –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ HP –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É...")
    
    healthMonitorConnection = task.spawn(function()
        while isHealthMonitoringEnabled do
            local player = Players.LocalPlayer
            
            if player and player.Character then
                local humanoid = player.Character:FindFirstChild("Humanoid")
                
                if humanoid then
                    local currentHealth = humanoid.Health
                    
                    -- –ï—Å–ª–∏ HP —Å—Ç–∞–ª–æ 0 –∏–ª–∏ –º–µ–Ω—å—à–µ
                    if currentHealth <= 0 then
                        print("ü§ñ AUTOFARM: –û–ë–ù–ê–†–£–ñ–ï–ù–û 0 HP! –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞...")
                        
                        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Å–µ–ª–∞ –ø–µ—Ä–µ–¥ —Å–º–µ—Ä—Ç—å—é
                        wasAutosellEnabledBeforeDeath = isAutosellEnabled
                        
                        -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º (–∏–∑ —Ñ–∞–π–ª–∞ huyna)
                        stopExternalAutofarm()
                        
                        -- –î—É–±–ª–∏—Ä—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                        if _G.stopAutofarm and type(_G.stopAutofarm) == "function" then
                            pcall(_G.stopAutofarm)
                        end
                        
                        -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª
                        if isAutosellEnabled then
                            stopAutosell()
                        end
                        
                        -- –ñ–¥–µ–º –ø–æ–∫–∞ –∏–≥—Ä–æ–∫ –≤–æ–∑—Ä–æ–¥–∏—Ç—Å—è (HP > 0)
                        print("ü§ñ AUTOFARM: –û–∂–∏–¥–∞–Ω–∏–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞...")
                        while isHealthMonitoringEnabled do
                            task.wait(1)
                            
                            local newPlayer = Players.LocalPlayer
                            if newPlayer and newPlayer.Character then
                                local newHumanoid = newPlayer.Character:FindFirstChild("Humanoid")
                                if newHumanoid and newHumanoid.Health > 0 then
                                    print("ü§ñ AUTOFARM: –ò–≥—Ä–æ–∫ –≤–æ–∑—Ä–æ–¥–∏–ª—Å—è! HP =", newHumanoid.Health)
                                    
                                    -- –í–∫–ª—é—á–∞–µ–º NoClip —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è
                                    task.spawn(function()
                                        task.wait(1) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                                        enableNoClipAfterRespawn()
                                    end)
                                    
                                    -- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º (–∏–∑ —Ñ–∞–π–ª–∞ huyna)
                                    task.spawn(function()
                                        task.wait(2) -- –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
                                        print("üîÑ AUTOFARM LINK: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è...")
                                        restartExternalAutofarm()
                                    end)
                                    
                                    -- –î—É–±–ª–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                                    if _G.startAutofarm and type(_G.startAutofarm) == "function" then
                                        task.spawn(function()
                                            task.wait(3) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                                            print("ü§ñ AUTOFARM: –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞...")
                                            pcall(_G.startAutofarm)
                                        end)
                                    end
                                    
                                    -- –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ—Å–µ–ª –µ—Å–ª–∏ –æ–Ω –±—ã–ª –≤–∫–ª—é—á–µ–Ω
                                    if wasAutosellEnabledBeforeDeath then
                                        task.spawn(function()
                                            task.wait(4) -- –î–∞–µ–º –≤—Ä–µ–º—è –∞–≤—Ç–æ—Ñ–∞—Ä–º—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
                                            print("ü§ñ AUTOFARM: –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ—Å–µ–ª –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è...")
                                            startAutosell()
                                            wasAutosellEnabledBeforeDeath = false
                                        end)
                                    end
                                    
                                    break
                                end
                            end
                        end
                    end
                    
                    lastHealth = currentHealth
                end
            end
            
            task.wait(healthCheckInterval) -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ HP
local function stopHealthMonitoring()
    if not isHealthMonitoringEnabled then return end
    isHealthMonitoringEnabled = false
    
    print("ü§ñ AUTOFARM: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ HP...")
    
    if healthMonitorConnection then
        task.cancel(healthMonitorConnection)
        healthMonitorConnection = nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function findExternalAutofarmFunctions()
    print("üîç AUTOFARM LINK: –ü–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞...")
    
    -- –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    for _, name in ipairs(externalAutofarmConfig.globalStopNames) do
        if _G[name] and type(_G[name]) == "function" then
            externalAutofarmConfig.stopFunction = _G[name]
            print("‚úÖ AUTOFARM LINK: –ù–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:", name)
            break
        end
    end
    
    -- –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞
    for _, name in ipairs(externalAutofarmConfig.globalStartNames) do
        if _G[name] and type(_G[name]) == "function" then
            externalAutofarmConfig.startFunction = _G[name]
            print("‚úÖ AUTOFARM LINK: –ù–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞:", name)
            break
        end
    end
    
    -- –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for _, name in ipairs(externalAutofarmConfig.globalEnabledNames) do
        if _G[name] and type(_G[name]) == "function" then
            externalAutofarmConfig.isEnabledFunction = _G[name]
            print("‚úÖ AUTOFARM LINK: –ù–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:", name)
            break
        end
    end
    
    -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –≤ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö
    local autofarmObjects = {"AutofarmModule", "FarmModule", "AutoFarm", "Farm"}
    for _, objName in ipairs(autofarmObjects) do
        if _G[objName] and type(_G[objName]) == "table" then
            print("üîç AUTOFARM LINK: –ù–∞–π–¥–µ–Ω –æ–±—ä–µ–∫—Ç –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞:", objName)
            
            -- –ò—â–µ–º –º–µ—Ç–æ–¥—ã –≤ –æ–±—ä–µ–∫—Ç–µ
            local obj = _G[objName]
            if obj.stop and type(obj.stop) == "function" and not externalAutofarmConfig.stopFunction then
                externalAutofarmConfig.stopFunction = obj.stop
                print("‚úÖ AUTOFARM LINK: –ù–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤", objName)
            end
            if obj.start and type(obj.start) == "function" and not externalAutofarmConfig.startFunction then
                externalAutofarmConfig.startFunction = obj.start
                print("‚úÖ AUTOFARM LINK: –ù–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ –≤", objName)
            end
            if obj.isEnabled and type(obj.isEnabled) == "function" and not externalAutofarmConfig.isEnabledFunction then
                externalAutofarmConfig.isEnabledFunction = obj.isEnabled
                print("‚úÖ AUTOFARM LINK: –ù–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤", objName)
            end
        end
    end
    
    -- –û—Ç—á–µ—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞
    local foundCount = 0
    if externalAutofarmConfig.stopFunction then foundCount = foundCount + 1 end
    if externalAutofarmConfig.startFunction then foundCount = foundCount + 1 end
    if externalAutofarmConfig.isEnabledFunction then foundCount = foundCount + 1 end
    
    if foundCount > 0 then
        print("üéØ AUTOFARM LINK: –ù–∞–π–¥–µ–Ω–æ", foundCount, "–∏–∑ 3 —Ñ—É–Ω–∫—Ü–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞")
        return true
    else
        print("‚ùå AUTOFARM LINK: –§—É–Ω–∫—Ü–∏–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return false
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function stopExternalAutofarm()
    if externalAutofarmConfig.stopFunction then
        print("üõë AUTOFARM LINK: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º...")
        pcall(externalAutofarmConfig.stopFunction)
        return true
    else
        print("‚ö†Ô∏è AUTOFARM LINK: –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return false
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function startExternalAutofarm()
    if externalAutofarmConfig.startFunction then
        print("üöÄ AUTOFARM LINK: –ó–∞–ø—É—Å–∫–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º...")
        pcall(externalAutofarmConfig.startFunction)
        return true
    else
        print("‚ö†Ô∏è AUTOFARM LINK: –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return false
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function isExternalAutofarmEnabled()
    if externalAutofarmConfig.isEnabledFunction then
        local success, result = pcall(externalAutofarmConfig.isEnabledFunction)
        if success then
            return result
        end
    end
    return false
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function restartExternalAutofarm()
    if not externalAutofarmConfig.restartOnDeath then
        print("üîÑ AUTOFARM LINK: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –æ—Ç–∫–ª—é—á–µ–Ω")
        return false
    end
    
    print("üîÑ AUTOFARM LINK: –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞...")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º
    stopExternalAutofarm()
    
    -- –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    task.wait(externalAutofarmConfig.restartDelay)
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º
    return startExternalAutofarm()
end

-- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–∫–∞–∫ –≤ –∞–≤—Ç–æ—Ñ–∞—Ä–º–µ –∏–∑ huyna)
local function freezePlayerAtShiftplox()
    local player = Players.LocalPlayer
    local char = player.Character
    if not char then return end
    
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChild("Humanoid")
    
    if root then
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
        local originalPosition = root.Position
        local originalCFrame = root.CFrame
        
        -- –°–æ–∑–¥–∞–µ–º BodyVelocity –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏
        local bv = root:FindFirstChild("ShiftploxFreezeBodyVelocity")
        if not bv then
            bv = Instance.new("BodyVelocity", root)
            bv.Name = "ShiftploxFreezeBodyVelocity"
            bv.MaxForce = Vector3.new(1e6, 1e6, 1e6)
        end
        bv.Velocity = Vector3.new(0, 0, 0)
        
        -- –°–æ–∑–¥–∞–µ–º BodyGyro –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–æ–≤–æ—Ä–æ—Ç–∞
        local gyro = root:FindFirstChild("ShiftploxFreezeBodyGyro")
        if not gyro then
            gyro = Instance.new("BodyGyro", root)
            gyro.Name = "ShiftploxFreezeBodyGyro"
            gyro.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
        end
        gyro.CFrame = root.CFrame
        
        print("üîí AUTOSELL: –ü–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω —É Shiftplox!")
    end
    
    if humanoid then
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        local originalWalkSpeed = humanoid.WalkSpeed
        local originalJumpPower = humanoid.JumpPower
        
        -- –û—Ç–∫–ª—é—á–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
        
        -- –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ-–ø–æ–≤–æ—Ä–æ—Ç
        humanoid.AutoRotate = false
        humanoid.AutoJumpEnabled = false
        
        print("üîí AUTOSELL: –î–≤–∏–∂–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ!")
    end
end

local function unfreezePlayerFromShiftplox()
    local player = Players.LocalPlayer
    local char = player.Character
    if not char then return end
    
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChild("Humanoid")
    
    if root then
        -- –£–±–∏—Ä–∞–µ–º BodyVelocity
        local bv = root:FindFirstChild("ShiftploxFreezeBodyVelocity")
        if bv then
            bv:Destroy()
        end
        
        -- –£–±–∏—Ä–∞–µ–º BodyGyro
        local gyro = root:FindFirstChild("ShiftploxFreezeBodyGyro")
        if gyro then
            gyro:Destroy()
        end
        
        print("üîì AUTOSELL: –§–∏–∫—Å–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å–Ω—è—Ç–∞!")
    end
    
    if humanoid then
        -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–≤–∏–∂–µ–Ω–∏—è
        humanoid.WalkSpeed = 16
        humanoid.JumpPower = 50
        
        -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ-–ø–æ–≤–æ—Ä–æ—Ç
        humanoid.AutoRotate = true
        humanoid.AutoJumpEnabled = true
        
        print("üîì AUTOSELL: –î–≤–∏–∂–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ NoClip –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è (–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ)
local function enableNoClipAfterRespawn()
    print("üöÄ AUTOSELL: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º NoClip –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è...")
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –¥–≤–∏–∂–µ–Ω–∏—è
    if not _G.MovementConfig then
        print("‚ö†Ô∏è AUTOSELL: MovementConfig –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
        return false
    end
    
    if not _G.MovementConfig.NoClip then
        print("‚ö†Ô∏è AUTOSELL: NoClip –∫–æ–Ω—Ñ–∏–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
        return false
    end
    
    -- –í–°–ï–ì–î–ê –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º NoClip (–≤—ã–∫–ª—é—á–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º —Å–Ω–æ–≤–∞)
    print("üîÑ AUTOSELL: –û—Ç–∫–ª—é—á–∞–µ–º NoClip –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º...")
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º NoClip –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
    if _G.MovementConfig.NoClip.Enabled then
        _G.MovementConfig.NoClip.Enabled = false
        if _G.stopNoClip and type(_G.stopNoClip) == "function" then
            _G.stopNoClip()
        end
    end
    
    -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º
    task.wait(0.5)
    
    -- –í–∫–ª—é—á–∞–µ–º NoClip –∑–∞–Ω–æ–≤–æ
    print("üöÄ AUTOSELL: –í–∫–ª—é—á–∞–µ–º NoClip –∑–∞–Ω–æ–≤–æ...")
    _G.MovementConfig.NoClip.Enabled = true
    
    if _G.startNoClip and type(_G.startNoClip) == "function" then
        _G.startNoClip()
        print("‚úÖ AUTOSELL: NoClip –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è!")
        return true
    else
        print("‚ö†Ô∏è AUTOSELL: –§—É–Ω–∫—Ü–∏—è startNoClip –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!")
        return false
    end
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Ä—é–∫–∑–∞–∫–µ
local function checkInventoryForMaxItems()
    local player = Players.LocalPlayer
    if not player or not player.Backpack then return {} end
    
    local itemCounts = {}
    local itemsAtMax = {}
    
    -- –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ —Ä—é–∫–∑–∞–∫–µ
    for _, item in pairs(player.Backpack:GetChildren()) do
        if item:IsA("Tool") then
            local itemName = item.Name
            itemCounts[itemName] = (itemCounts[itemName] or 0) + 1
        end
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º—É–º–∞
    for itemName, isEnabled in pairs(AutosellConfig.Items) do
        if isEnabled and itemCounts[itemName] and AutosellConfig.ItemLimits[itemName] then
            local maxCount = AutosellConfig.ItemLimits[itemName]
            if itemCounts[itemName] >= maxCount then
                table.insert(itemsAtMax, itemName)
                print("ü§ñ AUTOSELL: –ü—Ä–µ–¥–º–µ—Ç", itemName, "–¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º—É–º–∞:", itemCounts[itemName], "/", maxCount)
            end
        end
    end
    
    return itemsAtMax
end

-- –ü–û–î–ó–ï–ú–ù–û–ï –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫ NPC Shiftplox
local function moveToShiftplox(callback)
    print("üîª AUTOSELL: –ù–∞—á–∏–Ω–∞–µ–º –ü–û–î–ó–ï–ú–ù–´–ô –º–∞—Ä—à—Ä—É—Ç –∫ NPC Shiftplox...")
    
    -- –í–∫–ª—é—á–∞–µ–º NoClip –¥–ª—è –ø–æ–¥–∑–µ–º–Ω–æ–≥–æ –ø–æ–ª–µ—Ç–∞
    if _G.MovementConfig and not _G.MovementConfig.NoClip.Enabled then
        print("üîª AUTOSELL: –í–∫–ª—é—á–∞–µ–º NoClip –¥–ª—è –ø–æ–¥–∑–µ–º–Ω–æ–≥–æ –ø–æ–ª–µ—Ç–∞...")
        _G.MovementConfig.NoClip.Enabled = true
        if _G.startNoClip and type(_G.startNoClip) == "function" then
            _G.startNoClip()
        end
    end
    
    local player = Players.LocalPlayer
    if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        print("‚ùå AUTOSELL: –û—à–∏–±–∫–∞ - –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        if callback then callback() end
        return
    end
    
    local humanoidRootPart = player.Character.HumanoidRootPart
    local humanoid = player.Character:FindFirstChild("Humanoid")
    
    -- –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º —Ö–æ–¥—å–±—É
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
        humanoid.JumpHeight = 0
        humanoid.HipHeight = 0
        humanoid.Sit = false
    end
    
    -- –û—á–∏—â–∞–µ–º –≤—Å–µ BodyMovers
    local allBodyMovers = humanoidRootPart:GetChildren()
    for _, child in pairs(allBodyMovers) do
        if child:IsA("BodyVelocity") or child:IsA("BodyPosition") or child:IsA("BodyAngularVelocity") or 
           child:IsA("BodyThrust") or child:IsA("BodyForce") or child:IsA("BodyGyro") then
            child:Destroy()
        end
    end
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é
    local originalGravity = workspace.Gravity
    workspace.Gravity = 0
    
    -- –°–æ–∑–¥–∞–µ–º BodyVelocity –¥–ª—è –ø–æ–ª–µ—Ç–∞
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Name = "AutosellUndergroundVelocity"
    bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = humanoidRootPart
    
    -- –≠–¢–ê–ü 1: –°–ø—É—Å–∫ –ø–æ–¥ –∑–µ–º–ª—é –Ω–∞ Y = -70
    print("üîª AUTOSELL: –≠–¢–ê–ü 1 - –°–ø—É—Å–∫–∞–µ–º—Å—è –ø–æ–¥ –∑–µ–º–ª—é –Ω–∞ Y = -70...")
    local currentPos = humanoidRootPart.Position
    local undergroundY = -70
    local phase1Target = Vector3.new(currentPos.X, undergroundY, currentPos.Z)
    
    local phase1Connection
    phase1Connection = RunService.Heartbeat:Connect(function()
        local currentPos = humanoidRootPart.Position
        local distance = math.abs(currentPos.Y - undergroundY)
        
        if distance > 2 then
            -- –õ–µ—Ç–∏–º –≤–Ω–∏–∑
            local direction = Vector3.new(0, -1, 0)
            bodyVelocity.Velocity = direction * 100
        else
            -- –î–æ—Å—Ç–∏–≥–ª–∏ –≥–ª—É–±–∏–Ω—ã -70
            phase1Connection:Disconnect()
            print("‚úÖ AUTOSELL: –≠–¢–ê–ü 1 –∑–∞–≤–µ—Ä—à–µ–Ω - –¥–æ—Å—Ç–∏–≥–ª–∏ –≥–ª—É–±–∏–Ω—ã Y = -70")
            
            -- –≠–¢–ê–ü 2: –ü–æ–¥–∑–µ–º–Ω—ã–π –ø–æ–ª–µ—Ç –ø–æ X –∏ Z –∫ –ø–æ–∑–∏—Ü–∏–∏ Shiftplox
            print("üîª AUTOSELL: –≠–¢–ê–ü 2 - –ü–æ–¥–∑–µ–º–Ω—ã–π –ø–æ–ª–µ—Ç –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º Shiftplox...")
            local shiftploxPos = AutosellConfig.ShiftploxPosition
            local phase2Target = Vector3.new(shiftploxPos.X, undergroundY, shiftploxPos.Z)
            
            local phase2Connection
            phase2Connection = RunService.Heartbeat:Connect(function()
                local currentPos = humanoidRootPart.Position
                local targetPos = Vector3.new(shiftploxPos.X, currentPos.Y, shiftploxPos.Z) -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π Y
                local distance = (targetPos - currentPos).Magnitude
                
                if distance > 3 then
                    -- –õ–µ—Ç–∏–º –ø–æ X –∏ Z –∫ Shiftplox
                    local direction = (targetPos - currentPos).Unit
                    bodyVelocity.Velocity = direction * 120
                else
                    -- –î–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç Shiftplox –ø–æ X –∏ Z
                    phase2Connection:Disconnect()
                    print("‚úÖ AUTOSELL: –≠–¢–ê–ü 2 –∑–∞–≤–µ—Ä—à–µ–Ω - –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç Shiftplox –ø–æ–¥ –∑–µ–º–ª–µ–π")
                    
                    -- –≠–¢–ê–ü 3: –ü–æ–¥—ä–µ–º –Ω–∞ Y = -35 (–∫ –ø–æ–∑–∏—Ü–∏–∏ Shiftplox)
                    print("üîª AUTOSELL: –≠–¢–ê–ü 3 - –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –∫ Shiftplox –Ω–∞ Y = -35...")
                    local finalY = -35
                    
                    local phase3Connection
                    phase3Connection = RunService.Heartbeat:Connect(function()
                        local currentPos = humanoidRootPart.Position
                        local distance = math.abs(currentPos.Y - finalY)
                        
                        if distance > 1 then
                            -- –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –≤–≤–µ—Ä—Ö
                            local direction = Vector3.new(0, 1, 0)
                            bodyVelocity.Velocity = direction * 60
                        else
                            -- –î–æ—Å—Ç–∏–≥–ª–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
                            phase3Connection:Disconnect()
                            print("‚úÖ AUTOSELL: –≠–¢–ê–ü 3 –∑–∞–≤–µ—Ä—à–µ–Ω - –¥–æ—Å—Ç–∏–≥–ª–∏ –ø–æ–∑–∏—Ü–∏–∏ Shiftplox!")
                            
                            -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
                            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                            task.wait(0.2)
                            
                            -- –£–±–∏—Ä–∞–µ–º BodyVelocity
                            if bodyVelocity and bodyVelocity.Parent then
                                bodyVelocity:Destroy()
                            end
                            
                            print("üéØ AUTOSELL: –ü—Ä–∏–±—ã–ª–∏ –∫ Shiftplox –ø–æ–¥–∑–µ–º–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–æ–º! –§–∏–∫—Å–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...")
                            
                            -- –§–ò–ö–°–ò–†–£–ï–ú –ü–ï–†–°–û–ù–ê–ñ–ê –ö–ê–ö –í –ê–í–¢–û–§–ê–†–ú–ï
                            freezePlayerAtShiftplox()
                            
                            -- –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–¥–∞–∂—É
                            if callback then
                                callback()
                            end
                        end
                    end)
                end
            end)
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à
local function pressKey(keyCode, holdTime)
    holdTime = holdTime or 0.1
    game:GetService("VirtualInputManager"):SendKeyEvent(true, keyCode, false, game)
    task.wait(holdTime)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, keyCode, false, game)
end

-- –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –±—ç–∫—Å–ª–µ—à–∞
local function pressBackslash()
    local VIM = game:GetService("VirtualInputManager")
    local keyCodeWorked = false
    
    pcall(function()
        if Enum.KeyCode.BackSlash then
            VIM:SendKeyEvent(true, Enum.KeyCode.BackSlash, false, game)
            task.wait(0.1)
            VIM:SendKeyEvent(false, Enum.KeyCode.BackSlash, false, game)
            keyCodeWorked = true
        end
    end)
    
    if not keyCodeWorked then
        VIM:SendTextInputCharacterEvent("\\")
    end
end

-- –í–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—É–∫–∏
local function equipItem(itemName)
    local player = Players.LocalPlayer
    if not player or not player.Backpack then return false end
    
    local item = player.Backpack:FindFirstChild(itemName)
    if item and item:IsA("Tool") then
        item.Parent = player.Character
        print("ü§ñ AUTOSELL: –í–∑—è–ª–∏ –≤ —Ä—É–∫–∏ –ø—Ä–µ–¥–º–µ—Ç:", itemName)
        return true
    end
    return false
end

-- –£–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Ä—É–∫
local function unequipItem(itemName)
    local player = Players.LocalPlayer
    if not player or not player.Character then return false end
    
    local item = player.Character:FindFirstChild(itemName)
    if item and item:IsA("Tool") then
        item.Parent = player.Backpack
        print("ü§ñ AUTOSELL: –£–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Ä—É–∫:", itemName)
        return true
    end
    return false
end

-- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—É–∫–∞—Ö
local function hasItemInHands(itemName)
    local player = Players.LocalPlayer
    if not player or not player.Character then return false end
    
    local item = player.Character:FindFirstChild(itemName)
    return item and item:IsA("Tool")
end

-- –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Ä—É–∫–∞—Ö
local function getAllItemsInHands()
    local player = Players.LocalPlayer
    if not player or not player.Character then return {} end
    
    local toolsInHands = {}
    for _, child in pairs(player.Character:GetChildren()) do
        if child:IsA("Tool") then
            table.insert(toolsInHands, child.Name)
        end
    end
    
    return toolsInHands
end

-- –£–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ —Ä—É–∫
local function unequipAllItemsFromHands()
    local toolsInHands = getAllItemsInHands()
    if #toolsInHands > 0 then
        print("ü§ñ AUTOSELL: –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ —Ä—É–∫:", table.concat(toolsInHands, ", "))
        
        for _, toolName in ipairs(toolsInHands) do
            unequipItem(toolName)
            task.wait(0.5)
        end
        
        print("ü§ñ AUTOSELL: –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —É–±—Ä–∞–Ω—ã –∏–∑ —Ä—É–∫")
        return true
    end
    return false
end



-- –ù–æ–≤—ã–π —Ü–∏–∫–ª –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
local function sellSingleItemToNPC(itemName)
    print("ü§ñ AUTOSELL: –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–¥–∞–∂—É –ø—Ä–µ–¥–º–µ—Ç–∞:", itemName)
    
    -- –ë–µ—Ä–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—É–∫–∏
    if not equipItem(itemName) then
        print("ü§ñ AUTOSELL: –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç:", itemName)
        return false
    end
    
    task.wait(1)
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ Shiftplox –ø–µ—Ä–µ–¥ –Ω–∞–∂–∞—Ç–∏–µ–º E
    local player = Players.LocalPlayer
    if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        print("ü§ñ AUTOSELL: –û—à–∏–±–∫–∞ - –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    local currentPos = player.Character.HumanoidRootPart.Position
    local distanceToNPC = (AutosellConfig.ShiftploxPosition - currentPos).Magnitude
    
    if distanceToNPC > 20 then
        print("ü§ñ AUTOSELL: –°–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ –æ—Ç NPC –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è!")
        return false
    end
    
    -- –¶–∏–∫–ª –ø—Ä–æ–¥–∞–∂–∏: E > –∂–¥–µ–º 2 —Å–µ–∫ > \ > –∂–¥–µ–º 0.5 —Å–µ–∫ > —Å—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ > –∂–¥–µ–º 0.5 —Å–µ–∫ > enter > –∂–¥–µ–º 2 —Å–µ–∫ > —Å—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ > –∂–¥–µ–º 0.5 —Å–µ–∫ > enter > –∂–¥–µ–º 2 —Å–µ–∫ > —Å—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ > –∂–¥–µ–º 0.5 —Å–µ–∫ > enter > –∂–¥–µ–º 2 —Å–µ–∫ > \ –¥–ª—è —Å–±—Ä–æ—Å–∞
    
    print("ü§ñ AUTOSELL: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç–∞:", itemName)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 1/9 - –ù–∞–∂–∏–º–∞–µ–º E –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")
    pressKey(Enum.KeyCode.E)
    task.wait(3)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 2/9 - –ù–∞–∂–∏–º–∞–µ–º \\ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é...")
    pressBackslash()
    task.wait(0.5)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 3/9 - –°—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
    pressKey(Enum.KeyCode.Right)
    task.wait(0.5)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 4/9 - Enter –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
    pressKey(Enum.KeyCode.Return)
    task.wait(3)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 5/9 - –°—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
    pressKey(Enum.KeyCode.Left)
    task.wait(0.5)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 6/9 - Enter –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
    pressKey(Enum.KeyCode.Return)
    task.wait(3)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 7/9 - –°—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
    pressKey(Enum.KeyCode.Right)
    task.wait(0.5)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 8/9 - Enter –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
    pressKey(Enum.KeyCode.Return)
    task.wait(3)
    
    print("ü§ñ AUTOSELL: –®–∞–≥ 9/9 - –ë—ç–∫—Å–ª–µ—à –¥–ª—è —Å–±—Ä–æ—Å–∞ UI navigation...")
    pressBackslash()
    task.wait(0.5)
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥–∞–ª—Å—è –ª–∏ –ø—Ä–µ–¥–º–µ—Ç
    local player = Players.LocalPlayer
    if player and player.Character then
        local tool = player.Character:FindFirstChild(itemName)
        if not tool then
            -- –ü—Ä–µ–¥–º–µ—Ç –∏—Å—á–µ–∑ –∏–∑ —Ä—É–∫ - –∑–Ω–∞—á–∏—Ç –ø—Ä–æ–¥–∞–ª—Å—è
            print("ü§ñ AUTOSELL: ‚úÖ –ü—Ä–µ–¥–º–µ—Ç", itemName, "—É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–Ω")
            return true
        else
            print("ü§ñ AUTOSELL: ‚ùå –ü—Ä–µ–¥–º–µ—Ç", itemName, "–Ω–µ –ø—Ä–æ–¥–∞–ª—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return false
        end
    end
    
    return false
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
local function sellItemsToNPC(itemsToSell)
    if isSellingToNPC then return end
    isSellingToNPC = true
    
    print("ü§ñ AUTOSELL: –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–¥–∞–∂—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤:", table.concat(itemsToSell, ", "))
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º (–≤–Ω–µ—à–Ω–∏–π –∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π)
    if isExternalAutofarmEnabled() then
        print("ü§ñ AUTOSELL: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏...")
        stopExternalAutofarm()
    elseif _G.isAutofarmEnabled and type(_G.isAutofarmEnabled) == "function" and _G.isAutofarmEnabled() then
        if _G.stopAutofarm and type(_G.stopAutofarm) == "function" then
            print("ü§ñ AUTOSELL: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–≤—Ç–æ—Ñ–∞—Ä–º –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏...")
            _G.stopAutofarm()
        end
    end
    
    -- –õ–µ—Ç–∏–º –∫ NPC
    moveToShiftplox(function()
        print("ü§ñ AUTOSELL: –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–¥–∞–∂—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤...")
        
        local soldItems = {}
        local failedItems = {}
        
        for _, itemName in ipairs(itemsToSell) do
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –µ—â–µ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—é–∫–∑–∞–∫–µ
            local player = Players.LocalPlayer
            if player and player.Backpack:FindFirstChild(itemName) then
                print("ü§ñ AUTOSELL: –ü—Ä–æ–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç:", itemName)
                
                if sellSingleItemToNPC(itemName) then
                    table.insert(soldItems, itemName)
                else
                    table.insert(failedItems, itemName)
                end
                
                task.wait(1) -- –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–¥–∞–∂–∞–º–∏
            else
                print("ü§ñ AUTOSELL: –ü—Ä–µ–¥–º–µ—Ç", itemName, "–±–æ–ª—å—à–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä—é–∫–∑–∞–∫–µ")
            end
        end
        
        print("ü§ñ AUTOSELL: –ü—Ä–æ–¥–∞–∂–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("ü§ñ AUTOSELL: –ü—Ä–æ–¥–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:", #soldItems)
        if #failedItems > 0 then
            print("ü§ñ AUTOSELL: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–¥–∞—Ç—å:", table.concat(failedItems, ", "))
        end
        
        print("ü§ñ AUTOSELL: –ü—Ä–æ–¥–∞–∂–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã
        task.wait(3) -- –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        local remainingItems = checkInventoryForMaxItems()
        
        -- –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Ä—É–∫–∞—Ö –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª–ª
        if #failedItems > 0 then
            print("ü§ñ AUTOSELL: –ï—Å—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —Ä—É–∫–∞—Ö...")
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –Ω–µ—É–¥–∞—á–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç - –µ—Å–ª–∏ –æ–Ω –≤ —Ä—É–∫–∞—Ö, —É–±–∏—Ä–∞–µ–º –µ–≥–æ
            for _, failedItem in ipairs(failedItems) do
                if hasItemInHands(failedItem) then
                    print("ü§ñ AUTOSELL: –ü—Ä–µ–¥–º–µ—Ç", failedItem, "–æ—Å—Ç–∞–ª—Å—è –≤ —Ä—É–∫–∞—Ö, —É–±–∏—Ä–∞–µ–º –µ–≥–æ...")
                    unequipItem(failedItem)
                    task.wait(0.5) -- –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —É–±–∏—Ä–∞–Ω–∏–µ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                end
            end
            
            isSellingToNPC = false
            
            -- –°–ù–ò–ú–ê–ï–ú –§–ò–ö–°–ê–¶–ò–Æ –ü–ï–†–°–û–ù–ê–ñ–ê –ü–†–ò –ù–ï–£–î–ê–ß–ï
            unfreezePlayerFromShiftplox()
            
            -- –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
            if externalAutofarmConfig.startFunction then
                print("ü§ñ AUTOSELL: –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º...")
                startExternalAutofarm()
            elseif _G.startAutofarm and type(_G.startAutofarm) == "function" then
                print("ü§ñ AUTOSELL: –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–≤—Ç–æ—Ñ–∞—Ä–º –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º...")
                _G.startAutofarm()
            end
            
            -- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª–ª —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            task.spawn(function()
                task.wait(2)
                if isAutosellEnabled then
                    print("ü§ñ AUTOSELL: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª–ª...")
                    startAutosell()
                end
            end)
        elseif #remainingItems > 0 then
            print("ü§ñ AUTOSELL: –û—Å—Ç–∞–ª–∏—Å—å –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏, –ø–æ–≤—Ç–æ—Ä—è–µ–º —Ü–∏–∫–ª...")
            sellItemsToNPC(remainingItems)
        else
            print("ü§ñ AUTOSELL: –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø—Ä–æ–¥–∞–Ω—ã, —Å–Ω–∏–º–∞–µ–º —Ñ–∏–∫—Å–∞—Ü–∏—é –∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º...")
            isSellingToNPC = false
            
            -- –°–ù–ò–ú–ê–ï–ú –§–ò–ö–°–ê–¶–ò–Æ –ü–ï–†–°–û–ù–ê–ñ–ê
            unfreezePlayerFromShiftplox()
            
            -- –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ñ–ª–∞–≥–∞ Enabled)
            if externalAutofarmConfig.startFunction then
                print("ü§ñ AUTOSELL: –ó–∞–ø—É—Å–∫–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º...")
                task.wait(1) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
                startExternalAutofarm()
                print("ü§ñ AUTOSELL: –í–Ω–µ—à–Ω–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω!")
            elseif _G.startAutofarm and type(_G.startAutofarm) == "function" then
                print("ü§ñ AUTOSELL: –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–≤—Ç–æ—Ñ–∞—Ä–º...")
                task.wait(1) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
                _G.startAutofarm()
                print("ü§ñ AUTOSELL: –†–µ–∑–µ—Ä–≤–Ω—ã–π –∞–≤—Ç–æ—Ñ–∞—Ä–º –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω!")
            else
                print("ü§ñ AUTOSELL: –§—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!")
            end
        end
    end)
end

-- –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Å–µ–ª–ª–∞
local function startAutosell()
    if isAutosellEnabled then return end
    isAutosellEnabled = true
    
    print("ü§ñ AUTOSELL: –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Å–µ–ª–ª–∞...")
    
    -- –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    findExternalAutofarmFunctions()
    
    -- –í–∫–ª—é—á–∞–µ–º NoClip –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–≤—Ç–æ—Å–µ–ª–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é)
    if not enableNoClipAfterRespawn() then
        print("ü§ñ AUTOSELL: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ - –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å NoClip –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–≤—Ç–æ—Å–µ–ª–∞")
    end
    
    -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–º–µ—Ä—Ç–∏ –∏–≥—Ä–æ–∫–∞
    local function setupDeathTracking()
        local player = Players.LocalPlayer
        if player and player.Character then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if humanoid and not deathCheckConnection then
                deathCheckConnection = humanoid.Died:Connect(function()
                    print("ü§ñ AUTOSELL: –ò–≥—Ä–æ–∫ —É–º–µ—Ä! –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
                    
                    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Å–µ–ª–ª–∞ –ø–µ—Ä–µ–¥ —Å–º–µ—Ä—Ç—å—é
                    wasAutosellEnabledBeforeDeath = isAutosellEnabled
                    print("ü§ñ AUTOSELL: –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ - Autosell –±—ã–ª:", wasAutosellEnabledBeforeDeath and "–í–ö–õ–Æ–ß–ï–ù" or "–í–´–ö–õ–Æ–ß–ï–ù")
                    
                    stopAutosell()
                    
                    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º
                    if _G.stopAutofarm and type(_G.stopAutofarm) == "function" then
                        print("ü§ñ AUTOSELL: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ñ–∞—Ä–º –∏–∑-–∑–∞ —Å–º–µ—Ä—Ç–∏ –∏–≥—Ä–æ–∫–∞...")
                        _G.stopAutofarm()
                    end
                end)
            end
        end
    end
    
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–º–µ—Ä—Ç–∏
    setupDeathTracking()
    
    -- –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–∏ —Ä–µ—Å–ø–∞–≤–Ω–µ –ò –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª
    Players.LocalPlayer.CharacterAdded:Connect(function()
        task.wait(1) -- –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        
        -- –í–∫–ª—é—á–∞–µ–º NoClip —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–µ—Å–ø–∞–≤–Ω–∞ (–µ—Å–ª–∏ –∞–≤—Ç–æ—Å–µ–ª –∞–∫—Ç–∏–≤–µ–Ω)
        if isAutosellEnabled then
            task.spawn(function()
                task.wait(0.5) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
                enableNoClipAfterRespawn()
            end)
        end
        
        -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª –µ—Å–ª–∏ –æ–Ω –±—ã–ª –≤–∫–ª—é—á–µ–Ω –ø–µ—Ä–µ–¥ —Å–º–µ—Ä—Ç—å—é
        if wasAutosellEnabledBeforeDeath then
            task.wait(4) -- –î–∞–µ–º –≤—Ä–µ–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂—É –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
            print("ü§ñ AUTOSELL: –ò–≥—Ä–æ–∫ –≤–æ–∑—Ä–æ–¥–∏–ª—Å—è! –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–µ–ª...")
            if not isAutosellEnabled then
                startAutosell()
                print("ü§ñ AUTOSELL: –ê–≤—Ç–æ—Å–µ–ª —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è!")
            end
            
            -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            wasAutosellEnabledBeforeDeath = false
        end
        
        setupDeathTracking()
    end)
    
    -- –í–∫–ª—é—á–∞–µ–º wallhack –∫–∞–º–µ—Ä—É
    enableCameraWallhack()
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ HP
    startHealthMonitoring()
    
    -- –°–æ–∑–¥–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    autosellCheckTimer = task.spawn(function()
        while isAutosellEnabled do
            task.wait(5) -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —É–º–µ—Ä –ª–∏ –∏–≥—Ä–æ–∫
            if checkPlayerDeath() then
                break -- –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ —É–º–µ—Ä
            end
            
            if not isSellingToNPC then
                local itemsAtMax = checkInventoryForMaxItems()
                if #itemsAtMax > 0 then
                    print("ü§ñ AUTOSELL: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –º–∞–∫—Å–∏–º—É–º–µ, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–¥–∞–∂—É...")
                    sellItemsToNPC(itemsAtMax)
                else
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Ç –ª–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ —Ä—É–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏
                    unequipAllItemsFromHands()
                end
            end
        end
    end)
end

-- –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ—Å–µ–ª–ª–∞
local function stopAutosell()
    if not isAutosellEnabled then return end
    isAutosellEnabled = false
    
    print("ü§ñ AUTOSELL: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ—Å–µ–ª–ª–∞...")
    
    if autosellCheckTimer then
        task.cancel(autosellCheckTimer)
        autosellCheckTimer = nil
    end
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–º–µ—Ä—Ç–∏
    if deathCheckConnection then
        deathCheckConnection:Disconnect()
        deathCheckConnection = nil
    end
    
    isSellingToNPC = false
    
    -- –°–ù–ò–ú–ê–ï–ú –§–ò–ö–°–ê–¶–ò–Æ –ü–ï–†–°–û–ù–ê–ñ–ê –ü–†–ò –û–°–¢–ê–ù–û–í–ö–ï
    unfreezePlayerFromShiftplox()
    
    -- –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ —Ä—É–∫ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∞–≤—Ç–æ—Å–µ–ª–ª–∞
    unequipAllItemsFromHands()
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º wallhack –∫–∞–º–µ—Ä—É
    disableCameraWallhack()
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ HP
    stopHealthMonitoring()
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∞–≤—Ç–æ—Å–µ–ª–∞
local function enableAllAutosellItems()
    print("üü¢ AUTOSELL: –í–∫–ª—é—á–∞–µ–º –í–°–ï –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂–∏...")
    local count = 0
    for itemName, _ in pairs(AutosellConfig.Items) do
        AutosellConfig.Items[itemName] = true
        count = count + 1
    end
    print("‚úÖ AUTOSELL: –í–∫–ª—é—á–µ–Ω–æ", count, "–ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂–∏!")
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∞–≤—Ç–æ—Å–µ–ª–∞
local function disableAllAutosellItems()
    print("üî¥ AUTOSELL: –û—Ç–∫–ª—é—á–∞–µ–º –í–°–ï –ø—Ä–µ–¥–º–µ—Ç—ã –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂–∏...")
    local count = 0
    for itemName, _ in pairs(AutosellConfig.Items) do
        AutosellConfig.Items[itemName] = false
        count = count + 1
    end
    print("‚ùå AUTOSELL: –û—Ç–∫–ª—é—á–µ–Ω–æ", count, "–ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂–∏!")
end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI –¥–ª—è –∞–≤—Ç–æ—Å–µ–ª–ª–∞
local function createAutosellGUI(functionsContainer, currentY, createToggleSlider, createSlider, createDivider, createSectionHeader, createButton)
    -- AUTOSELL —Å–µ–∫—Ü–∏—è (–∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω –≤ huyna, –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º)
    print("ü§ñ AUTOSELL: –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ GUI, currentY =", currentY)
    print("ü§ñ AUTOSELL: –§—É–Ω–∫—Ü–∏–∏:", {
        functionsContainer = functionsContainer and "OK" or "NIL",
        createToggleSlider = createToggleSlider and "OK" or "NIL", 
        createSlider = createSlider and "OK" or "NIL",
        createDivider = createDivider and "OK" or "NIL",
        createSectionHeader = createSectionHeader and "OK" or "NIL",
        createButton = createButton and "OK" or "NIL"
    })
    
    -- –ì–ª–∞–≤–Ω—ã–π —Ç—É–º–±–ª–µ—Ä –∞–≤—Ç–æ—Å–µ–ª–ª–∞
    createToggleSlider("Auto Sell Enabled", AutosellConfig.Enabled, function(v)
        AutosellConfig.Enabled = v
        if v then
            startAutosell()
        else
            stopAutosell()
        end
    end)
    
    -- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ wallhack –∫–∞–º–µ—Ä—ã
    createToggleSlider("Camera Wallhack", AutosellConfig.CameraWallhack, function(v)
        AutosellConfig.CameraWallhack = v
        print("ü§ñ AUTOSELL: Camera Wallhack —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤", v and "ON" or "OFF")
    end)
    
    -- –ö–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    createDivider()
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è createButton –∏–∑ huyna
    if createButton and type(createButton) == "function" then
        -- –ö–Ω–æ–ø–∫–∞ "Enable All Items"
        createButton("üü¢ ENABLE ALL ITEMS", function()
            enableAllAutosellItems()
            print("üü¢ AUTOSELL: –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É!")
        end)
        
        -- –ö–Ω–æ–ø–∫–∞ "Disable All Items"  
        createButton("üî¥ DISABLE ALL ITEMS", function()
            disableAllAutosellItems()
            print("üî¥ AUTOSELL: –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É!")
        end)
        
        print("ü§ñ AUTOSELL: –ö–Ω–æ–ø–∫–∏ Enable/Disable All —Å–æ–∑–¥–∞–Ω—ã")
    else
        -- Fallback: —Å–æ–∑–¥–∞–µ–º —Ç—É–º–±–ª–µ—Ä—ã –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
        createToggleSlider("üü¢ Enable All Items", false, function(v)
            if v then
                enableAllAutosellItems()
                print("üü¢ AUTOSELL: –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã —á–µ—Ä–µ–∑ —Ç—É–º–±–ª–µ—Ä!")
            end
        end)
        
        createToggleSlider("üî¥ Disable All Items", false, function(v)
            if v then
                disableAllAutosellItems()
                print("üî¥ AUTOSELL: –í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã —á–µ—Ä–µ–∑ —Ç—É–º–±–ª–µ—Ä!")
            end
        end)
        
        print("ü§ñ AUTOSELL: Fallback —Ç—É–º–±–ª–µ—Ä—ã Enable/Disable All —Å–æ–∑–¥–∞–Ω—ã")
    end
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    createDivider()
    
    -- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç—É–º–±–ª–µ—Ä–æ–≤ –¥–ª—è –∞–≤—Ç–æ—Å–µ–ª–ª–∞
    local function createAutosellItemToggle(itemName, defaultState)
        print("ü§ñ AUTOSELL: –°–æ–∑–¥–∞–µ–º —Ç—É–º–±–ª–µ—Ä –¥–ª—è", itemName, "—Å–æ—Å—Ç–æ—è–Ω–∏–µ:", defaultState)
        
        -- –°–æ–∑–¥–∞–µ–º —Ç—É–º–±–ª–µ—Ä –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ callback –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        createToggleSlider(itemName, defaultState, function(v)
            AutosellConfig.Items[itemName] = v
            print("ü§ñ AUTOSELL: –ü—Ä–µ–¥–º–µ—Ç", itemName, "–¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤", v and "ON" or "OFF")
        end)
        
        -- –ü–æ–∫–∞ —á—Ç–æ –Ω–µ –º–æ–∂–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—É–º–±–ª–µ—Ä –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
        -- –ù–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ AutosellConfig.Items
    end
    
    -- –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∞–≤—Ç–æ—Å–µ–ª–ª–∞
    print("ü§ñ AUTOSELL: –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—É–º–±–ª–µ—Ä—ã –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤...")
    createAutosellItemToggle("Mysterious Arrow", AutosellConfig.Items["Mysterious Arrow"])
    createAutosellItemToggle("Rokakaka", AutosellConfig.Items["Rokakaka"])
    createAutosellItemToggle("Pure Rokakaka", AutosellConfig.Items["Pure Rokakaka"])
    createAutosellItemToggle("Diamond", AutosellConfig.Items["Diamond"])
    createAutosellItemToggle("Gold Coin", AutosellConfig.Items["Gold Coin"])
    createAutosellItemToggle("Steel Ball", AutosellConfig.Items["Steel Ball"])
    createAutosellItemToggle("Clackers", AutosellConfig.Items["Clackers"])
    createAutosellItemToggle("Caesar's Headband", AutosellConfig.Items["Caesar's Headband"])
    createAutosellItemToggle("Zeppeli's Hat", AutosellConfig.Items["Zeppeli's Hat"])
    createAutosellItemToggle("Zeppeli's Scarf", AutosellConfig.Items["Zeppeli's Scarf"])
    createAutosellItemToggle("Quinton's Glove", AutosellConfig.Items["Quinton's Glove"])
    createAutosellItemToggle("Stone Mask", AutosellConfig.Items["Stone Mask"])
    createAutosellItemToggle("Rib Cage of The Saint's Corpse", AutosellConfig.Items["Rib Cage of The Saint's Corpse"])
    createAutosellItemToggle("Ancient Scroll", AutosellConfig.Items["Ancient Scroll"])
    createAutosellItemToggle("DIO's Diary", AutosellConfig.Items["DIO's Diary"])
    print("ü§ñ AUTOSELL: –í—Å–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—É–º–±–ª–µ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã!")
    
    print("ü§ñ AUTOSELL: GUI —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í–æ–∑–≤—Ä–∞—â–∞–µ–º currentY =", currentY)
    
    -- –î–æ–±–∞–≤–ª—è–µ–º Distance Kill GUI –ø–æ—Å–ª–µ autosell
    if _G.AutosellModule and _G.AutosellModule.DistanceKill and _G.AutosellModule.DistanceKill.createGUI then
        print("üéØ DISTANCE KILL: –î–æ–±–∞–≤–ª—è–µ–º GUI –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...")
        currentY = _G.AutosellModule.DistanceKill.createGUI(functionsContainer, currentY, createToggleSlider, createSlider, createDivider, createSectionHeader, createButton)
        print("üéØ DISTANCE KILL: GUI –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω, currentY =", currentY)
    end
    
    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π currentY (—Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–±—ã—á–Ω–æ –æ–±–Ω–æ–≤–ª—è—é—Ç currentY –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ)
    return currentY
end

-- –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
_G.AutosellModule = {
    Config = AutosellConfig,
    start = startAutosell,
    stop = stopAutosell,
    isEnabled = function() return isAutosellEnabled end,
    emergencyStop = emergencyStopMovement,
    startHealthMonitoring = startHealthMonitoring,
    stopHealthMonitoring = stopHealthMonitoring,
    isHealthMonitoringEnabled = function() return isHealthMonitoringEnabled end,
    enableNoClipAfterRespawn = enableNoClipAfterRespawn,
    enableAllItems = enableAllAutosellItems,
    disableAllItems = disableAllAutosellItems,
    createGUI = createAutosellGUI,
    
    -- –§—É–Ω–∫—Ü–∏–∏ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    freezePlayerAtShiftplox = freezePlayerAtShiftplox,
    unfreezePlayerFromShiftplox = unfreezePlayerFromShiftplox,
    
    -- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–Ω–µ—à–Ω–∏–º –∞–≤—Ç–æ—Ñ–∞—Ä–º–æ–º
    ExternalAutofarm = {
        config = externalAutofarmConfig,
        findFunctions = findExternalAutofarmFunctions,
        start = startExternalAutofarm,
        stop = stopExternalAutofarm,
        restart = restartExternalAutofarm,
        isEnabled = isExternalAutofarmEnabled,
        
        -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
        setFunctions = function(stopFunc, startFunc, isEnabledFunc)
            if stopFunc and type(stopFunc) == "function" then
                externalAutofarmConfig.stopFunction = stopFunc
                print("‚úÖ AUTOFARM LINK: –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            end
            if startFunc and type(startFunc) == "function" then
                externalAutofarmConfig.startFunction = startFunc
                print("‚úÖ AUTOFARM LINK: –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—É—Å–∫–∞")
            end
            if isEnabledFunc and type(isEnabledFunc) == "function" then
                externalAutofarmConfig.isEnabledFunction = isEnabledFunc
                print("‚úÖ AUTOFARM LINK: –†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è")
            end
        end
    }
}

-- =========================================================
-- –ú–û–î–£–õ–¨ –ü–ï–†–ï–í–û–†–û–¢–ê –ü–ï–†–°–û–ù–ê–ñ–ê –î–õ–Ø –ê–í–¢–û–§–ê–†–ú–ê
-- =========================================================

local CharacterFlipModule = {}

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
local isPlayerFlipped = false
local originalPlayerPosition = nil
local autofarmFlipConnections = {}
local continuousFlipConnection = nil
local renderSteppedConnection = nil
local isMapLoaded = false
local gameStartTime = tick() -- –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä—É–∑–∫–∏

-- –ü–†–û–°–¢–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function startContinuousFlip()
    if continuousFlipConnection then
        task.cancel(continuousFlipConnection)
    end
    
    if renderSteppedConnection then
        renderSteppedConnection:Disconnect()
    end
    
    print("üîÑ FLIP: –ü–†–û–°–¢–û–ô –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç - –∑–∞–ø—É—Å–∫...")
    
    -- –ê–ì–†–ï–°–°–ò–í–ù–´–ô –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä
    renderSteppedConnection = RunService.RenderStepped:Connect(function()
        if not isPlayerFlipped then return end
        
        local player = Players.LocalPlayer
        if not player or not player.Character then return end
        
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end
        
        -- –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä
        local currentPos = humanoidRootPart.Position
        local flippedCFrame = CFrame.new(currentPos) * CFrame.Angles(math.rad(180), 0, 0)
        humanoidRootPart.CFrame = flippedCFrame
    end)
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è BodyAngularVelocity
    continuousFlipConnection = task.spawn(function()
        while isPlayerFlipped do
            local player = Players.LocalPlayer
            if player and player.Character then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    -- –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π BodyAngularVelocity
                    local oldBAV = humanoidRootPart:FindFirstChild("AutofarmFlipRotation")
                    if oldBAV then oldBAV:Destroy() end
                    
                    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π BodyAngularVelocity
                    local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
                    bodyAngularVelocity.Name = "AutofarmFlipRotation"
                    bodyAngularVelocity.MaxTorque = Vector3.new(math.huge, 0, 0)
                    bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
                    bodyAngularVelocity.Parent = humanoidRootPart
                end
            end
            task.wait(1)
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞
local function stopContinuousFlip()
    if continuousFlipConnection then
        task.cancel(continuousFlipConnection)
        continuousFlipConnection = nil
    end
    
    if renderSteppedConnection then
        renderSteppedConnection:Disconnect()
        renderSteppedConnection = nil
    end
    
    -- –£–±–∏—Ä–∞–µ–º –≤—Å–µ BodyMovers –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞
    local player = Players.LocalPlayer
    if player and player.Character then
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            local flipRotation = humanoidRootPart:FindFirstChild("AutofarmFlipRotation")
            if flipRotation then flipRotation:Destroy() end
            
            local flipPosition = humanoidRootPart:FindFirstChild("AutofarmFlipPosition")
            if flipPosition then flipPosition:Destroy() end
        end
    end
    
    print("üõë FLIP: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞")
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤–Ω–∏–∑ –≥–æ–ª–æ–≤–æ–π
local function flipPlayerUpsideDown()
    local player = Players.LocalPlayer
    if not player or not player.Character then return false end
    
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end
    
    if isPlayerFlipped then
        print("üîÑ FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ —É–∂–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç!")
        return true
    end
    
    print("üîÑ FLIP: –ü–†–û–°–¢–û–ô –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç - –Ω–∞—á–∏–Ω–∞–µ–º!")
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
    originalPlayerPosition = humanoidRootPart.Position
    print("üìç FLIP: –ò—Å—Ö–æ–¥–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è:", originalPlayerPosition)
    
    -- –°–†–ê–ó–£ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∏ —Å–º–µ—â–∞–µ–º –≤–Ω–∏–∑
    local targetPosition = originalPlayerPosition + Vector3.new(0, -6, 0)
    print("üìç FLIP: –¶–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è:", targetPosition)
    
    humanoidRootPart.CFrame = CFrame.new(targetPosition) * CFrame.Angles(math.rad(180), 0, 0)
    
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥
    isPlayerFlipped = true
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç
    startContinuousFlip()
    
    print("‚úÖ FLIP: –ü–†–û–°–¢–û–ô –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
local function unflipPlayer()
    local player = Players.LocalPlayer
    if not player or not player.Character then return false end
    
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end
    
    if not isPlayerFlipped then
        return true
    end
    
    print("üîÑ FLIP: –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ...")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç
    stopContinuousFlip()
    
    -- –£–±–∏—Ä–∞–µ–º –≤—Å–µ BodyMovers –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞
    local flipRotation = humanoidRootPart:FindFirstChild("AutofarmFlipRotation")
    if flipRotation then
        flipRotation:Destroy()
    end
    
    local flipPosition = humanoidRootPart:FindFirstChild("AutofarmFlipPosition")
    if flipPosition then
        flipPosition:Destroy()
    end
    
    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–∑–∏—Ü–∏—é
    if originalPlayerPosition then
        humanoidRootPart.CFrame = CFrame.new(originalPlayerPosition) * CFrame.Angles(0, 0, 0)
        originalPlayerPosition = nil
    else
        -- –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –∏ –ø–æ–¥–Ω–∏–º–∞–µ–º –≤–≤–µ—Ä—Ö
        local currentPosition = humanoidRootPart.Position
        local upwardOffset = Vector3.new(0, 6, 0) -- –ü–æ–¥–Ω–∏–º–∞–µ–º –Ω–∞ 6 –µ–¥–∏–Ω–∏—Ü –≤–≤–µ—Ä—Ö
        humanoidRootPart.CFrame = CFrame.new(currentPosition + upwardOffset) * CFrame.Angles(math.rad(180), 0, 0)
    end
    
    -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    isPlayerFlipped = false
    
    print("‚úÖ FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ!")
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
local function monitorAutofarmState()
    if autofarmFlipConnections.monitor then
        autofarmFlipConnections.monitor:Disconnect()
    end
    
    print("üîç FLIP: –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞...")
    
    autofarmFlipConnections.monitor = task.spawn(function()
        local wasAutofarmEnabled = false
        
        while true do
            task.wait(1) -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
            local isAutofarmCurrentlyEnabled = false
            
            -- –°–ø–æ—Å–æ–± 1: —á–µ—Ä–µ–∑ _G.isAutofarmEnabled
            if _G.isAutofarmEnabled and type(_G.isAutofarmEnabled) == "function" then
                local success, result = pcall(_G.isAutofarmEnabled)
                if success and result then
                    isAutofarmCurrentlyEnabled = true
                end
            end
            
            -- –°–ø–æ—Å–æ–± 2: —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
            if not isAutofarmCurrentlyEnabled and externalAutofarmConfig.isEnabledFunction then
                local success, result = pcall(externalAutofarmConfig.isEnabledFunction)
                if success and result then
                    isAutofarmCurrentlyEnabled = true
                end
            end
            
            -- –°–ø–æ—Å–æ–± 3: —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            if not isAutofarmCurrentlyEnabled then
                if _G.AutofarmConfig and _G.AutofarmConfig.Enabled then
                    isAutofarmCurrentlyEnabled = true
                elseif _G.isAutofarmActive then
                    isAutofarmCurrentlyEnabled = true
                end
            end
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –ø—Ä–æ–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã
            if not isMapLoaded then
                -- –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
                local mapLoadIndicators = {
                    -- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                    _G.mapLoadCompleted,
                    _G.AutofarmConfig and _G.AutofarmConfig.mapLoaded,
                    
                    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
                    workspace.CurrentCamera and workspace.CurrentCamera.CameraType ~= Enum.CameraType.Scriptable,
                    
                    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä–æ–∫–∞
                    Players.LocalPlayer and Players.LocalPlayer.Character and 
                    Players.LocalPlayer.Character:FindFirstChild("Humanoid") and
                    Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                    
                    -- –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                    game:IsLoaded(),
                    
                    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –≤—Ä–µ–º—è (–º–∏–Ω–∏–º—É–º 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞)
                    tick() - gameStartTime > 5
                }
                
                -- –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –≥–æ–≤–æ—Ä—è—Ç –æ –∑–∞–≥—Ä—É–∑–∫–µ
                local loadedCount = 0
                for _, indicator in ipairs(mapLoadIndicators) do
                    if indicator then loadedCount = loadedCount + 1 end
                end
                
                if loadedCount >= 3 then -- –¢—Ä–µ–±—É–µ–º –º–∏–Ω–∏–º—É–º 3 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
                    isMapLoaded = true
                    print("üó∫Ô∏è FLIP: –ü—Ä–æ–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞! (–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ " .. loadedCount .. " –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏)")
                end
            end
            
            -- –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
            if isAutofarmCurrentlyEnabled ~= wasAutofarmEnabled then
                if isAutofarmCurrentlyEnabled and isMapLoaded then
                    -- –ê–≤—Ç–æ—Ñ–∞—Ä–º –≤–∫–ª—é—á–∏–ª—Å—è –ò –∫–∞—Ä—Ç–∞ –ø—Ä–æ–≥—Ä—É–∂–µ–Ω–∞ - –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                    print("üöÄ FLIP: –û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã - –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")
                    
                    task.spawn(function()
                        -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–æ–º
                        local stableChecks = 0
                        local maxStableChecks = 3
                        
                        while stableChecks < maxStableChecks do
                            task.wait(1)
                            
                            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂ —Å—Ç–∞–±–∏–ª–µ–Ω
                            local player = Players.LocalPlayer
                            if player and player.Character then
                                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                                local humanoid = player.Character:FindFirstChild("Humanoid")
                                
                                if humanoidRootPart and humanoid then
                                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –¥–≤–∏–∂–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ –∏ –Ω–µ –≤ –≤–æ–∑–¥—É—Ö–µ
                                    local velocity = humanoidRootPart.AssemblyLinearVelocity or humanoidRootPart.Velocity
                                    local isStable = velocity.Magnitude < 50 and humanoid.FloorMaterial ~= Enum.Material.Air
                                    
                                    if isStable then
                                        stableChecks = stableChecks + 1
                                        print("üîÑ FLIP: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ " .. stableChecks .. "/" .. maxStableChecks)
                                    else
                                        stableChecks = 0 -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ—Å—Ç–∞–±–∏–ª–µ–Ω
                                        print("üîÑ FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ—Å—Ç–∞–±–∏–ª–µ–Ω, –∂–¥–µ–º —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏...")
                                    end
                                else
                                    print("üîÑ FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥–µ–º...")
                                    task.wait(2)
                                end
                            else
                                print("üîÑ FLIP: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥–µ–º...")
                                task.wait(2)
                            end
                        end
                        
                        print("üîÑ FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å—Ç–∞–±–∏–ª–µ–Ω, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç!")
                        flipPlayerUpsideDown()
                    end)
                elseif isAutofarmCurrentlyEnabled and not isMapLoaded then
                    -- –ê–≤—Ç–æ—Ñ–∞—Ä–º –≤–∫–ª—é—á–∏–ª—Å—è –Ω–æ –∫–∞—Ä—Ç–∞ –Ω–µ –ø—Ä–æ–≥—Ä—É–∂–µ–Ω–∞ - –∂–¥–µ–º
                    print("üîÑ FLIP: –ê–≤—Ç–æ—Ñ–∞—Ä–º –≤–∫–ª—é—á–µ–Ω, –Ω–æ –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã...")
                    task.spawn(function()
                        -- –ñ–¥–µ–º –ø—Ä–æ–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
                        while isAutofarmCurrentlyEnabled and not isMapLoaded do
                            task.wait(1)
                            -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ
                            local mapLoadIndicators = {
                                _G.mapLoadCompleted,
                                _G.AutofarmConfig and _G.AutofarmConfig.mapLoaded,
                                workspace.CurrentCamera and workspace.CurrentCamera.CameraType ~= Enum.CameraType.Scriptable,
                                Players.LocalPlayer and Players.LocalPlayer.Character and 
                                Players.LocalPlayer.Character:FindFirstChild("Humanoid") and
                                Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                                game:IsLoaded(),
                                tick() - gameStartTime > 5
                            }
                            
                            local loadedCount = 0
                            for _, indicator in ipairs(mapLoadIndicators) do
                                if indicator then loadedCount = loadedCount + 1 end
                            end
                            
                            if loadedCount >= 3 then
                                isMapLoaded = true
                                print("üó∫Ô∏è FLIP: –ü—Ä–æ–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è! (–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ " .. loadedCount .. " –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏)")
                                break
                            end
                        end
                        
                        -- –ï—Å–ª–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º –≤—Å–µ –µ—â–µ –≤–∫–ª—é—á–µ–Ω –∏ –∫–∞—Ä—Ç–∞ –ø—Ä–æ–≥—Ä—É–∂–µ–Ω–∞
                        if isAutofarmCurrentlyEnabled and isMapLoaded then
                            print("üöÄ FLIP: –ü—Ä–æ–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")
                            flipPlayerUpsideDown()
                        end
                    end)
                else
                    -- –ê–≤—Ç–æ—Ñ–∞—Ä–º –≤—ã–∫–ª—é—á–∏–ª—Å—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –Ω–æ—Ä–º—É
                    print("üõë FLIP: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –Ω–æ—Ä–º—É!")
                    task.spawn(function()
                        unflipPlayer()
                    end)
                end
                wasAutofarmEnabled = isAutofarmCurrentlyEnabled
            end
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–º–µ—Ä—Ç–∏ –∏ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function setupCharacterHandling()
    local player = Players.LocalPlayer
    
    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ—Ä—Ç–∏
    local function onCharacterRemoving()
        print("üíÄ FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ —É–º–µ—Ä - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞")
        isPlayerFlipped = false
        originalPlayerPosition = nil
        isMapLoaded = false -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–æ–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
        stopContinuousFlip()
        
        -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        if renderSteppedConnection then
            renderSteppedConnection:Disconnect()
            renderSteppedConnection = nil
        end
    end
    
    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è
    local function onCharacterAdded(character)
        task.wait(2) -- –î–∞–µ–º –≤—Ä–µ–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂—É –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
        print("üîÑ FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ –≤–æ–∑—Ä–æ–¥–∏–ª—Å—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç")
        
        -- –ï—Å–ª–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º –∞–∫—Ç–∏–≤–µ–Ω, –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑–∞–Ω–æ–≤–æ
        task.spawn(function()
            task.wait(1)
            local isAutofarmActive = false
            
            if _G.isAutofarmEnabled and type(_G.isAutofarmEnabled) == "function" then
                local success, result = pcall(_G.isAutofarmEnabled)
                if success and result then
                    isAutofarmActive = true
                end
            end
            
            if isAutofarmActive then
                print("üîÑ FLIP: –ê–≤—Ç–æ—Ñ–∞—Ä–º –∞–∫—Ç–∏–≤–µ–Ω –ø–æ—Å–ª–µ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è - –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")
                isPlayerFlipped = false -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–æ–º
                flipPlayerUpsideDown()
            end
        end)
    end
    
    -- –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if player.Character then
        player.CharacterRemoving:Connect(onCharacterRemoving)
    end
    player.CharacterAdded:Connect(onCharacterAdded)
    player.CharacterRemoving:Connect(onCharacterRemoving)
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞
local function initializeFlipModule()
    print("üîÑ FLIP: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...")
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
    monitorAutofarmState()
    
    -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    setupCharacterHandling()
    
    print("‚úÖ FLIP: –ú–æ–¥—É–ª—å –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
end

-- –¢–ï–°–¢–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞
local function testFlipNow()
    local player = Players.LocalPlayer
    if player and player.Character then
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            print("üß™ TEST FLIP: –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç!")
            local pos = humanoidRootPart.Position
            humanoidRootPart.CFrame = CFrame.new(pos + Vector3.new(0, -6, 0)) * CFrame.Angles(math.rad(180), 0, 0)
            print("üß™ TEST FLIP: –í—ã–ø–æ–ª–Ω–µ–Ω–æ!")
            return true
        end
    end
    print("‚ùå TEST FLIP: –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return false
end

-- –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
CharacterFlipModule = {
    flipPlayerUpsideDown = flipPlayerUpsideDown,
    unflipPlayer = unflipPlayer,
    isPlayerFlipped = function() return isPlayerFlipped end,
    startContinuousFlip = startContinuousFlip,
    stopContinuousFlip = stopContinuousFlip,
    initialize = initializeFlipModule,
    testFlipNow = testFlipNow -- –¢–ï–°–¢–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è
}

-- –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –≤ AutosellModule –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑–≤–Ω–µ
_G.AutosellModule.CharacterFlip = CharacterFlipModule

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–¥—É–ª—å
task.spawn(function()
    task.wait(3) -- –î–∞–µ–º –≤—Ä–µ–º—è –≤—Å–µ–º —Å–∏—Å—Ç–µ–º–∞–º –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
    initializeFlipModule()
end)

-- ==================== DISTANCE KILL MODULE ====================

local DistanceKillModule = {}

-- Distance Kill variables
local isDistanceKillEnabled = false
local selectedPlayers = {} -- {playerName = true/false}
local distanceKillConnections = {}
local visualClones = {} -- –í–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–ª–æ–Ω—ã –∏–≥—Ä–æ–∫–æ–≤
local originalPositions = {} -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Distance Kill
local DistanceKillConfig = {
    Enabled = false,
    TeleportOffset = Vector3.new(0, 5, -10), -- –°–º–µ—â–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    UpdateInterval = 0.5, -- –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π (—Å–µ–∫—É–Ω–¥—ã)
    MaxDistance = 1000, -- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    DamageMultiplier = 1.0, -- –ú–Ω–æ–∂–∏—Ç–µ–ª—å —É—Ä–æ–Ω–∞
}

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
local function getAllPlayers()
    local playerList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Character then
            playerList[player.Name] = selectedPlayers[player.Name] or false
        end
    end
    return playerList
end

-- –§—É–Ω–∫—Ü–∏—è —Ä—É—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–æ–Ω–∞
local function createManualClone(originalCharacter, playerName)
    print("üéØ DISTANCE KILL: –°–æ–∑–¥–∞–Ω–∏–µ —Ä—É—á–Ω–æ–≥–æ –∫–ª–æ–Ω–∞ –¥–ª—è", playerName)
    
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å
    local clonedCharacter = Instance.new("Model")
    clonedCharacter.Name = playerName .. "_ManualClone"
    
    -- –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —á–∞—Å—Ç–∏
    local partsToCopy = {"HumanoidRootPart", "Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"}
    
    for _, partName in ipairs(partsToCopy) do
        local originalPart = originalCharacter:FindFirstChild(partName)
        if originalPart and originalPart:IsA("BasePart") then
            local newPart = Instance.new("Part")
            newPart.Name = partName
            newPart.Size = originalPart.Size
            newPart.Color = originalPart.Color
            newPart.Material = originalPart.Material
            newPart.Shape = originalPart.Shape
            newPart.TopSurface = Enum.SurfaceType.Smooth
            newPart.BottomSurface = Enum.SurfaceType.Smooth
            newPart.Parent = clonedCharacter
            
            -- –ö–æ–ø–∏—Ä—É–µ–º –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –≥–æ–ª–æ–≤—ã
            if partName == "Head" then
                for _, child in ipairs(originalPart:GetChildren()) do
                    if child:IsA("SpecialMesh") or child:IsA("Decal") then
                        local clonedChild = child:Clone()
                        clonedChild.Parent = newPart
                    end
                end
            end
        end
    end
    
    -- –î–æ–±–∞–≤–ª—è–µ–º Humanoid
    local humanoid = Instance.new("Humanoid")
    humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
    humanoid.Parent = clonedCharacter
    
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PrimaryPart
    local hrp = clonedCharacter:FindFirstChild("HumanoidRootPart")
    if hrp then
        clonedCharacter.PrimaryPart = hrp
    end
    
    return clonedCharacter
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–ª–æ–Ω–∞-–∑–∞–º–µ–Ω–∏—Ç–µ–ª—è
local function createSimpleClone(playerName)
    print("üéØ DISTANCE KILL: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–ª–æ–Ω–∞ –¥–ª—è", playerName)
    
    -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –º–æ–¥–µ–ª—å —Å –±–∞–∑–æ–≤—ã–º–∏ —á–∞—Å—Ç—è–º–∏
    local clonedCharacter = Instance.new("Model")
    clonedCharacter.Name = playerName .. "_SimpleClone"
    
    -- –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ–ª–æ (HumanoidRootPart)
    local hrp = Instance.new("Part")
    hrp.Name = "HumanoidRootPart"
    hrp.Size = Vector3.new(2, 2, 1)
    hrp.Color = Color3.fromRGB(163, 162, 165)
    hrp.Material = Enum.Material.Plastic
    hrp.TopSurface = Enum.SurfaceType.Smooth
    hrp.BottomSurface = Enum.SurfaceType.Smooth
    hrp.Parent = clonedCharacter
    
    -- –ì–æ–ª–æ–≤–∞
    local head = Instance.new("Part")
    head.Name = "Head"
    head.Size = Vector3.new(2, 1, 1)
    head.Color = Color3.fromRGB(254, 243, 187)
    head.Material = Enum.Material.Plastic
    head.Shape = Enum.PartType.Block
    head.TopSurface = Enum.SurfaceType.Smooth
    head.BottomSurface = Enum.SurfaceType.Smooth
    head.Parent = clonedCharacter
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –≥–æ–ª–æ–≤—É
    local weld = Instance.new("WeldConstraint")
    weld.Part0 = hrp
    weld.Part1 = head
    weld.Parent = hrp
    head.CFrame = hrp.CFrame * CFrame.new(0, 1.5, 0)
    
    -- –¢–æ—Ä—Å (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    local torso = Instance.new("Part")
    torso.Name = "Torso"
    torso.Size = Vector3.new(2, 2, 1)
    torso.Color = Color3.fromRGB(13, 105, 172)
    torso.Material = Enum.Material.Plastic
    torso.TopSurface = Enum.SurfaceType.Smooth
    torso.BottomSurface = Enum.SurfaceType.Smooth
    torso.Parent = clonedCharacter
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Ç–æ—Ä—Å
    local torsoWeld = Instance.new("WeldConstraint")
    torsoWeld.Part0 = hrp
    torsoWeld.Part1 = torso
    torsoWeld.Parent = hrp
    torso.CFrame = hrp.CFrame
    
    -- –î–æ–±–∞–≤–ª—è–µ–º Humanoid
    local humanoid = Instance.new("Humanoid")
    humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
    humanoid.MaxHealth = 100
    humanoid.Health = 100
    humanoid.Parent = clonedCharacter
    
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PrimaryPart
    clonedCharacter.PrimaryPart = hrp
    
    return clonedCharacter
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–ª–æ–Ω–∞ –∏–≥—Ä–æ–∫–∞
local function createVisualClone(targetPlayer)
    if not targetPlayer or not targetPlayer.Character then 
        print("üéØ DISTANCE KILL: –û—à–∏–±–∫–∞ - –Ω–µ—Ç targetPlayer –∏–ª–∏ Character")
        return nil 
    end
    
    local localPlayer = Players.LocalPlayer
    if not localPlayer or not localPlayer.Character then 
        print("üéØ DISTANCE KILL: –û—à–∏–±–∫–∞ - –Ω–µ—Ç localPlayer –∏–ª–∏ Character")
        return nil 
    end
    
    print("üéØ DISTANCE KILL: –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–ª–æ–Ω –¥–ª—è", targetPlayer.Name)
    
    -- –°–æ–∑–¥–∞–µ–º –∫–ª–æ–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    local originalCharacter = targetPlayer.Character
    local clonedCharacter
    
    -- –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    print("üéØ DISTANCE KILL: –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", targetPlayer.Name)
    local waitAttempts = 0
    while waitAttempts < 10 do
        local humanoid = originalCharacter:FindFirstChild("Humanoid")
        local humanoidRootPart = originalCharacter:FindFirstChild("HumanoidRootPart")
        local head = originalCharacter:FindFirstChild("Head")
        
        if humanoid and humanoidRootPart and head then
            break
        end
        
        waitAttempts = waitAttempts + 1
        task.wait(0.5)
        print("üéØ DISTANCE KILL: –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏...", waitAttempts, "/10")
    end
    
    -- –ú–µ—Ç–æ–¥ 1: –ü—Ä—è–º–æ–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    local success, result = pcall(function()
        return originalCharacter:Clone()
    end)
    
    if success and result then
        clonedCharacter = result
        print("üéØ DISTANCE KILL: –ö–ª–æ–Ω —Å–æ–∑–¥–∞–Ω –º–µ—Ç–æ–¥–æ–º 1 (–ø—Ä—è–º–æ–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ)")
    else
        print("üéØ DISTANCE KILL: –ú–µ—Ç–æ–¥ 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:", tostring(result))
        
        -- –ú–µ—Ç–æ–¥ 2: –†—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–æ–Ω–∞
        success, result = pcall(function()
            return createManualClone(originalCharacter, targetPlayer.Name)
        end)
        
        if success and result then
            clonedCharacter = result
            print("üéØ DISTANCE KILL: –ö–ª–æ–Ω —Å–æ–∑–¥–∞–Ω –º–µ—Ç–æ–¥–æ–º 2 (—Ä—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ)")
        else
            print("üéØ DISTANCE KILL: –ú–µ—Ç–æ–¥ 2 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:", tostring(result))
            
            -- –ú–µ—Ç–æ–¥ 3: –ü—Ä–æ—Å—Ç–æ–π –∫—É–±-–∑–∞–º–µ–Ω–∏—Ç–µ–ª—å
            clonedCharacter = createSimpleClone(targetPlayer.Name)
            print("üéØ DISTANCE KILL: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–ª–æ–Ω-–∑–∞–º–µ–Ω–∏—Ç–µ–ª—å")
        end
    end
    
    if not clonedCharacter then
        print("üéØ DISTANCE KILL: –í—Å–µ –º–µ—Ç–æ–¥—ã –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å –¥–ª—è", targetPlayer.Name)
        return nil
    end
    
    -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–ª–æ–Ω
    clonedCharacter.Name = targetPlayer.Name .. "_DistanceKillClone"
    clonedCharacter.Parent = workspace
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –∫–ª–æ–Ω —Ä—è–¥–æ–º —Å –ª–æ–∫–∞–ª—å–Ω—ã–º –∏–≥—Ä–æ–∫–æ–º
    local localHRP = localPlayer.Character:FindFirstChild("HumanoidRootPart")
    if localHRP then
        local cloneHRP = clonedCharacter:FindFirstChild("HumanoidRootPart")
        if cloneHRP then
            cloneHRP.CFrame = localHRP.CFrame + DistanceKillConfig.TeleportOffset
            cloneHRP.Anchored = true -- –§–∏–∫—Å–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏—é
        end
    end
    
    -- –î–µ–ª–∞–µ–º –∫–ª–æ–Ω –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–ª–∏—á–∏—è
    for _, part in ipairs(clonedCharacter:GetChildren()) do
        if part and part:IsA("BasePart") and part.Name then
            part.Transparency = 0.3
            part.CanCollide = false
            
            -- –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–Ω–∞
            if part.Name == "HumanoidRootPart" or part.Name == "Torso" or part.Name == "Head" then
                -- –°–æ–∑–¥–∞–µ–º –Ω–µ–≤–∏–¥–∏–º—É—é —á–∞—Å—Ç—å –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∞—Ç–∞–∫
                local damagePart = Instance.new("Part")
                damagePart.Name = "DistanceKillDamagePart_" .. part.Name
                damagePart.Size = part.Size * 1.1 -- –ù–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
                damagePart.CFrame = part.CFrame
                damagePart.Anchored = true
                damagePart.CanCollide = false
                damagePart.Transparency = 1 -- –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–≤–∏–¥–∏–º–∞—è
                damagePart.Parent = clonedCharacter
                
                -- –°–≤—è–∑—ã–≤–∞–µ–º —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —á–∞—Å—Ç—å—é –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–Ω–∞
                damagePart:SetAttribute("OriginalPlayer", targetPlayer.Name)
                damagePart:SetAttribute("OriginalPart", part.Name)
                
                -- –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Å–∞–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–Ω–∞
                damagePart.Touched:Connect(function(hit)
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∞—Ç–∞–∫–∞ –æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
                    if hit and hit.Parent == localPlayer.Character then
                        redirectDamageToOriginal(targetPlayer.Name, part.Name, hit)
                    end
                end)
            end
        end
    end
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É
    local highlight = Instance.new("Highlight")
    highlight.Parent = clonedCharacter
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É –∫–ª–æ–Ω–∞
    local nameTag = Instance.new("BillboardGui")
    nameTag.Size = UDim2.new(0, 100, 0, 30)
    nameTag.StudsOffset = Vector3.new(0, 3, 0)
    nameTag.Parent = clonedCharacter:FindFirstChild("Head") or clonedCharacter:FindFirstChild("HumanoidRootPart")
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = "üéØ " .. targetPlayer.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextScaled = true
    nameLabel.Parent = nameTag
    
    return clonedCharacter
end

-- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–Ω–∞ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
local function redirectDamageToOriginal(targetPlayerName, partName, attackPart)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    if not targetPlayer or not targetPlayer.Character then return end
    
    local originalPart = targetPlayer.Character:FindFirstChild(partName)
    if not originalPart then return end
    
    print("üéØ DISTANCE KILL: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —É—Ä–æ–Ω –Ω–∞", targetPlayerName, "—á–∞—Å—Ç—å:", partName)
    
    -- –°–∏–º—É–ª–∏—Ä—É–µ–º –∞—Ç–∞–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–∏
    -- –≠—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏–≥—Ä—ã YBA, –Ω–æ –æ–±—ã—á–Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
    
    -- –ú–µ—Ç–æ–¥ 1: –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞—Ç–∞–∫—É—é—â—É—é —á–∞—Å—Ç—å –∫ —Ü–µ–ª–∏ –Ω–∞ –º–≥–Ω–æ–≤–µ–Ω–∏–µ
    if attackPart and attackPart.Parent then
        local originalCFrame = attackPart.CFrame
        task.spawn(function()
            -- –ë—ã—Å—Ç—Ä–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫ —Ü–µ–ª–∏
            attackPart.CFrame = originalPart.CFrame
            task.wait(0.1) -- –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ø–∞–¥–∞–Ω–∏—è
            -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
            if attackPart.Parent then
                attackPart.CFrame = originalCFrame
            end
        end)
    end
    
    -- –ú–µ—Ç–æ–¥ 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RemoteEvents (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã)
    task.spawn(function()
        -- –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –≤—ã–∑–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —É—Ä–æ–Ω–∞ –≤ –∏–≥—Ä–µ
        for _, obj in ipairs(game.ReplicatedStorage:GetDescendants()) do
            if obj:IsA("RemoteEvent") and (
                string.find(obj.Name:lower(), "damage") or 
                string.find(obj.Name:lower(), "hit") or
                string.find(obj.Name:lower(), "attack")
            ) then
                pcall(function()
                    obj:FireServer(targetPlayer.Character, originalPart, DistanceKillConfig.DamageMultiplier)
                end)
            end
        end
    end)
    
    -- –ú–µ—Ç–æ–¥ 3: –ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –ø–æ–∑–∏—Ü–∏–µ–π –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è
    local localPlayer = Players.LocalPlayer
    if localPlayer and localPlayer.Character then
        local localHRP = localPlayer.Character:FindFirstChild("HumanoidRootPart")
        if localHRP then
            task.spawn(function()
                local originalLocalPos = localHRP.CFrame
                -- –í—Ä–µ–º–µ–Ω–Ω–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∫ —Ü–µ–ª–∏
                localHRP.CFrame = originalPart.CFrame + Vector3.new(0, 0, -5)
                task.wait(0.05)
                -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
                localHRP.CFrame = originalLocalPos
            end)
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–ª–æ–Ω–∞
local function removeVisualClone(playerName)
    if visualClones[playerName] then
        print("üéØ DISTANCE KILL: –£–¥–∞–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–ª–æ–Ω –¥–ª—è", playerName)
        visualClones[playerName]:Destroy()
        visualClones[playerName] = nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π –∫–ª–æ–Ω–æ–≤
local function updateClonePositions()
    local localPlayer = Players.LocalPlayer
    if not localPlayer or not localPlayer.Character then return end
    
    local localHRP = localPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localHRP then return end
    
    for playerName, clone in pairs(visualClones) do
        if clone and clone.Parent then
            local cloneHRP = clone:FindFirstChild("HumanoidRootPart")
            if cloneHRP then
                -- –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–ª–æ–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
                cloneHRP.CFrame = localHRP.CFrame + DistanceKillConfig.TeleportOffset
            end
        else
            -- –£–±–∏—Ä–∞–µ–º –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–æ–Ω—ã
            visualClones[playerName] = nil
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Distance Kill –¥–ª—è –∏–≥—Ä–æ–∫–∞
local function enableDistanceKillForPlayer(playerName)
    if not selectedPlayers[playerName] then 
        print("üéØ DISTANCE KILL: –ò–≥—Ä–æ–∫", playerName, "–Ω–µ –≤—ã–±—Ä–∞–Ω")
        return 
    end
    
    local targetPlayer = Players:FindFirstChild(playerName)
    if not targetPlayer then
        print("üéØ DISTANCE KILL: –ò–≥—Ä–æ–∫", playerName, "–Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        return
    end
    
    if not targetPlayer.Character then
        print("üéØ DISTANCE KILL: –£ –∏–≥—Ä–æ–∫–∞", playerName, "–Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        return
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —á–∞—Å—Ç–∏
    local humanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        print("üéØ DISTANCE KILL: –£ –∏–≥—Ä–æ–∫–∞", playerName, "–Ω–µ—Ç HumanoidRootPart")
        return
    end
    
    print("üéØ DISTANCE KILL: –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –¥–ª—è", playerName)
    
    -- –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–ª–æ–Ω
    local clone = createVisualClone(targetPlayer)
    if clone then
        visualClones[playerName] = clone
        
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
        local originalHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        if originalHRP then
            originalPositions[playerName] = originalHRP.CFrame
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Distance Kill –¥–ª—è –∏–≥—Ä–æ–∫–∞
local function disableDistanceKillForPlayer(playerName)
    print("üéØ DISTANCE KILL: –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –¥–ª—è", playerName)
    
    -- –£–¥–∞–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∫–ª–æ–Ω
    removeVisualClone(playerName)
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    originalPositions[playerName] = nil
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Distance Kill
local function startDistanceKill()
    if isDistanceKillEnabled then return end
    isDistanceKillEnabled = true
    
    print("üéØ DISTANCE KILL: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...")
    
    -- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –¥–ª—è –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
    for playerName, enabled in pairs(selectedPlayers) do
        if enabled then
            enableDistanceKillForPlayer(playerName)
        end
    end
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π
    distanceKillConnections.updateLoop = task.spawn(function()
        while isDistanceKillEnabled do
            updateClonePositions()
            task.wait(DistanceKillConfig.UpdateInterval)
        end
    end)
    
    print("üéØ DISTANCE KILL: –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞!")
end

-- –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Distance Kill
local function stopDistanceKill()
    if not isDistanceKillEnabled then return end
    isDistanceKillEnabled = false
    
    print("üéØ DISTANCE KILL: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    for _, connection in pairs(distanceKillConnections) do
        if typeof(connection) == "RBXScriptConnection" then
            connection:Disconnect()
        elseif typeof(connection) == "thread" then
            task.cancel(connection)
        end
    end
    distanceKillConnections = {}
    
    -- –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–ª–æ–Ω—ã
    for playerName, _ in pairs(visualClones) do
        removeVisualClone(playerName)
    end
    
    -- –û—á–∏—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
    originalPositions = {}
    
    print("üéØ DISTANCE KILL: –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
end

-- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
local function togglePlayerSelection(playerName, enabled)
    selectedPlayers[playerName] = enabled
    print("üéØ DISTANCE KILL: –ò–≥—Ä–æ–∫", playerName, enabled and "–í–´–ë–†–ê–ù" or "–£–ë–†–ê–ù")
    
    if isDistanceKillEnabled then
        if enabled then
            enableDistanceKillForPlayer(playerName)
        else
            disableDistanceKillForPlayer(playerName)
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è GUI –¥–ª—è Distance Kill
local function createDistanceKillGUI(functionsContainer, currentY, createToggleSlider, createSlider, createDivider, createSectionHeader, createButton)
    print("üéØ DISTANCE KILL: –°–æ–∑–¥–∞–Ω–∏–µ GUI...")
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
    createDivider()
    createSectionHeader("üéØ DISTANCE KILL")
    
    -- –ì–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
    createToggleSlider("Distance Kill Enabled", DistanceKillConfig.Enabled, function(v)
        DistanceKillConfig.Enabled = v
        if v then
            startDistanceKill()
        else
            stopDistanceKill()
        end
    end)
    
    -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    createSlider("Update Interval", DistanceKillConfig.UpdateInterval, 0.1, 2.0, function(v)
        DistanceKillConfig.UpdateInterval = v
        print("üéØ DISTANCE KILL: –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", DistanceKillConfig.UpdateInterval)
    end)
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
    createDivider()
    
    -- –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    local function updatePlayerList()
        local allPlayers = getAllPlayers()
        for playerName, currentState in pairs(allPlayers) do
            createToggleSlider("Target: " .. playerName, currentState, function(v)
                togglePlayerSelection(playerName, v)
            end)
        end
    end
    
    -- –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
    createButton("üîÑ REFRESH PLAYER LIST", function()
        print("üéØ DISTANCE KILL: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤...")
        -- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è GUI —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
        -- –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª—å
        local allPlayers = getAllPlayers()
        print("üéØ DISTANCE KILL: –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏:")
        for playerName, _ in pairs(allPlayers) do
            print("  -", playerName)
        end
    end)
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    updatePlayerList()
    
    print("üéØ DISTANCE KILL: GUI —Å–æ–∑–¥–∞–Ω!")
    return currentY
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
local function initializeDistanceKillModule()
    print("üéØ DISTANCE KILL: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è...")
    
    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
    Players.PlayerAdded:Connect(function(player)
        print("üéØ DISTANCE KILL: –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫:", player.Name)
        selectedPlayers[player.Name] = false
    end)
    
    Players.PlayerRemoving:Connect(function(player)
        print("üéØ DISTANCE KILL: –ò–≥—Ä–æ–∫ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä:", player.Name)
        if selectedPlayers[player.Name] then
            disableDistanceKillForPlayer(player.Name)
        end
        selectedPlayers[player.Name] = nil
    end)
    
    print("üéØ DISTANCE KILL: –ú–æ–¥—É–ª—å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
end

-- –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
DistanceKillModule = {
    start = startDistanceKill,
    stop = stopDistanceKill,
    isEnabled = function() return isDistanceKillEnabled end,
    togglePlayer = togglePlayerSelection,
    getSelectedPlayers = function() return selectedPlayers end,
    getAllPlayers = getAllPlayers,
    createGUI = createDistanceKillGUI,
    initialize = initializeDistanceKillModule,
    Config = DistanceKillConfig
}

-- –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –≤ AutosellModule
_G.AutosellModule.DistanceKill = DistanceKillModule

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
task.spawn(function()
    task.wait(1)
    initializeDistanceKillModule()
end)

print("ü§ñ AUTOSELL: –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ! –õ–∏–º–∏—Ç—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")
print("üîó AUTOFARM LINK: –°–∏—Å—Ç–µ–º–∞ —Å–≤—è–∑–∏ —Å –≤–Ω–µ—à–Ω–∏–º –∞–≤—Ç–æ—Ñ–∞—Ä–º–æ–º –≥–æ—Ç–æ–≤–∞!")
print("üîÑ FLIP: –ú–æ–¥—É–ª—å –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω!")
print("üéØ DISTANCE KILL: –ú–æ–¥—É–ª—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–±–∏–π—Å—Ç–≤–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω!")
print("üîí FREEZE: –°–∏—Å—Ç–µ–º–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —É Shiftplox –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
print("üéõÔ∏è GUI: –ê–≤—Ç–æ—Å–µ–ª –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Å —Ç—É–º–±–ª–µ—Ä–∞–º–∏:")
print("   üü¢üî¥ –¢—É–º–±–ª–µ—Ä—ã Enable/Disable All Items")
print("   ‚öôÔ∏è –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—É–º–±–ª–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞")
print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
print("   _G.AutosellModule.ExternalAutofarm.findFunctions() - –ø–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞")
print("   _G.AutosellModule.ExternalAutofarm.setFunctions(stop, start, isEnabled) - —Ä—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
print("   _G.AutosellModule.enableAllItems() - –≤–∫–ª—é—á–∏—Ç—å –í–°–ï –ø—Ä–µ–¥–º–µ—Ç—ã –∞–≤—Ç–æ—Å–µ–ª–∞")
print("   _G.AutosellModule.disableAllItems() - –æ—Ç–∫–ª—é—á–∏—Ç—å –í–°–ï –ø—Ä–µ–¥–º–µ—Ç—ã –∞–≤—Ç–æ—Å–µ–ª–∞")
print("üîí –§—É–Ω–∫—Ü–∏–∏ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:")
print("   _G.AutosellModule.freezePlayerAtShiftplox() - –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —É Shiftplox")
print("   _G.AutosellModule.unfreezePlayerFromShiftplox() - —Å–Ω—è—Ç—å —Ñ–∏–∫—Å–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
print("üîÑ –§—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:")
print("   _G.AutosellModule.CharacterFlip.flipPlayerUpsideDown() - –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
print("   _G.AutosellModule.CharacterFlip.unflipPlayer() - –≤–µ—Ä–Ω—É—Ç—å –≤ –Ω–æ—Ä–º—É")
print("   _G.AutosellModule.CharacterFlip.isPlayerFlipped() - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
print("   _G.AutosellModule.CharacterFlip.testFlipNow() - –¢–ï–°–¢: –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç")
print("üéØ –§—É–Ω–∫—Ü–∏–∏ Distance Kill:")
print("   _G.AutosellModule.DistanceKill.start() - –∑–∞–ø—É—Å—Ç–∏—Ç—å Distance Kill")
print("   _G.AutosellModule.DistanceKill.stop() - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Distance Kill")
print("   _G.AutosellModule.DistanceKill.togglePlayer(name, enabled) - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∏–≥—Ä–æ–∫–∞")
print("   _G.AutosellModule.DistanceKill.getSelectedPlayers() - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤")

return _G.AutosellModule
