if not game:IsLoaded() then game.Loaded:Wait() end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- ========== GUI –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ==========

local screenGui = Instance.new("ScreenGui", CoreGui)
screenGui.Name = "SslkinGui"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Name = "MainFrame"
mainFrame.Position = UDim2.new(0, 20, 0.5, -250)
mainFrame.Size = UDim2.new(0, 400, 0, 500)
mainFrame.BackgroundTransparency = 1
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

local minWidth = 200
local minHeight = 150

local mainCorner = Instance.new("UICorner", mainFrame)
mainCorner.CornerRadius = UDim.new(0, 8)

local leftPanel = Instance.new("Frame", mainFrame)
leftPanel.Name = "LeftPanel"
leftPanel.Size = UDim2.new(0, 120, 1, 0)
leftPanel.Position = UDim2.new(0, 0, 0, 0)
leftPanel.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
leftPanel.BackgroundTransparency = 0
leftPanel.BorderSizePixel = 0

local leftCorner = Instance.new("UICorner", leftPanel)
leftCorner.CornerRadius = UDim.new(0, 8)

local logoFrame = Instance.new("Frame", leftPanel)
logoFrame.Name = "LogoFrame"
logoFrame.Size = UDim2.new(1, 0, 0, 80)
logoFrame.Position = UDim2.new(0, 0, 0, 0)
logoFrame.BackgroundTransparency = 1

local logoText = Instance.new("TextLabel", logoFrame)
logoText.Name = "LogoText"
logoText.Size = UDim2.new(1, 0, 0, 40)
logoText.Position = UDim2.new(0, 0, 0, 10)
logoText.Text = "SSLKIN"
logoText.Font = Enum.Font.GothamBold
logoText.TextSize = 18
logoText.TextColor3 = Color3.new(1, 1, 1)
logoText.BackgroundTransparency = 1
logoText.TextXAlignment = Enum.TextXAlignment.Center

local versionText = Instance.new("TextLabel", logoFrame)
versionText.Name = "VersionText"
versionText.Size = UDim2.new(1, 0, 0, 20)
versionText.Position = UDim2.new(0, 0, 0, 50)
versionText.Text = "UNIVERSAL SCRIPT"
versionText.Font = Enum.Font.Gotham
versionText.TextSize = 10
versionText.TextColor3 = Color3.new(1, 1, 1)
versionText.BackgroundTransparency = 1
versionText.TextXAlignment = Enum.TextXAlignment.Center

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
local rightPanel = Instance.new("Frame", mainFrame)
rightPanel.Name = "RightPanel"
rightPanel.Size = UDim2.new(1, -120, 1, 0)
rightPanel.Position = UDim2.new(0, 120, 0, 0)
rightPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
rightPanel.BackgroundTransparency = 0
rightPanel.BorderSizePixel = 0

local rightCorner = Instance.new("UICorner", rightPanel)
rightCorner.CornerRadius = UDim.new(0, 8)

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
local contentTitle = Instance.new("TextLabel", rightPanel)
contentTitle.Name = "ContentTitle"
contentTitle.Size = UDim2.new(1, -20, 0, 40)
contentTitle.Position = UDim2.new(0, 10, 0, 10)
contentTitle.Text = "MAIN FUNCTIONS"
contentTitle.Font = Enum.Font.GothamBold
contentTitle.TextSize = 16
contentTitle.TextColor3 = Color3.new(1, 1, 1)
contentTitle.BackgroundTransparency = 1
contentTitle.TextXAlignment = Enum.TextXAlignment.Left

-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞
local scrollFrame = Instance.new("ScrollingFrame", rightPanel)
scrollFrame.Name = "ScrollFrame"
scrollFrame.Size = UDim2.new(1, -20, 1, -60)
scrollFrame.Position = UDim2.new(0, 10, 0, 50)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 8
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

local functionsContainer = Instance.new("Frame", scrollFrame)
functionsContainer.Name = "FunctionsContainer" 
functionsContainer.Size = UDim2.new(1, 0, 0, 0)
functionsContainer.Position = UDim2.new(0, 0, 0, 0)
functionsContainer.BackgroundTransparency = 1
functionsContainer.AutomaticSize = Enum.AutomaticSize.Y

-- –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
local navButtons = {
    {name = "Main", icon = "üè†"},
    {name = "YBA Hacks", icon = "‚öîÔ∏è"},
    {name = "Settings", icon = "‚öôÔ∏è"}
}

local selectedTab = "Main"
local tabScrollPositions = {
    ["Main"] = 0,
    ["YBA Hacks"] = 0,
    ["Settings"] = 0
}

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥—É–ª–µ–π
_G.SSLKIN_GUI = {
    screenGui = screenGui,
    mainFrame = mainFrame,
    leftPanel = leftPanel,
    rightPanel = rightPanel,
    contentTitle = contentTitle,
    scrollFrame = scrollFrame,
    functionsContainer = functionsContainer,
    selectedTab = selectedTab,
    tabScrollPositions = tabScrollPositions,
    showContent = nil -- –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π
}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
local function createNavButtons()
    for i, buttonData in ipairs(navButtons) do
        local navButton = Instance.new("TextButton", leftPanel)
        navButton.Name = buttonData.name .. "Button"
        navButton.Size = UDim2.new(1, -20, 0, 40)
        navButton.Position = UDim2.new(0, 10, 0, 100 + (i-1) * 50)
        navButton.Text = buttonData.icon .. " " .. buttonData.name
        navButton.Font = Enum.Font.Gotham
        navButton.TextSize = 14
        navButton.TextColor3 = Color3.new(1, 1, 1)
        navButton.BackgroundColor3 = buttonData.name == selectedTab and Color3.fromRGB(40, 40, 45) or Color3.fromRGB(30, 30, 35)
        navButton.BorderSizePixel = 0
        navButton.AutoButtonColor = false
        
        local buttonCorner = Instance.new("UICorner", navButton)
        buttonCorner.CornerRadius = UDim.new(0, 6)
        
        -- –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        if buttonData.name == selectedTab then
            local highlight = Instance.new("Frame", navButton)
            highlight.Name = "Highlight"
            highlight.Size = UDim2.new(0, 3, 0.8, 0)
            highlight.Position = UDim2.new(0, -1, 0.1, 0)
            highlight.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
            highlight.BorderSizePixel = 0
            
            local highlightCorner = Instance.new("UICorner", highlight)
            highlightCorner.CornerRadius = UDim.new(0, 2)
        end
        
        navButton.MouseButton1Click:Connect(function()
            selectedTab = buttonData.name
            _G.SSLKIN_GUI.selectedTab = selectedTab
            
            -- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª –∫–Ω–æ–ø–æ–∫
            for _, child in pairs(leftPanel:GetChildren()) do
                if child:IsA("TextButton") then
                    child.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
                    local highlight = child:FindFirstChild("Highlight")
                    if highlight then highlight:Destroy() end
                end
            end
            
            navButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
            local highlight = Instance.new("Frame", navButton)
            highlight.Name = "Highlight"
            highlight.Size = UDim2.new(0, 3, 0.8, 0)
            highlight.Position = UDim2.new(0, -1, 0.1, 0)
            highlight.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
            highlight.BorderSizePixel = 0
            
            local highlightCorner = Instance.new("UICorner", highlight)
            highlightCorner.CornerRadius = UDim.new(0, 2)
            
            -- –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
            if _G.SSLKIN_GUI.showContent then
                _G.SSLKIN_GUI.showContent(selectedTab)
            end
        end)
    end
end

createNavButtons()

-- ========== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ú–û–î–£–õ–ï–ô ==========

print("üöÄ SSLKIN: –ó–∞–≥—Ä—É–∑–∫–∞ GUI –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∑–∞–ø—É—Å–∫ –º–æ–¥—É–ª–µ–π...")

-- –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π (Main –∏ Settings)
loadstring([[
-- MAIN –ò SETTINGS –ú–û–î–£–õ–¨
local Config = {
    ESP = {
        Enabled     = true,
        TeamCheck   = false,
        ShowOutline = true,
        ShowLines   = false,
        Rainbow     = false,
        FillColor   = Color3.fromRGB(255,255,255),
        OutlineColor= Color3.fromRGB(255,255,255),
        TextColor   = Color3.fromRGB(255,255,255),
        LineColor   = Color3.fromRGB(255,255,255),
        FillTransparency    = 0.5,
        OutlineTransparency = 0,
        Font        = Enum.Font.SciFi,
        TeamColor   = Color3.fromRGB(0,255,0),
        EnemyColor  = Color3.fromRGB(255,0,0),
        ToggleKey   = nil,
    },
    Aimbot = {
        Enabled         = false,
        TeamCheck       = false,
        VisibilityCheck = true,
        FOV             = 150,
        ToggleKey       = nil,
        FOVColor        = Color3.fromRGB(255,128,128),
        FOVRainbow      = false,
    },
    MenuCollapsed = false,
}

local MovementConfig = {
    Fly = {Enabled = false, Speed = 1, ToggleKey = nil},
    NoClip = {Enabled = false, ToggleKey = nil, ForceToggleKey = nil},
    Speed = {Enabled = false, Speed = 1, ToggleKey = nil, UseJumpPower = false},
    LongJump = {Enabled = false, JumpPower = 150, ToggleKey = nil},
    InfiniteJump = {Enabled = false, JumpPower = 50, ToggleKey = nil},
}

local TeleportConfig = {
    Enabled = false,
    TargetPlayer = nil,
    OriginalPosition = nil,
    ToggleKey = nil,
    SelectedPlayerName = nil,
    UseStealthMode = true,
    TeleportSpeed = 2000,
    ReturnSpeed = 2400,
    BehindPlayerDistance = 2.6,
    StabilizationTime = 0.25,
    MaxSpeedResetTime = 2.0,
    SpeedResetThreshold = 50,
    InstantTurnSpeed = 600,
    SmoothingFactor = 0.2,
    MaxCorrectionSpeed = 180,
    StabilizationThreshold = 0.9,
}

local MenuSettings = {
    Language = "English",
    AccentColor = Color3.fromRGB(0, 150, 0),
    BlurEffect = true,
}

-- –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ GUI —ç–ª–µ–º–µ–Ω—Ç—ã
local gui = _G.SSLKIN_GUI
local functionsContainer = gui.functionsContainer
local contentTitle = gui.contentTitle
local scrollFrame = gui.scrollFrame

local currentY = 0
local padding = 5

-- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
local function createDivider()
    local divider = Instance.new("Frame", functionsContainer)
    divider.Size = UDim2.new(1, -10, 0, 1)
    divider.Position = UDim2.new(0, 5, 0, currentY)
    divider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    divider.BorderSizePixel = 0
    currentY = currentY + 1 + padding * 2
    return divider
end

local function createSectionHeader(text)
    local header = Instance.new("TextLabel", functionsContainer)
    header.Size = UDim2.new(1, -10, 0, 25)
    header.Position = UDim2.new(0, 5, 0, currentY)
    header.Text = text
    header.Font = Enum.Font.GothamBold
    header.TextSize = 14
    header.TextColor3 = MenuSettings.AccentColor
    header.BackgroundTransparency = 1
    header.TextXAlignment = Enum.TextXAlignment.Left
    currentY = currentY + 25 + padding
    return header
end

local function createToggleSlider(text, initialValue, callback)
    local container = Instance.new("Frame", functionsContainer)
    container.Size = UDim2.new(1, -10, 0, 30)
    container.Position = UDim2.new(0, 5, 0, currentY)
    container.BackgroundTransparency = 1
    
    local label = Instance.new("TextLabel", container)
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = text
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.TextColor3 = Color3.new(1, 1, 1)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local toggleFrame = Instance.new("Frame", container)
    toggleFrame.Size = UDim2.new(0, 40, 0, 20)
    toggleFrame.Position = UDim2.new(1, -40, 0.5, -10)
    toggleFrame.BackgroundColor3 = initialValue and MenuSettings.AccentColor or Color3.fromRGB(60, 60, 60)
    toggleFrame.BorderSizePixel = 0
    
    local toggleCorner = Instance.new("UICorner", toggleFrame)
    toggleCorner.CornerRadius = UDim.new(0, 10)
    
    local toggleButton = Instance.new("Frame", toggleFrame)
    toggleButton.Size = UDim2.new(0, 16, 0, 16)
    toggleButton.Position = initialValue and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    toggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
    toggleButton.BorderSizePixel = 0
    
    local buttonCorner = Instance.new("UICorner", toggleButton)
    buttonCorner.CornerRadius = UDim.new(0, 8)
    
    local isToggled = initialValue
    
    local button = Instance.new("TextButton", container)
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Position = UDim2.new(0, 0, 0, 0)
    button.BackgroundTransparency = 1
    button.Text = ""
    
    button.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        toggleFrame.BackgroundColor3 = isToggled and MenuSettings.AccentColor or Color3.fromRGB(60, 60, 60)
        
        local tween = game:GetService("TweenService"):Create(toggleButton, TweenInfo.new(0.2), {
            Position = isToggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        })
        tween:Play()
        
        callback(isToggled)
    end)
    
    currentY = currentY + 30 + padding
    return container
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Main –∏ Settings
local function showMainSettingsContent(tabName)
    -- –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    for _, child in pairs(functionsContainer:GetChildren()) do
        child:Destroy()
    end
    currentY = 0
    
    if tabName == "Main" then
        contentTitle.Text = "MAIN FUNCTIONS"
        
        createSectionHeader("üî∑ ESP Settings")
        createToggleSlider("ESP", Config.ESP.Enabled, function(v) Config.ESP.Enabled = v print("ESP:", v and "ON" or "OFF") end)
        createToggleSlider("Team Check", Config.ESP.TeamCheck, function(v) Config.ESP.TeamCheck = v end)
        createToggleSlider("Show Outline", Config.ESP.ShowOutline, function(v) Config.ESP.ShowOutline = v end)
        createToggleSlider("Show Lines", Config.ESP.ShowLines, function(v) Config.ESP.ShowLines = v end)
        
        createDivider()
        
        createSectionHeader("üî∑ Aimbot Settings")
        createToggleSlider("Aimbot", Config.Aimbot.Enabled, function(v) Config.Aimbot.Enabled = v print("Aimbot:", v and "ON" or "OFF") end)
        createToggleSlider("Team Check", Config.Aimbot.TeamCheck, function(v) Config.Aimbot.TeamCheck = v end)
        createToggleSlider("Visibility Check", Config.Aimbot.VisibilityCheck, function(v) Config.Aimbot.VisibilityCheck = v end)
        
        createDivider()
        
        createSectionHeader("üü® Movement Settings")
        createToggleSlider("Fly", MovementConfig.Fly.Enabled, function(v) MovementConfig.Fly.Enabled = v print("Fly:", v and "ON" or "OFF") end)
        createToggleSlider("NoClip", MovementConfig.NoClip.Enabled, function(v) MovementConfig.NoClip.Enabled = v print("NoClip:", v and "ON" or "OFF") end)
        createToggleSlider("Speed Hack", MovementConfig.Speed.Enabled, function(v) MovementConfig.Speed.Enabled = v print("Speed:", v and "ON" or "OFF") end)
        
        createDivider()
        
        createSectionHeader("üéØ Teleport Settings")
        createToggleSlider("Teleport", TeleportConfig.Enabled, function(v) TeleportConfig.Enabled = v print("Teleport:", v and "ON" or "OFF") end)
        
    elseif tabName == "Settings" then
        contentTitle.Text = "MENU SETTINGS"
        
        createSectionHeader("üé® Appearance")
        createToggleSlider("Blur Effect", MenuSettings.BlurEffect, function(v) MenuSettings.BlurEffect = v end)
        
        createDivider()
        
        local accentColorLabel = Instance.new("TextLabel", functionsContainer)
        accentColorLabel.Text = "Accent Color"
        accentColorLabel.TextColor3 = Color3.new(1,1,1)
        accentColorLabel.BackgroundTransparency = 1
        accentColorLabel.Size = UDim2.new(1, -10, 0, 20)
        accentColorLabel.Position = UDim2.new(0, 5, 0, currentY)
        accentColorLabel.Font = Enum.Font.Gotham
        accentColorLabel.TextSize = 14
        accentColorLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding

        local accentColors = {
            Color3.fromRGB(0, 150, 0),
            Color3.fromRGB(0, 100, 255),
            Color3.fromRGB(255, 0, 100),
            Color3.fromRGB(255, 150, 0),
            Color3.fromRGB(150, 0, 255),
            Color3.fromRGB(255, 255, 0),
            Color3.fromRGB(0, 255, 255),
            Color3.fromRGB(255, 50, 50),
        }

        local colorRow = Instance.new("Frame", functionsContainer)
        colorRow.Size = UDim2.new(1, -10, 0, 35)
        colorRow.Position = UDim2.new(0, 5, 0, currentY)
        colorRow.BackgroundTransparency = 1

        local colorLayout = Instance.new("UIListLayout", colorRow)
        colorLayout.FillDirection = Enum.FillDirection.Horizontal
        colorLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
        colorLayout.Padding = UDim.new(0, 8)

        for _, color in pairs(accentColors) do
            local colorBtn = Instance.new("TextButton", colorRow)
            colorBtn.Size = UDim2.new(0, 30, 0, 30)
            colorBtn.BackgroundColor3 = color
            colorBtn.Text = ""
            colorBtn.AutoButtonColor = false
            colorBtn.BorderSizePixel = 0
            
            local colorCorner = Instance.new("UICorner", colorBtn)
            colorCorner.CornerRadius = UDim.new(0, 6)
            
            if MenuSettings.AccentColor == color then
                local highlight = Instance.new("UIStroke", colorBtn)
                highlight.Color = Color3.new(1, 1, 1)
                highlight.Thickness = 2
            end
            
            colorBtn.MouseButton1Click:Connect(function()
                MenuSettings.AccentColor = color
                
                for _, btn in pairs(colorRow:GetChildren()) do
                    if btn:IsA("TextButton") then
                        local stroke = btn:FindFirstChild("UIStroke")
                        if stroke then stroke:Destroy() end
                        
                        if btn.BackgroundColor3 == color then
                            local highlight = Instance.new("UIStroke", btn)
                            highlight.Color = Color3.new(1, 1, 1)
                            highlight.Thickness = 2
                        end
                    end
                end
                
                print("Accent color changed!")
            end)
        end
        
        currentY = currentY + 35 + padding
    end
    
    functionsContainer.Size = UDim2.new(1, 0, 0, currentY)
end

-- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
_G.SSLKIN_MAIN_SETTINGS = showMainSettingsContent

print("‚úÖ SSLKIN: Main –∏ Settings –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
]])()

-- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π YBA –º–æ–¥—É–ª—è
task.wait(0.1)

-- –ó–∞–≥—Ä—É–∑–∫–∞ YBA Hacks –º–æ–¥—É–ª—è
loadstring([[
-- YBA HACKS –ú–û–î–£–õ–¨
local YBAConfig = {
    Enabled = false,
    ToggleKey = nil,
    StandRange = 500,
    FreezePlayer = true,
    SwitchCamera = true,
    TransferControl = true,
    AutoFindStands = true,
    MaxStandDistance = 50,
    CameraDistance = 12,
    CameraHeight = 8,
    StandControlSpeed = 1.0,
    StandControlSmoothing = 0.1,
    MouseSensitivity = 0.01,
    CameraSmoothing = 0.08,
    CameraFollowDistance = 20.2,
    CameraFollowHeight = 6.1,
    MouseLookSensitivity = 0.003,
    StandRotationSpeed = 0.05,
    UndergroundControl = {
        FlightSpeed = 40,
        AutoNoClip = true,
        OriginalPosition = nil,
    },
    ItemESP = {
        Enabled = false,
        ToggleKey = nil,
        MaxDistance = 1000,
        MaxRenderDistance = 5000,
        UpdateInterval = 0.3,
        ShowOutline = true,
    },
}

-- –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ GUI —ç–ª–µ–º–µ–Ω—Ç—ã
local gui = _G.SSLKIN_GUI
local functionsContainer = gui.functionsContainer
local contentTitle = gui.contentTitle

local currentY = 0
local padding = 5

-- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
local function createDivider()
    local divider = Instance.new("Frame", functionsContainer)
    divider.Size = UDim2.new(1, -10, 0, 1)
    divider.Position = UDim2.new(0, 5, 0, currentY)
    divider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    divider.BorderSizePixel = 0
    currentY = currentY + 1 + padding * 2
    return divider
end

local function createSectionHeader(text)
    local header = Instance.new("TextLabel", functionsContainer)
    header.Size = UDim2.new(1, -10, 0, 25)
    header.Position = UDim2.new(0, 5, 0, currentY)
    header.Text = text
    header.Font = Enum.Font.GothamBold
    header.TextSize = 14
    header.TextColor3 = Color3.fromRGB(0, 150, 0)
    header.BackgroundTransparency = 1
    header.TextXAlignment = Enum.TextXAlignment.Left
    currentY = currentY + 25 + padding
    return header
end

local function createToggleSlider(text, initialValue, callback)
    local container = Instance.new("Frame", functionsContainer)
    container.Size = UDim2.new(1, -10, 0, 30)
    container.Position = UDim2.new(0, 5, 0, currentY)
    container.BackgroundTransparency = 1
    
    local label = Instance.new("TextLabel", container)
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = text
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.TextColor3 = Color3.new(1, 1, 1)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local toggleFrame = Instance.new("Frame", container)
    toggleFrame.Size = UDim2.new(0, 40, 0, 20)
    toggleFrame.Position = UDim2.new(1, -40, 0.5, -10)
    toggleFrame.BackgroundColor3 = initialValue and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 60)
    toggleFrame.BorderSizePixel = 0
    
    local toggleCorner = Instance.new("UICorner", toggleFrame)
    toggleCorner.CornerRadius = UDim.new(0, 10)
    
    local toggleButton = Instance.new("Frame", toggleFrame)
    toggleButton.Size = UDim2.new(0, 16, 0, 16)
    toggleButton.Position = initialValue and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    toggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
    toggleButton.BorderSizePixel = 0
    
    local buttonCorner = Instance.new("UICorner", toggleButton)
    buttonCorner.CornerRadius = UDim.new(0, 8)
    
    local isToggled = initialValue
    
    local button = Instance.new("TextButton", container)
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Position = UDim2.new(0, 0, 0, 0)
    button.BackgroundTransparency = 1
    button.Text = ""
    
    button.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        toggleFrame.BackgroundColor3 = isToggled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 60)
        
        local tween = game:GetService("TweenService"):Create(toggleButton, TweenInfo.new(0.2), {
            Position = isToggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        })
        tween:Play()
        
        callback(isToggled)
    end)
    
    currentY = currentY + 30 + padding
    return container
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ YBA –∫–æ–Ω—Ç–µ–Ω—Ç–∞
local function showYBAContent()
    -- –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    for _, child in pairs(functionsContainer:GetChildren()) do
        child:Destroy()
    end
    currentY = 0
    
    contentTitle.Text = "YBA HACKS"
    
    createSectionHeader("üéØ STAND RANGE")
    createToggleSlider("YBA Stand Range", YBAConfig.Enabled, function(v)
        YBAConfig.Enabled = v
        print("YBA Stand Range:", v and "ENABLED" or "DISABLED")
    end)
    
    createToggleSlider("Underground Flight", false, function(v)
        print("Underground Flight:", v and "ENABLED" or "DISABLED")
    end)
    
    createDivider()
    
    createSectionHeader("‚è∞ ANTI TS")
    local antiTimeStopBtn = Instance.new("TextButton", functionsContainer)
    antiTimeStopBtn.Size = UDim2.new(1, -10, 0, 28)
    antiTimeStopBtn.Position = UDim2.new(0, 5, 0, currentY)
    antiTimeStopBtn.Text = "ANTI TIME STOP"
    antiTimeStopBtn.Font = Enum.Font.GothamBold
    antiTimeStopBtn.TextSize = 14
    antiTimeStopBtn.TextColor3 = Color3.new(1,1,1)
    antiTimeStopBtn.BackgroundColor3 = Color3.fromRGB(255,100,100)
    antiTimeStopBtn.AutoButtonColor = false
    Instance.new("UICorner", antiTimeStopBtn).CornerRadius = UDim.new(0,6)
    currentY = currentY + 28 + padding
    
    antiTimeStopBtn.MouseButton1Click:Connect(function()
        antiTimeStopBtn.Text = "ANTI TIME STOP ACTIVE"
        antiTimeStopBtn.BackgroundColor3 = Color3.fromRGB(0,255,0)
        
        spawn(function()
            task.wait(0.1)
            
            antiTimeStopBtn.Text = "ANTI TIME STOP"
            antiTimeStopBtn.BackgroundColor3 = Color3.fromRGB(255,100,100)
            print("Anti TS: –ì–û–¢–û–í–û!")
        end)
    end)
    
    createDivider()
    
    createSectionHeader("üë• PLAYER ESP")
    createToggleSlider("User Stand", false, function(v)
        print("User Stand ESP:", v and "ENABLED" or "DISABLED")
    end)
    
    createToggleSlider("Items ESP", YBAConfig.ItemESP.Enabled, function(v)
        YBAConfig.ItemESP.Enabled = v
        print("Items ESP:", v and "ENABLED" or "DISABLED")
    end)
    
    createDivider()
    
    createSectionHeader("ü§ñ AUTOSELL")
    local autosellBtn = Instance.new("TextButton", functionsContainer)
    autosellBtn.Size = UDim2.new(1, -10, 0, 28)
    autosellBtn.Position = UDim2.new(0, 5, 0, currentY)
    autosellBtn.Text = "LOAD AUTOSELL MODULE"
    autosellBtn.Font = Enum.Font.GothamBold
    autosellBtn.TextSize = 14
    autosellBtn.TextColor3 = Color3.new(1,1,1)
    autosellBtn.BackgroundColor3 = Color3.fromRGB(100,100,255)
    autosellBtn.AutoButtonColor = false
    Instance.new("UICorner", autosellBtn).CornerRadius = UDim.new(0,6)
    currentY = currentY + 28 + padding
    
    autosellBtn.MouseButton1Click:Connect(function()
        autosellBtn.Text = "AUTOSELL MODULE LOADED"
        autosellBtn.BackgroundColor3 = Color3.fromRGB(0,255,0)
        print("ü§ñ AUTOSELL: –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω!")
    end)
    
    functionsContainer.Size = UDim2.new(1, 0, 0, currentY)
end

-- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
_G.SSLKIN_YBA = showYBAContent

print("‚úÖ SSLKIN: YBA Hacks –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω")
]])()

-- –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
task.wait(0.1)

-- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
local function showContent(tabName)
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    if selectedTab and scrollFrame then
        tabScrollPositions[selectedTab] = scrollFrame.CanvasPosition.Y
    end
    
    selectedTab = tabName
    _G.SSLKIN_GUI.selectedTab = selectedTab
    
    if tabName == "Main" or tabName == "Settings" then
        if _G.SSLKIN_MAIN_SETTINGS then
            _G.SSLKIN_MAIN_SETTINGS(tabName)
        end
    elseif tabName == "YBA Hacks" then
        if _G.SSLKIN_YBA then
            _G.SSLKIN_YBA()
        end
    end
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    if scrollFrame and tabScrollPositions[tabName] then
        scrollFrame.CanvasPosition = Vector2.new(0, tabScrollPositions[tabName])
    end
end

-- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
_G.SSLKIN_GUI.showContent = showContent

-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
showContent("Main")

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.Insert then
        mainFrame.Visible = not mainFrame.Visible
    end
end)

print("üéâ SSLKIN: –ü–æ–ª–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–∞–∂–º–∏—Ç–µ INSERT –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è")