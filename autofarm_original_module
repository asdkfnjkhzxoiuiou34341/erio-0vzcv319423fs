-- ===== ORIGINAL AUTOFARM MODULE =====
-- –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –∏–∑ huyna2, –≤—ã–Ω–µ—Å–µ–Ω–Ω—ã–π –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
-- –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã

print("üöú –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å Autofarm...")

-- –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —É—Ç–∏–ª–∏—Ç–∞–º –∏ —Å–µ—Ä–≤–∏—Å–∞–º
local Utils = _G.ModuleUtils
local Services = Utils.Services
local Players = Services.Players
local RunService = Services.RunService
local UserInputService = Services.UserInputService

-- –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ (152-182 —Å—Ç—Ä–æ–∫–∏)
local AutofarmConfig = {
    Enabled = false,
    ToggleKey = nil,
    UseFlightMovement = true,
    UseNoClipMovement = true,
    FlightSpeed = 100,
    PickupRadius = 8,
    PickupDuration = 0.25,
    PickupKey = Enum.KeyCode.E,
    ScanInterval = 1,
    Items = {
        ["Mysterious Arrow"] = true,
        ["Rokakaka"] = true,
        ["Pure Rokakaka"] = true,
        ["Diamond"] = true,
        ["Gold Coin"] = true,
        ["Steel Ball"] = true,
        ["Clackers"] = true,
        ["Caesar's Headband"] = true,
        ["Zeppeli's Hat"] = true,
        ["Zeppeli's Scarf"] = true,
        ["Ancient Scroll"] = true,
        ["Quinton's Glove"] = false,
        ["Stone Mask"] = true,
        ["Lucky Arrow"] = true,
        ["Lucky Stone Mask"] = true,
        ["Rib Cage of The Saint's Corpse"] = true,
        ["DIO's Diary"] = true,
        ["Dio's Diary"] = true,
    }
}

-- –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ (270-284 —Å—Ç—Ä–æ–∫–∏)
local isAutofarmEnabled = false
local autofarmConnections = {}
local autofarmCurrentTarget = nil
local autofarmItemQueue = {}
local autofarmOriginalPosition = nil
local autofarmPickingUp = false
local autofarmSkippedItems = {} -- –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
local autofarmItemAttempts = {} -- –°—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
local autofarmSkippedReturns = {} -- –°—á–µ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤ –∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–∞–º
local autofarmLastPickupTime = 0 -- –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
local autofarmRestartTimer = nil -- –¢–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥
local autofarmAutoRestarting = false -- –§–ª–∞–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
local autofarmDeathCheckConnection = nil -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–º–µ—Ä—Ç–∏ –¥–ª—è –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø–µ—Ä–µ–¥ —Å–º–µ—Ä—Ç—å—é
local wasAutofarmEnabledBeforeDeath = false
local wasAutosellEnabledBeforeDeath = false
local deathTrackingActive = false
local respawnHandler = nil

-- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
local isNoClipping = _G.isNoClipping or function() return false end
local isFlying = _G.isFlying or function() return false end
local startNoClip = _G.startNoClip or function() print("NoClip –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω") end
local stopNoClip = _G.stopNoClip or function() print("NoClip –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω") end

-- –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –ê–í–¢–û–§–ê–†–ú–ê (4122-5200 —Å—Ç—Ä–æ–∫–∏)

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
local function getItemKey(item)
    return item.Name .. "_" .. tostring(item.Position.X) .. "_" .. tostring(item.Position.Z)
end

-- –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
local function resetItemAttempts(itemKey)
    autofarmItemAttempts[itemKey] = nil
end

-- –§—É–Ω–∫—Ü–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫
local function incrementItemAttempts(itemKey)
    autofarmItemAttempts[itemKey] = (autofarmItemAttempts[itemKey] or 0) + 1
    return autofarmItemAttempts[itemKey]
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
local function isItemMaxAttempts(itemKey)
    return (autofarmItemAttempts[itemKey] or 0) >= 3
end

local function findAutofarmItems()
    local items = {}
    local player = Players.LocalPlayer
    local playerChar = player.Character
    local playerRoot = playerChar and playerChar:FindFirstChild("HumanoidRootPart")
    if not playerRoot then 
        print("AUTOFARM: –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return items 
    end

    print("AUTOFARM: –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...")
    
    -- –ò—â–µ–º –ø–æ —Ç–æ—á–Ω–æ–º—É –ø—É—Ç–∏ workspace > Item_Spawns > Items
    local itemSpawnsFolder = workspace:FindFirstChild("Item_Spawns")
    if not itemSpawnsFolder then
        print("AUTOFARM: –ü–∞–ø–∫–∞ Item_Spawns –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return items
    end
    
    local itemsFolder = itemSpawnsFolder:FindFirstChild("Items")
    if not itemsFolder then
        print("AUTOFARM: –ü–∞–ø–∫–∞ Items –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return items
    end
    
    print("AUTOFARM: –ü–∞–ø–∫–∏ –Ω–∞–π–¥–µ–Ω—ã, —Å–∫–∞–Ω–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏...")
    local foundCount = 0
    
    for _, model in ipairs(itemsFolder:GetChildren()) do
        if model:IsA("Model") then
            -- –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ ProximityPrompt
            local proximityPrompt = model:FindFirstChild("ProximityPrompt")
            local itemName = model.Name
            
            if proximityPrompt then
                itemName = proximityPrompt.ObjectText or proximityPrompt.ActionText or model.Name
            end
            
            -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞ –î–ò–û (—Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π)
            if itemName == "Dio's Diary" and AutofarmConfig.Items["DIO's Diary"] then
                itemName = "DIO's Diary" -- —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
            end
            
            -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å—Ç—Ä–µ–ª (—Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π)
            local shouldSkipItem = false
            if string.find(string.lower(itemName), "arrow") and not AutofarmConfig.Items["Mysterious Arrow"] then
                shouldSkipItem = true
            end
            
            -- –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–µ–ª
            if not shouldSkipItem and string.find(string.lower(itemName), "arrow") and itemName ~= "Mysterious Arrow" then
                itemName = "Mysterious Arrow"
            end
            if not shouldSkipItem and AutofarmConfig.Items[itemName] then
                -- –ò—â–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ model -> MeshPart -> BodyPosition.Position
                local worldPivot = nil
                
                -- –ò—â–µ–º –ø–µ—Ä–≤—É—é –ø–∞–ø–∫—É MeshPart –≤ model
                local meshPart = nil
                for _, child in ipairs(model:GetChildren()) do
                    if child:IsA("MeshPart") then
                        meshPart = child
                        break
                    end
                end
                
                if meshPart then
                    -- –ò—â–µ–º BodyPosition –≤ MeshPart
                    local bodyPosition = meshPart:FindFirstChild("BodyPosition")
                    if bodyPosition and bodyPosition.Position then
                        worldPivot = bodyPosition.Position
                        print("AUTOFARM: –ù–∞–π–¥–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏—è —á–µ—Ä–µ–∑ BodyPosition:", worldPivot)
                    end
                end
                
                -- Fallback: –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω BodyPosition, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É
                if not worldPivot then
                    print("AUTOFARM: BodyPosition –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –ª–æ–≥–∏–∫—É –¥–ª—è", itemName)
                    if model.WorldPivot then
                        worldPivot = model.WorldPivot.Position
                    elseif model.PrimaryPart then
                        worldPivot = model.PrimaryPart.Position
                    elseif model:FindFirstChild("HumanoidRootPart") then
                        worldPivot = model.HumanoidRootPart.Position
                    else
                        -- –ò—â–µ–º –ª—é–±—É—é Part
                        for _, child in ipairs(model:GetDescendants()) do
                            if child:IsA("BasePart") then
                                worldPivot = child.Position
                                break
                            end
                        end
                    end
                end
                
                if worldPivot then
                    local distance = (worldPivot - playerRoot.Position).Magnitude
                    foundCount = foundCount + 1
                    local tempItem = {
                        Name = itemName,
                        Position = worldPivot,
                        Distance = distance,
                        Model = model,
                        ProximityPrompt = proximityPrompt
                    }
                    local itemKey = getItemKey(tempItem)
                    
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
                    if not isItemMaxAttempts(itemKey) then
                        -- –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –ø–æ–ø—ã—Ç–∫—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å
                        if (autofarmItemAttempts[itemKey] or 0) == 0 then
                            print("AUTOFARM: üéØ –ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç", itemName, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏", math.floor(distance), "–º")
                        end
                        table.insert(items, tempItem)
                    else
                        print("AUTOFARM: –ü—Ä–µ–¥–º–µ—Ç", itemName, "–ø—Ä–æ–ø—É—â–µ–Ω - –ø—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ (3/3)")
                        -- –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–∑–∂–µ
                        autofarmSkippedItems[itemKey] = tempItem
                    end
                end
            end -- –ó–∞–∫—Ä—ã–≤–∞–µ–º if AutofarmConfig.Items[itemName] then
        end
    end
    
    -- –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é (–±–ª–∏–∂–∞–π—à–∏–µ –ø–µ—Ä–≤—ã–º–∏)
    table.sort(items, function(a, b) return a.Distance < b.Distance end)
    
    -- –£–±–∏—Ä–∞–µ–º —Å–ø–∞–º –ø—Ä–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    return items
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ BodyPosition
local function getCurrentItemPosition(item)
    if not item or not item.Model then
        return nil
    end
    
    -- –ò—â–µ–º –ø–µ—Ä–≤—É—é –ø–∞–ø–∫—É MeshPart –≤ model
    local meshPart = nil
    for _, child in ipairs(item.Model:GetChildren()) do
        if child:IsA("MeshPart") then
            meshPart = child
            break
        end
    end
    
    if meshPart then
        -- –ò—â–µ–º BodyPosition –≤ MeshPart
        local bodyPosition = meshPart:FindFirstChild("BodyPosition")
        if bodyPosition and bodyPosition.Position then
            return bodyPosition.Position
        end
    end
    
    -- Fallback –∫ —Å—Ç–∞—Ç–∏—á–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
    return item.Position
end

local function moveToPosition(targetPosition, callback, trackingItem)
    local player = Players.LocalPlayer
    local character = player.Character
    if not character then
        print("AUTOFARM: –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        print("AUTOFARM: HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    -- –í–∫–ª—é—á–∞–µ–º NoClip –¥–ª—è –ø—Ä–æ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –∑–µ–º–ª—é
    if AutofarmConfig.UseNoClipMovement and not isNoClipping() then
        startNoClip()
        print("AUTOFARM: NoClip –≤–∫–ª—é—á–µ–Ω –¥–ª—è —Ç—Ä—ë—Ö—ç—Ç–∞–ø–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
    end
    
    -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –ø–æ–ª–µ—Ç–∞
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.JumpPower = 0
        humanoid.JumpHeight = 0
        humanoid.HipHeight = 0
    end
    
    -- –°–æ–∑–¥–∞–µ–º BodyVelocity –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è
    local bodyVelocity = humanoidRootPart:FindFirstChild("AutofarmBodyVelocity")
    if not bodyVelocity then
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Name = "AutofarmBodyVelocity"
        bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        bodyVelocity.Parent = humanoidRootPart
    end
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if AutofarmConfig.UseFlightMovement then
        workspace.Gravity = 0
        print("AUTOFARM: –ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞")
    end
    
    -- –¢–†–Å–•–≠–¢–ê–ü–ù–û–ï –î–í–ò–ñ–ï–ù–ò–ï:
    -- –≠—Ç–∞–ø 1: –°–ø—É—Å–∫ –Ω–∞ Y = -70
    -- –≠—Ç–∞–ø 2: –ü–æ–ª—ë—Ç –ø–æ X,Z –∫ –ø—Ä–µ–¥–º–µ—Ç—É
    -- –≠—Ç–∞–ø 3: –ü–æ–¥—ä—ë–º –ø–æ Y –¥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ —Å –æ—Ç—Å—Ç—É–ø–æ–º -2
    
    local currentStage = 1
    local currentPos = humanoidRootPart.Position
    local stage1Target = Vector3.new(currentPos.X, -70, currentPos.Z)  -- –°–ø—É—Å–∫ –Ω–∞ -70 –ø–æ Y
    local stage2Target = Vector3.new(targetPosition.X, -70, targetPosition.Z)  -- –ü–æ–ª—ë—Ç –ø–æ X,Z –Ω–∞ —É—Ä–æ–≤–Ω–µ -70
    local stage3Target = Vector3.new(targetPosition.X, targetPosition.Y - 2, targetPosition.Z)  -- –ü–æ–¥—ä—ë–º –∫ –ø—Ä–µ–¥–º–µ—Ç—É —Å –æ—Ç—Å—Ç—É–ø–æ–º -2
    
    print("AUTOFARM: üéØ –¢—Ä—ë—Ö—ç—Ç–∞–ø–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫ –ø–æ–∑–∏—Ü–∏–∏", targetPosition)
    print("AUTOFARM: –≠—Ç–∞–ø 1: –°–ø—É—Å–∫ –Ω–∞ Y=-70 ->", stage1Target)
    print("AUTOFARM: –≠—Ç–∞–ø 2: –ü–æ–ª—ë—Ç –ø–æ X,Z ->", stage2Target) 
    print("AUTOFARM: –≠—Ç–∞–ø 3: –ü–æ–¥—ä—ë–º –∫ –ø—Ä–µ–¥–º–µ—Ç—É ->", stage3Target)
    
    local moveConnection
    
    moveConnection = RunService.Heartbeat:Connect(function()
        if not isAutofarmEnabled then
            -- –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞ –æ—á–∏—â–∞–µ–º BodyVelocity
            if bodyVelocity and bodyVelocity.Parent then
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                bodyVelocity:Destroy()
            end
            moveConnection:Disconnect()
            return
        end
        
        local currentPos = humanoidRootPart.Position
        local currentTarget
        
        -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–∞–ø–∞
        if currentStage == 1 then
            currentTarget = stage1Target
        elseif currentStage == 2 then
            currentTarget = stage2Target
        else
            -- –≠—Ç–∞–ø 3: –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω trackingItem
            if trackingItem then
                local currentItemPos = getCurrentItemPosition(trackingItem)
                if currentItemPos then
                    local newTarget = Vector3.new(currentItemPos.X, currentItemPos.Y - 2, currentItemPos.Z)
                    -- –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ
                    if (newTarget - stage3Target).Magnitude > 0.5 then
                        print("AUTOFARM: üìç –ü–æ–∑–∏—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å:", currentItemPos, "-> —Ü–µ–ª—å:", newTarget)
                    end
                    stage3Target = newTarget
                end
            end
            currentTarget = stage3Target
        end
        
        local distance = (currentTarget - currentPos).Magnitude
        
        if distance > 0.3 then
            local direction = (currentTarget - currentPos).Unit
            -- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
            local dynamicSpeed = math.max(20, math.min(AutofarmConfig.FlightSpeed * 8, distance * 25))
            local moveVector = direction * dynamicSpeed
            bodyVelocity.Velocity = moveVector
        else
            -- –î–æ—Å—Ç–∏–≥–ª–∏ —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            
            if currentStage == 1 then
                print("AUTOFARM: ‚úÖ –≠—Ç–∞–ø 1 –∑–∞–≤–µ—Ä—à—ë–Ω - —Å–ø—É—Å—Ç–∏–ª–∏—Å—å –Ω–∞ Y=-70")
                currentStage = 2
            elseif currentStage == 2 then
                print("AUTOFARM: ‚úÖ –≠—Ç–∞–ø 2 –∑–∞–≤–µ—Ä—à—ë–Ω - –¥–æ—Å—Ç–∏–≥–ª–∏ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ X,Z")
                currentStage = 3
            else
                -- –≠—Ç–∞–ø 3 –∑–∞–≤–µ—Ä—à—ë–Ω - –¥–æ—Å—Ç–∏–≥–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
                local finalDistance = (stage3Target - humanoidRootPart.Position).Magnitude
                print("AUTOFARM: ‚úÖ –≠—Ç–∞–ø 3 –∑–∞–≤–µ—Ä—à—ë–Ω - –¥–æ—Å—Ç–∏–≥–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–∞, —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:", math.floor(finalDistance * 10) / 10, "–º")
                
                moveConnection:Disconnect()
                if callback then
                    callback()
                end
            end
        end
    end)
    
    table.insert(autofarmConnections, moveConnection)
    return true
end

-- –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏... (—Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π)